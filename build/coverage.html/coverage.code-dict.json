{"/home/travis/build/npmtest/node-npmtest-webpack/test.js":"/* istanbul instrument in package npmtest_webpack */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - pre-init\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        switch (local.modeJs) {\n        // re-init local from window.local\n        case 'browser':\n            local = local.global.utility2.objectSetDefault(\n                local.global.utility2_rollup || local.global.local,\n                local.global.utility2\n            );\n            break;\n        // re-init local from example.js\n        case 'node':\n            local = (local.global.utility2_rollup || require('utility2'))\n                .requireExampleJsFromReadme();\n            break;\n        }\n        // export local\n        local.global.local = local;\n    }());\n\n\n\n    // run shared js-env code - function\n    (function () {\n        return;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // run browser js-env code - function\n    case 'browser':\n        break;\n\n\n\n    // run node js-env code - function\n    case 'node':\n        break;\n    }\n\n\n\n    // run shared js-env code - post-init\n    (function () {\n        return;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // run browser js-env code - post-init\n    case 'browser':\n        local.testCase_browser_nullCase = local.testCase_browser_nullCase || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test browsers's null-case handling-behavior-behavior\n         */\n            onError(null, options);\n        };\n\n        // run tests\n        local.nop(local.modeTest &&\n            document.querySelector('#testRunButton1') &&\n            document.querySelector('#testRunButton1').click());\n        break;\n\n\n\n    // run node js-env code - post-init\n    /* istanbul ignore next */\n    case 'node':\n        local.testCase_buildApidoc_default = local.testCase_buildApidoc_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildApidoc's default handling-behavior-behavior\n         */\n            options = { modulePathList: module.paths };\n            local.buildApidoc(options, onError);\n        };\n\n        local.testCase_buildApp_default = local.testCase_buildApp_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildApp's default handling-behavior-behavior\n         */\n            local.testCase_buildReadme_default(options, local.onErrorThrow);\n            local.testCase_buildLib_default(options, local.onErrorThrow);\n            local.testCase_buildTest_default(options, local.onErrorThrow);\n            local.testCase_buildCustomOrg_default(options, local.onErrorThrow);\n            options = [];\n            local.buildApp(options, onError);\n        };\n\n        local.testCase_buildCustomOrg_default = local.testCase_buildCustomOrg_default ||\n            function (options, onError) {\n            /*\n             * this function will test buildCustomOrg's default handling-behavior\n             */\n                options = {};\n                local.buildCustomOrg(options, onError);\n            };\n\n        local.testCase_buildLib_default = local.testCase_buildLib_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildLib's default handling-behavior\n         */\n            options = {};\n            local.buildLib(options, onError);\n        };\n\n        local.testCase_buildReadme_default = local.testCase_buildReadme_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildReadme's default handling-behavior-behavior\n         */\n            options = {};\n            local.buildReadme(options, onError);\n        };\n\n        local.testCase_buildTest_default = local.testCase_buildTest_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildTest's default handling-behavior\n         */\n            options = {};\n            local.buildTest(options, onError);\n        };\n\n        local.testCase_webpage_default = local.testCase_webpage_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test webpage's default handling-behavior\n         */\n            options = { modeCoverageMerge: true, url: local.serverLocalHost + '?modeTest=1' };\n            local.browserTest(options, onError);\n        };\n\n        // run test-server\n        local.testRunServer(local);\n        break;\n    }\n}());\n","/home/travis/build/npmtest/node-npmtest-webpack/lib.npmtest_webpack.js":"/* istanbul instrument in package npmtest_webpack */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - pre-init\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        // init utility2_rollup\n        local = local.global.utility2_rollup || local;\n        // init lib\n        local.local = local.npmtest_webpack = local;\n        // init exports\n        if (local.modeJs === 'browser') {\n            local.global.utility2_npmtest_webpack = local;\n        } else {\n            module.exports = local;\n            module.exports.__dirname = __dirname;\n            module.exports.module = module;\n        }\n    }());\n}());\n","/home/travis/build/npmtest/node-npmtest-webpack/example.js":"/*\nexample.js\n\nquickstart example\n\ninstruction\n    1. save this script as example.js\n    2. run the shell command:\n        $ npm install npmtest-webpack && PORT=8081 node example.js\n    3. play with the browser-demo on http://127.0.0.1:8081\n*/\n\n\n\n/* istanbul instrument in package npmtest_webpack */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - pre-init\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        // init utility2_rollup\n        local = local.global.utility2_rollup || (local.modeJs === 'browser'\n            ? local.global.utility2_npmtest_webpack\n            : global.utility2_moduleExports);\n        // export local\n        local.global.local = local;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // post-init\n    // run browser js-env code - post-init\n    /* istanbul ignore next */\n    case 'browser':\n        local.testRunBrowser = function (event) {\n            if (!event || (event &&\n                    event.currentTarget &&\n                    event.currentTarget.className &&\n                    event.currentTarget.className.includes &&\n                    event.currentTarget.className.includes('onreset'))) {\n                // reset output\n                Array.from(\n                    document.querySelectorAll('body > .resettable')\n                ).forEach(function (element) {\n                    switch (element.tagName) {\n                    case 'INPUT':\n                    case 'TEXTAREA':\n                        element.value = '';\n                        break;\n                    default:\n                        element.textContent = '';\n                    }\n                });\n            }\n            switch (event && event.currentTarget && event.currentTarget.id) {\n            case 'testRunButton1':\n                // show tests\n                if (document.querySelector('#testReportDiv1').style.display === 'none') {\n                    document.querySelector('#testReportDiv1').style.display = 'block';\n                    document.querySelector('#testRunButton1').textContent =\n                        'hide internal test';\n                    local.modeTest = true;\n                    local.testRunDefault(local);\n                // hide tests\n                } else {\n                    document.querySelector('#testReportDiv1').style.display = 'none';\n                    document.querySelector('#testRunButton1').textContent = 'run internal test';\n                }\n                break;\n            // custom-case\n            default:\n                break;\n            }\n            if (document.querySelector('#inputTextareaEval1') && (!event || (event &&\n                    event.currentTarget &&\n                    event.currentTarget.className &&\n                    event.currentTarget.className.includes &&\n                    event.currentTarget.className.includes('oneval')))) {\n                // try to eval input-code\n                try {\n                    /*jslint evil: true*/\n                    eval(document.querySelector('#inputTextareaEval1').value);\n                } catch (errorCaught) {\n                    console.error(errorCaught);\n                }\n            }\n        };\n        // log stderr and stdout to #outputTextareaStdout1\n        ['error', 'log'].forEach(function (key) {\n            console[key + '_original'] = console[key];\n            console[key] = function () {\n                var element;\n                console[key + '_original'].apply(console, arguments);\n                element = document.querySelector('#outputTextareaStdout1');\n                if (!element) {\n                    return;\n                }\n                // append text to #outputTextareaStdout1\n                element.value += Array.from(arguments).map(function (arg) {\n                    return typeof arg === 'string'\n                        ? arg\n                        : JSON.stringify(arg, null, 4);\n                }).join(' ') + '\\n';\n                // scroll textarea to bottom\n                element.scrollTop = element.scrollHeight;\n            };\n        });\n        // init event-handling\n        ['change', 'click', 'keyup'].forEach(function (event) {\n            Array.from(document.querySelectorAll('.on' + event)).forEach(function (element) {\n                element.addEventListener(event, local.testRunBrowser);\n            });\n        });\n        // run tests\n        local.testRunBrowser();\n        break;\n\n\n\n    // run node js-env code - post-init\n    /* istanbul ignore next */\n    case 'node':\n        // export local\n        module.exports = local;\n        // require modules\n        local.fs = require('fs');\n        local.http = require('http');\n        local.url = require('url');\n        // init assets\n        local.assetsDict = local.assetsDict || {};\n        /* jslint-ignore-begin */\n        local.assetsDict['/assets.index.template.html'] = '\\\n<!doctype html>\\n\\\n<html lang=\"en\">\\n\\\n<head>\\n\\\n<meta charset=\"UTF-8\">\\n\\\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\\n\\\n<title>{{env.npm_package_name}} (v{{env.npm_package_version}})</title>\\n\\\n<style>\\n\\\n/*csslint\\n\\\n    box-sizing: false,\\n\\\n    universal-selector: false\\n\\\n*/\\n\\\n* {\\n\\\n    box-sizing: border-box;\\n\\\n}\\n\\\nbody {\\n\\\n    background: #dde;\\n\\\n    font-family: Arial, Helvetica, sans-serif;\\n\\\n    margin: 2rem;\\n\\\n}\\n\\\nbody > * {\\n\\\n    margin-bottom: 1rem;\\n\\\n}\\n\\\n.utility2FooterDiv {\\n\\\n    margin-top: 20px;\\n\\\n    text-align: center;\\n\\\n}\\n\\\n</style>\\n\\\n<style>\\n\\\n/*csslint\\n\\\n*/\\n\\\ntextarea {\\n\\\n    font-family: monospace;\\n\\\n    height: 10rem;\\n\\\n    width: 100%;\\n\\\n}\\n\\\ntextarea[readonly] {\\n\\\n    background: #ddd;\\n\\\n}\\n\\\n</style>\\n\\\n</head>\\n\\\n<body>\\n\\\n<!-- utility2-comment\\n\\\n<div id=\"ajaxProgressDiv1\" style=\"background: #d00; height: 2px; left: 0; margin: 0; padding: 0; position: fixed; top: 0; transition: background 0.5s, width 1.5s; width: 25%;\"></div>\\n\\\nutility2-comment -->\\n\\\n<h1>\\n\\\n<!-- utility2-comment\\n\\\n    <a\\n\\\n        {{#if env.npm_package_homepage}}\\n\\\n        href=\"{{env.npm_package_homepage}}\"\\n\\\n        {{/if env.npm_package_homepage}}\\n\\\n        target=\"_blank\"\\n\\\n    >\\n\\\nutility2-comment -->\\n\\\n        {{env.npm_package_name}} (v{{env.npm_package_version}})\\n\\\n<!-- utility2-comment\\n\\\n    </a>\\n\\\nutility2-comment -->\\n\\\n</h1>\\n\\\n<h3>{{env.npm_package_description}}</h3>\\n\\\n<!-- utility2-comment\\n\\\n<h4><a download href=\"assets.app.js\">download standalone app</a></h4>\\n\\\n<button class=\"onclick onreset\" id=\"testRunButton1\">run internal test</button><br>\\n\\\n<div id=\"testReportDiv1\" style=\"display: none;\"></div>\\n\\\nutility2-comment -->\\n\\\n\\n\\\n\\n\\\n\\n\\\n<label>stderr and stdout</label>\\n\\\n<textarea class=\"resettable\" id=\"outputTextareaStdout1\" readonly></textarea>\\n\\\n<!-- utility2-comment\\n\\\n{{#if isRollup}}\\n\\\n<script src=\"assets.app.js\"></script>\\n\\\n{{#unless isRollup}}\\n\\\nutility2-comment -->\\n\\\n<script src=\"assets.utility2.rollup.js\"></script>\\n\\\n<script src=\"jsonp.utility2._stateInit?callback=window.utility2._stateInit\"></script>\\n\\\n<script src=\"assets.npmtest_webpack.rollup.js\"></script>\\n\\\n<script src=\"assets.example.js\"></script>\\n\\\n<script src=\"assets.test.js\"></script>\\n\\\n<!-- utility2-comment\\n\\\n{{/if isRollup}}\\n\\\nutility2-comment -->\\n\\\n<div class=\"utility2FooterDiv\">\\n\\\n    [ this app was created with\\n\\\n    <a href=\"https://github.com/kaizhu256/node-utility2\" target=\"_blank\">utility2</a>\\n\\\n    ]\\n\\\n</div>\\n\\\n</body>\\n\\\n</html>\\n\\\n';\n        /* jslint-ignore-end */\n        if (local.templateRender) {\n            local.assetsDict['/'] = local.templateRender(\n                local.assetsDict['/assets.index.template.html'],\n                {\n                    env: local.objectSetDefault(local.env, {\n                        npm_package_description: 'the greatest app in the world!',\n                        npm_package_name: 'my-app',\n                        npm_package_nameAlias: 'my_app',\n                        npm_package_version: '0.0.1'\n                    })\n                }\n            );\n        } else {\n            local.assetsDict['/'] = local.assetsDict['/assets.index.template.html']\n                .replace((/\\{\\{env\\.(\\w+?)\\}\\}/g), function (match0, match1) {\n                    // jslint-hack\n                    String(match0);\n                    switch (match1) {\n                    case 'npm_package_description':\n                        return 'the greatest app in the world!';\n                    case 'npm_package_name':\n                        return 'my-app';\n                    case 'npm_package_nameAlias':\n                        return 'my_app';\n                    case 'npm_package_version':\n                        return '0.0.1';\n                    }\n                });\n        }\n        // run the cli\n        if (local.global.utility2_rollup || module !== require.main) {\n            break;\n        }\n        local.assetsDict['/assets.example.js'] =\n            local.assetsDict['/assets.example.js'] ||\n            local.fs.readFileSync(__filename, 'utf8');\n        // bug-workaround - long $npm_package_buildCustomOrg\n        /* jslint-ignore-begin */\n        local.assetsDict['/assets.npmtest_webpack.rollup.js'] =\n            local.assetsDict['/assets.npmtest_webpack.rollup.js'] ||\n            local.fs.readFileSync(\n                local.npmtest_webpack.__dirname + '/lib.npmtest_webpack.js',\n                'utf8'\n            ).replace((/^#!/), '//');\n        /* jslint-ignore-end */\n        local.assetsDict['/favicon.ico'] = local.assetsDict['/favicon.ico'] || '';\n        // if $npm_config_timeout_exit exists,\n        // then exit this process after $npm_config_timeout_exit ms\n        if (Number(process.env.npm_config_timeout_exit)) {\n            setTimeout(process.exit, Number(process.env.npm_config_timeout_exit));\n        }\n        // start server\n        if (local.global.utility2_serverHttp1) {\n            break;\n        }\n        process.env.PORT = process.env.PORT || '8081';\n        console.error('server starting on port ' + process.env.PORT);\n        local.http.createServer(function (request, response) {\n            request.urlParsed = local.url.parse(request.url);\n            if (local.assetsDict[request.urlParsed.pathname] !== undefined) {\n                response.end(local.assetsDict[request.urlParsed.pathname]);\n                return;\n            }\n            response.statusCode = 404;\n            response.end();\n        }).listen(process.env.PORT);\n        break;\n    }\n}());\n","/home/travis/build/npmtest/node-npmtest-webpack/node_modules/webpack/lib/webpack.js":"/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\n\"use strict\";\r\n\r\nconst Compiler = require(\"./Compiler\");\r\nconst MultiCompiler = require(\"./MultiCompiler\");\r\nconst NodeEnvironmentPlugin = require(\"./node/NodeEnvironmentPlugin\");\r\nconst WebpackOptionsApply = require(\"./WebpackOptionsApply\");\r\nconst WebpackOptionsDefaulter = require(\"./WebpackOptionsDefaulter\");\r\nconst validateSchema = require(\"./validateSchema\");\r\nconst WebpackOptionsValidationError = require(\"./WebpackOptionsValidationError\");\r\nconst webpackOptionsSchema = require(\"../schemas/webpackOptionsSchema.json\");\r\n\r\nfunction webpack(options, callback) {\r\n\tconst webpackOptionsValidationErrors = validateSchema(webpackOptionsSchema, options);\r\n\tif(webpackOptionsValidationErrors.length) {\r\n\t\tthrow new WebpackOptionsValidationError(webpackOptionsValidationErrors);\r\n\t}\r\n\tlet compiler;\r\n\tif(Array.isArray(options)) {\r\n\t\tcompiler = new MultiCompiler(options.map(options => webpack(options)));\r\n\t} else if(typeof options === \"object\") {\r\n\t\tnew WebpackOptionsDefaulter().process(options);\r\n\r\n\t\tcompiler = new Compiler();\r\n\t\tcompiler.context = options.context;\r\n\t\tcompiler.options = options;\r\n\t\tnew NodeEnvironmentPlugin().apply(compiler);\r\n\t\tif(options.plugins && Array.isArray(options.plugins)) {\r\n\t\t\tcompiler.apply.apply(compiler, options.plugins);\r\n\t\t}\r\n\t\tcompiler.applyPlugins(\"environment\");\r\n\t\tcompiler.applyPlugins(\"after-environment\");\r\n\t\tcompiler.options = new WebpackOptionsApply().process(options, compiler);\r\n\t} else {\r\n\t\tthrow new Error(\"Invalid argument: options\");\r\n\t}\r\n\tif(callback) {\r\n\t\tif(typeof callback !== \"function\") throw new Error(\"Invalid argument: callback\");\r\n\t\tif(options.watch === true || (Array.isArray(options) && options.some(o => o.watch))) {\r\n\t\t\tconst watchOptions = Array.isArray(options) ? options.map(o => o.watchOptions || {}) : (options.watchOptions || {});\r\n\t\t\treturn compiler.watch(watchOptions, callback);\r\n\t\t}\r\n\t\tcompiler.run(callback);\r\n\t}\r\n\treturn compiler;\r\n}\r\nexports = module.exports = webpack;\r\n\r\nwebpack.WebpackOptionsDefaulter = WebpackOptionsDefaulter;\r\nwebpack.WebpackOptionsApply = WebpackOptionsApply;\r\nwebpack.Compiler = Compiler;\r\nwebpack.MultiCompiler = MultiCompiler;\r\nwebpack.NodeEnvironmentPlugin = NodeEnvironmentPlugin;\r\nwebpack.validate = validateSchema.bind(this, webpackOptionsSchema);\r\nwebpack.validateSchema = validateSchema;\r\nwebpack.WebpackOptionsValidationError = WebpackOptionsValidationError;\r\n\r\nfunction exportPlugins(exports, path, plugins) {\r\n\tplugins.forEach(name => {\r\n\t\tObject.defineProperty(exports, name, {\r\n\t\t\tconfigurable: false,\r\n\t\t\tenumerable: true,\r\n\t\t\tget() {\r\n\t\t\t\treturn require(`${path}/${name}`);\r\n\t\t\t}\r\n\t\t});\r\n\t});\r\n}\r\n\r\nexportPlugins(exports, \".\", [\r\n\t\"DefinePlugin\",\r\n\t\"NormalModuleReplacementPlugin\",\r\n\t\"ContextReplacementPlugin\",\r\n\t\"IgnorePlugin\",\r\n\t\"WatchIgnorePlugin\",\r\n\t\"BannerPlugin\",\r\n\t\"PrefetchPlugin\",\r\n\t\"AutomaticPrefetchPlugin\",\r\n\t\"ProvidePlugin\",\r\n\t\"HotModuleReplacementPlugin\",\r\n\t\"SourceMapDevToolPlugin\",\r\n\t\"EvalSourceMapDevToolPlugin\",\r\n\t\"EvalDevToolModulePlugin\",\r\n\t\"CachePlugin\",\r\n\t\"ExtendedAPIPlugin\",\r\n\t\"ExternalsPlugin\",\r\n\t\"JsonpTemplatePlugin\",\r\n\t\"LibraryTemplatePlugin\",\r\n\t\"LoaderTargetPlugin\",\r\n\t\"MemoryOutputFileSystem\",\r\n\t\"ProgressPlugin\",\r\n\t\"SetVarMainTemplatePlugin\",\r\n\t\"UmdMainTemplatePlugin\",\r\n\t\"NoErrorsPlugin\",\r\n\t\"NoEmitOnErrorsPlugin\",\r\n\t\"NewWatchingPlugin\",\r\n\t\"EnvironmentPlugin\",\r\n\t\"DllPlugin\",\r\n\t\"DllReferencePlugin\",\r\n\t\"LoaderOptionsPlugin\",\r\n\t\"NamedModulesPlugin\",\r\n\t\"NamedChunksPlugin\",\r\n\t\"HashedModuleIdsPlugin\",\r\n\t\"ModuleFilenameHelpers\"\r\n]);\r\nexportPlugins(exports.optimize = {}, \"./optimize\", [\r\n\t\"AggressiveMergingPlugin\",\r\n\t\"AggressiveSplittingPlugin\",\r\n\t\"CommonsChunkPlugin\",\r\n\t\"ChunkModuleIdRangePlugin\",\r\n\t\"DedupePlugin\",\r\n\t\"LimitChunkCountPlugin\",\r\n\t\"MinChunkSizePlugin\",\r\n\t\"OccurrenceOrderPlugin\",\r\n\t\"UglifyJsPlugin\"\r\n]);\r\nexportPlugins(exports.dependencies = {}, \"./dependencies\", []);\r\n","/home/travis/build/npmtest/node-npmtest-webpack/node_modules/webpack/lib/Compiler.js":"/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\nvar path = require(\"path\");\r\nvar Tapable = require(\"tapable\");\r\n\r\nvar Compilation = require(\"./Compilation\");\r\n\r\nvar NormalModuleFactory = require(\"./NormalModuleFactory\");\r\nvar ContextModuleFactory = require(\"./ContextModuleFactory\");\r\n\r\nfunction Watching(compiler, watchOptions, handler) {\r\n\tthis.startTime = null;\r\n\tthis.invalid = false;\r\n\tthis.error = null;\r\n\tthis.stats = null;\r\n\tthis.handler = handler;\r\n\tthis.closed = false;\r\n\tif(typeof watchOptions === \"number\") {\r\n\t\tthis.watchOptions = {\r\n\t\t\taggregateTimeout: watchOptions\r\n\t\t};\r\n\t} else if(watchOptions && typeof watchOptions === \"object\") {\r\n\t\tthis.watchOptions = Object.assign({}, watchOptions);\r\n\t} else {\r\n\t\tthis.watchOptions = {};\r\n\t}\r\n\tthis.watchOptions.aggregateTimeout = this.watchOptions.aggregateTimeout || 200;\r\n\tthis.compiler = compiler;\r\n\tthis.running = true;\r\n\tthis.compiler.readRecords(function(err) {\r\n\t\tif(err) return this._done(err);\r\n\r\n\t\tthis._go();\r\n\t}.bind(this));\r\n}\r\n\r\nWatching.prototype._go = function() {\r\n\tvar self = this;\r\n\tself.startTime = new Date().getTime();\r\n\tself.running = true;\r\n\tself.invalid = false;\r\n\tself.compiler.applyPluginsAsync(\"watch-run\", self, function(err) {\r\n\t\tif(err) return self._done(err);\r\n\t\tself.compiler.compile(function onCompiled(err, compilation) {\r\n\t\t\tif(err) return self._done(err);\r\n\t\t\tif(self.invalid) return self._done();\r\n\r\n\t\t\tif(self.compiler.applyPluginsBailResult(\"should-emit\", compilation) === false) {\r\n\t\t\t\treturn self._done(null, compilation);\r\n\t\t\t}\r\n\r\n\t\t\tself.compiler.emitAssets(compilation, function(err) {\r\n\t\t\t\tif(err) return self._done(err);\r\n\t\t\t\tif(self.invalid) return self._done();\r\n\r\n\t\t\t\tself.compiler.emitRecords(function(err) {\r\n\t\t\t\t\tif(err) return self._done(err);\r\n\r\n\t\t\t\t\tif(compilation.applyPluginsBailResult(\"need-additional-pass\")) {\r\n\t\t\t\t\t\tcompilation.needAdditionalPass = true;\r\n\r\n\t\t\t\t\t\tvar stats = compilation.getStats();\r\n\t\t\t\t\t\tstats.startTime = self.startTime;\r\n\t\t\t\t\t\tstats.endTime = new Date().getTime();\r\n\t\t\t\t\t\tself.compiler.applyPlugins(\"done\", stats);\r\n\r\n\t\t\t\t\t\tself.compiler.applyPluginsAsync(\"additional-pass\", function(err) {\r\n\t\t\t\t\t\t\tif(err) return self._done(err);\r\n\t\t\t\t\t\t\tself.compiler.compile(onCompiled);\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn self._done(null, compilation);\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t});\r\n\t});\r\n};\r\n\r\nWatching.prototype._done = function(err, compilation) {\r\n\tthis.running = false;\r\n\tif(this.invalid) return this._go();\r\n\tthis.error = err || null;\r\n\tthis.stats = compilation ? compilation.getStats() : null;\r\n\tif(this.stats) {\r\n\t\tthis.stats.startTime = this.startTime;\r\n\t\tthis.stats.endTime = new Date().getTime();\r\n\t}\r\n\tif(this.stats)\r\n\t\tthis.compiler.applyPlugins(\"done\", this.stats);\r\n\telse\r\n\t\tthis.compiler.applyPlugins(\"failed\", this.error);\r\n\tthis.handler(this.error, this.stats);\r\n\tif(!this.error && !this.closed)\r\n\t\tthis.watch(compilation.fileDependencies, compilation.contextDependencies, compilation.missingDependencies);\r\n};\r\n\r\nWatching.prototype.watch = function(files, dirs, missing) {\r\n\tthis.pausedWatcher = null;\r\n\tthis.watcher = this.compiler.watchFileSystem.watch(files, dirs, missing, this.startTime, this.watchOptions, function(err, filesModified, contextModified, missingModified, fileTimestamps, contextTimestamps) {\r\n\t\tthis.pausedWatcher = this.watcher;\r\n\t\tthis.watcher = null;\r\n\t\tif(err) return this.handler(err);\r\n\r\n\t\tthis.compiler.fileTimestamps = fileTimestamps;\r\n\t\tthis.compiler.contextTimestamps = contextTimestamps;\r\n\t\tthis.invalidate();\r\n\t}.bind(this), function(fileName, changeTime) {\r\n\t\tthis.compiler.applyPlugins(\"invalid\", fileName, changeTime);\r\n\t}.bind(this));\r\n};\r\n\r\nWatching.prototype.invalidate = function() {\r\n\tif(this.watcher) {\r\n\t\tthis.pausedWatcher = this.watcher;\r\n\t\tthis.watcher.pause();\r\n\t\tthis.watcher = null;\r\n\t}\r\n\tif(this.running) {\r\n\t\tthis.invalid = true;\r\n\t\treturn false;\r\n\t} else {\r\n\t\tthis._go();\r\n\t}\r\n};\r\n\r\nWatching.prototype.close = function(callback) {\r\n\tif(callback === undefined) callback = function() {};\r\n\r\n\tthis.closed = true;\r\n\tif(this.watcher) {\r\n\t\tthis.watcher.close();\r\n\t\tthis.watcher = null;\r\n\t}\r\n\tif(this.pausedWatcher) {\r\n\t\tthis.pausedWatcher.close();\r\n\t\tthis.pausedWatcher = null;\r\n\t}\r\n\tif(this.running) {\r\n\t\tthis.invalid = true;\r\n\t\tthis._done = () => {\r\n\t\t\tthis.compiler.applyPlugins(\"watch-close\");\r\n\t\t\tcallback();\r\n\t\t};\r\n\t} else {\r\n\t\tthis.compiler.applyPlugins(\"watch-close\");\r\n\t\tcallback();\r\n\t}\r\n};\r\n\r\nfunction Compiler() {\r\n\tTapable.call(this);\r\n\r\n\tthis.outputPath = \"\";\r\n\tthis.outputFileSystem = null;\r\n\tthis.inputFileSystem = null;\r\n\r\n\tthis.recordsInputPath = null;\r\n\tthis.recordsOutputPath = null;\r\n\tthis.records = {};\r\n\r\n\tthis.fileTimestamps = {};\r\n\tthis.contextTimestamps = {};\r\n\r\n\tthis.resolvers = {\r\n\t\tnormal: null,\r\n\t\tloader: null,\r\n\t\tcontext: null\r\n\t};\r\n\tvar deprecationReported = false;\r\n\tthis.parser = {\r\n\t\tplugin: function(hook, fn) {\r\n\t\t\tif(!deprecationReported) {\r\n\t\t\t\tconsole.warn(\"webpack: Using compiler.parser is deprecated.\\n\" +\r\n\t\t\t\t\t\"Use compiler.plugin(\\\"compilation\\\", function(compilation, data) {\\n  data.normalModuleFactory.plugin(\\\"parser\\\", function(parser, options) { parser.plugin(/* ... */); });\\n}); instead. \" +\r\n\t\t\t\t\t\"It was called \" + new Error().stack.split(\"\\n\")[2].trim() + \".\");\r\n\t\t\t\tdeprecationReported = true;\r\n\t\t\t}\r\n\t\t\tthis.plugin(\"compilation\", function(compilation, data) {\r\n\t\t\t\tdata.normalModuleFactory.plugin(\"parser\", function(parser) {\r\n\t\t\t\t\tparser.plugin(hook, fn);\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t}.bind(this),\r\n\t\tapply: function() {\r\n\t\t\tvar args = arguments;\r\n\t\t\tif(!deprecationReported) {\r\n\t\t\t\tconsole.warn(\"webpack: Using compiler.parser is deprecated.\\n\" +\r\n\t\t\t\t\t\"Use compiler.plugin(\\\"compilation\\\", function(compilation, data) {\\n  data.normalModuleFactory.plugin(\\\"parser\\\", function(parser, options) { parser.apply(/* ... */); });\\n}); instead. \" +\r\n\t\t\t\t\t\"It was called \" + new Error().stack.split(\"\\n\")[2].trim() + \".\");\r\n\t\t\t\tdeprecationReported = true;\r\n\t\t\t}\r\n\t\t\tthis.plugin(\"compilation\", function(compilation, data) {\r\n\t\t\t\tdata.normalModuleFactory.plugin(\"parser\", function(parser) {\r\n\t\t\t\t\tparser.apply.apply(parser, args);\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t}.bind(this)\r\n\t};\r\n\r\n\tthis.options = {};\r\n}\r\nmodule.exports = Compiler;\r\n\r\nCompiler.prototype = Object.create(Tapable.prototype);\r\nCompiler.prototype.constructor = Compiler;\r\n\r\nCompiler.Watching = Watching;\r\nCompiler.prototype.watch = function(watchOptions, handler) {\r\n\tthis.fileTimestamps = {};\r\n\tthis.contextTimestamps = {};\r\n\tvar watching = new Watching(this, watchOptions, handler);\r\n\treturn watching;\r\n};\r\n\r\nCompiler.prototype.run = function(callback) {\r\n\tvar self = this;\r\n\tvar startTime = new Date().getTime();\r\n\r\n\tself.applyPluginsAsync(\"before-run\", self, function(err) {\r\n\t\tif(err) return callback(err);\r\n\r\n\t\tself.applyPluginsAsync(\"run\", self, function(err) {\r\n\t\t\tif(err) return callback(err);\r\n\r\n\t\t\tself.readRecords(function(err) {\r\n\t\t\t\tif(err) return callback(err);\r\n\r\n\t\t\t\tself.compile(function onCompiled(err, compilation) {\r\n\t\t\t\t\tif(err) return callback(err);\r\n\r\n\t\t\t\t\tif(self.applyPluginsBailResult(\"should-emit\", compilation) === false) {\r\n\t\t\t\t\t\tvar stats = compilation.getStats();\r\n\t\t\t\t\t\tstats.startTime = startTime;\r\n\t\t\t\t\t\tstats.endTime = new Date().getTime();\r\n\t\t\t\t\t\tself.applyPlugins(\"done\", stats);\r\n\t\t\t\t\t\treturn callback(null, stats);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tself.emitAssets(compilation, function(err) {\r\n\t\t\t\t\t\tif(err) return callback(err);\r\n\r\n\t\t\t\t\t\tif(compilation.applyPluginsBailResult(\"need-additional-pass\")) {\r\n\t\t\t\t\t\t\tcompilation.needAdditionalPass = true;\r\n\r\n\t\t\t\t\t\t\tvar stats = compilation.getStats();\r\n\t\t\t\t\t\t\tstats.startTime = startTime;\r\n\t\t\t\t\t\t\tstats.endTime = new Date().getTime();\r\n\t\t\t\t\t\t\tself.applyPlugins(\"done\", stats);\r\n\r\n\t\t\t\t\t\t\tself.applyPluginsAsync(\"additional-pass\", function(err) {\r\n\t\t\t\t\t\t\t\tif(err) return callback(err);\r\n\t\t\t\t\t\t\t\tself.compile(onCompiled);\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tself.emitRecords(function(err) {\r\n\t\t\t\t\t\t\tif(err) return callback(err);\r\n\r\n\t\t\t\t\t\t\tvar stats = compilation.getStats();\r\n\t\t\t\t\t\t\tstats.startTime = startTime;\r\n\t\t\t\t\t\t\tstats.endTime = new Date().getTime();\r\n\t\t\t\t\t\t\tself.applyPlugins(\"done\", stats);\r\n\t\t\t\t\t\t\treturn callback(null, stats);\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t});\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t});\r\n\t});\r\n};\r\n\r\nCompiler.prototype.runAsChild = function(callback) {\r\n\tthis.compile(function(err, compilation) {\r\n\t\tif(err) return callback(err);\r\n\r\n\t\tthis.parentCompilation.children.push(compilation);\r\n\t\tObject.keys(compilation.assets).forEach(function(name) {\r\n\t\t\tthis.parentCompilation.assets[name] = compilation.assets[name];\r\n\t\t}.bind(this));\r\n\r\n\t\tvar entries = Object.keys(compilation.entrypoints).map(function(name) {\r\n\t\t\treturn compilation.entrypoints[name].chunks;\r\n\t\t}).reduce(function(array, chunks) {\r\n\t\t\treturn array.concat(chunks);\r\n\t\t}, []);\r\n\r\n\t\treturn callback(null, entries, compilation);\r\n\t}.bind(this));\r\n};\r\n\r\nCompiler.prototype.purgeInputFileSystem = function() {\r\n\tif(this.inputFileSystem && this.inputFileSystem.purge)\r\n\t\tthis.inputFileSystem.purge();\r\n};\r\n\r\nCompiler.prototype.emitAssets = function(compilation, callback) {\r\n\tvar outputPath;\r\n\r\n\tthis.applyPluginsAsync(\"emit\", compilation, function(err) {\r\n\t\tif(err) return callback(err);\r\n\t\toutputPath = compilation.getPath(this.outputPath);\r\n\t\tthis.outputFileSystem.mkdirp(outputPath, emitFiles.bind(this));\r\n\t}.bind(this));\r\n\r\n\tfunction emitFiles(err) {\r\n\t\tif(err) return callback(err);\r\n\r\n\t\trequire(\"async\").forEach(Object.keys(compilation.assets), function(file, callback) {\r\n\r\n\t\t\tvar targetFile = file;\r\n\t\t\tvar queryStringIdx = targetFile.indexOf(\"?\");\r\n\t\t\tif(queryStringIdx >= 0) {\r\n\t\t\t\ttargetFile = targetFile.substr(0, queryStringIdx);\r\n\t\t\t}\r\n\r\n\t\t\tif(targetFile.match(/\\/|\\\\/)) {\r\n\t\t\t\tvar dir = path.dirname(targetFile);\r\n\t\t\t\tthis.outputFileSystem.mkdirp(this.outputFileSystem.join(outputPath, dir), writeOut.bind(this));\r\n\t\t\t} else writeOut.call(this);\r\n\r\n\t\t\tfunction writeOut(err) {\r\n\t\t\t\tif(err) return callback(err);\r\n\t\t\t\tvar targetPath = this.outputFileSystem.join(outputPath, targetFile);\r\n\t\t\t\tvar source = compilation.assets[file];\r\n\t\t\t\tif(source.existsAt === targetPath) {\r\n\t\t\t\t\tsource.emitted = false;\r\n\t\t\t\t\treturn callback();\r\n\t\t\t\t}\r\n\t\t\t\tvar content = source.source();\r\n\r\n\t\t\t\tif(!Buffer.isBuffer(content)) {\r\n\t\t\t\t\tcontent = new Buffer(content, \"utf8\"); //eslint-disable-line\r\n\t\t\t\t}\r\n\r\n\t\t\t\tsource.existsAt = targetPath;\r\n\t\t\t\tsource.emitted = true;\r\n\t\t\t\tthis.outputFileSystem.writeFile(targetPath, content, callback);\r\n\t\t\t}\r\n\r\n\t\t}.bind(this), function(err) {\r\n\t\t\tif(err) return callback(err);\r\n\r\n\t\t\tafterEmit.call(this);\r\n\t\t}.bind(this));\r\n\t}\r\n\r\n\tfunction afterEmit() {\r\n\t\tthis.applyPluginsAsyncSeries1(\"after-emit\", compilation, function(err) {\r\n\t\t\tif(err) return callback(err);\r\n\r\n\t\t\treturn callback();\r\n\t\t});\r\n\t}\r\n\r\n};\r\n\r\nCompiler.prototype.emitRecords = function emitRecords(callback) {\r\n\tif(!this.recordsOutputPath) return callback();\r\n\tvar idx1 = this.recordsOutputPath.lastIndexOf(\"/\");\r\n\tvar idx2 = this.recordsOutputPath.lastIndexOf(\"\\\\\");\r\n\tvar recordsOutputPathDirectory = null;\r\n\tif(idx1 > idx2) recordsOutputPathDirectory = this.recordsOutputPath.substr(0, idx1);\r\n\tif(idx1 < idx2) recordsOutputPathDirectory = this.recordsOutputPath.substr(0, idx2);\r\n\tif(!recordsOutputPathDirectory) return writeFile.call(this);\r\n\tthis.outputFileSystem.mkdirp(recordsOutputPathDirectory, function(err) {\r\n\t\tif(err) return callback(err);\r\n\t\twriteFile.call(this);\r\n\t}.bind(this));\r\n\r\n\tfunction writeFile() {\r\n\t\tthis.outputFileSystem.writeFile(this.recordsOutputPath, JSON.stringify(this.records, undefined, 2), callback);\r\n\t}\r\n};\r\n\r\nCompiler.prototype.readRecords = function readRecords(callback) {\r\n\tvar self = this;\r\n\tif(!self.recordsInputPath) {\r\n\t\tself.records = {};\r\n\t\treturn callback();\r\n\t}\r\n\tself.inputFileSystem.stat(self.recordsInputPath, function(err) {\r\n\t\t// It doesn't exist\r\n\t\t// We can ignore self.\r\n\t\tif(err) return callback();\r\n\r\n\t\tself.inputFileSystem.readFile(self.recordsInputPath, function(err, content) {\r\n\t\t\tif(err) return callback(err);\r\n\r\n\t\t\ttry {\r\n\t\t\t\tself.records = JSON.parse(content.toString(\"utf-8\"));\r\n\t\t\t} catch(e) {\r\n\t\t\t\te.message = \"Cannot parse records: \" + e.message;\r\n\t\t\t\treturn callback(e);\r\n\t\t\t}\r\n\r\n\t\t\treturn callback();\r\n\t\t});\r\n\t});\r\n};\r\n\r\nCompiler.prototype.createChildCompiler = function(compilation, compilerName, outputOptions, plugins) {\r\n\tvar childCompiler = new Compiler();\r\n\tif(Array.isArray(plugins)) {\r\n\t\tplugins.forEach(plugin => childCompiler.apply(plugin));\r\n\t}\r\n\tfor(var name in this._plugins) {\r\n\t\tif([\"make\", \"compile\", \"emit\", \"after-emit\", \"invalid\", \"done\", \"this-compilation\"].indexOf(name) < 0)\r\n\t\t\tchildCompiler._plugins[name] = this._plugins[name].slice();\r\n\t}\r\n\tchildCompiler.name = compilerName;\r\n\tchildCompiler.outputPath = this.outputPath;\r\n\tchildCompiler.inputFileSystem = this.inputFileSystem;\r\n\tchildCompiler.outputFileSystem = null;\r\n\tchildCompiler.resolvers = this.resolvers;\r\n\tchildCompiler.fileTimestamps = this.fileTimestamps;\r\n\tchildCompiler.contextTimestamps = this.contextTimestamps;\r\n\tif(!this.records[compilerName]) this.records[compilerName] = [];\r\n\tthis.records[compilerName].push(childCompiler.records = {});\r\n\tchildCompiler.options = Object.create(this.options);\r\n\tchildCompiler.options.output = Object.create(childCompiler.options.output);\r\n\tfor(name in outputOptions) {\r\n\t\tchildCompiler.options.output[name] = outputOptions[name];\r\n\t}\r\n\tchildCompiler.parentCompilation = compilation;\r\n\treturn childCompiler;\r\n};\r\n\r\nCompiler.prototype.isChild = function() {\r\n\treturn !!this.parentCompilation;\r\n};\r\n\r\nCompiler.prototype.createCompilation = function() {\r\n\treturn new Compilation(this);\r\n};\r\n\r\nCompiler.prototype.newCompilation = function(params) {\r\n\tvar compilation = this.createCompilation();\r\n\tcompilation.fileTimestamps = this.fileTimestamps;\r\n\tcompilation.contextTimestamps = this.contextTimestamps;\r\n\tcompilation.name = this.name;\r\n\tcompilation.records = this.records;\r\n\tcompilation.compilationDependencies = params.compilationDependencies;\r\n\tthis.applyPlugins(\"this-compilation\", compilation, params);\r\n\tthis.applyPlugins(\"compilation\", compilation, params);\r\n\treturn compilation;\r\n};\r\n\r\nCompiler.prototype.createNormalModuleFactory = function() {\r\n\tvar normalModuleFactory = new NormalModuleFactory(this.options.context, this.resolvers, this.options.module || {});\r\n\tthis.applyPlugins(\"normal-module-factory\", normalModuleFactory);\r\n\treturn normalModuleFactory;\r\n};\r\n\r\nCompiler.prototype.createContextModuleFactory = function() {\r\n\tvar contextModuleFactory = new ContextModuleFactory(this.resolvers, this.inputFileSystem);\r\n\tthis.applyPlugins(\"context-module-factory\", contextModuleFactory);\r\n\treturn contextModuleFactory;\r\n};\r\n\r\nCompiler.prototype.newCompilationParams = function() {\r\n\tvar params = {\r\n\t\tnormalModuleFactory: this.createNormalModuleFactory(),\r\n\t\tcontextModuleFactory: this.createContextModuleFactory(),\r\n\t\tcompilationDependencies: []\r\n\t};\r\n\treturn params;\r\n};\r\n\r\nCompiler.prototype.compile = function(callback) {\r\n\tvar self = this;\r\n\tvar params = self.newCompilationParams();\r\n\tself.applyPluginsAsync(\"before-compile\", params, function(err) {\r\n\t\tif(err) return callback(err);\r\n\r\n\t\tself.applyPlugins(\"compile\", params);\r\n\r\n\t\tvar compilation = self.newCompilation(params);\r\n\r\n\t\tself.applyPluginsParallel(\"make\", compilation, function(err) {\r\n\t\t\tif(err) return callback(err);\r\n\r\n\t\t\tcompilation.finish();\r\n\r\n\t\t\tcompilation.seal(function(err) {\r\n\t\t\t\tif(err) return callback(err);\r\n\r\n\t\t\t\tself.applyPluginsAsync(\"after-compile\", compilation, function(err) {\r\n\t\t\t\t\tif(err) return callback(err);\r\n\r\n\t\t\t\t\treturn callback(null, compilation);\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t});\r\n\t});\r\n};\r\n","/home/travis/build/npmtest/node-npmtest-webpack/node_modules/webpack/lib/Compilation.js":"/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n\t*/\r\n\"use strict\";\r\n\r\nconst asyncLib = require(\"async\");\r\nconst crypto = require(\"crypto\");\r\nconst Tapable = require(\"tapable\");\r\nconst EntryModuleNotFoundError = require(\"./EntryModuleNotFoundError\");\r\nconst ModuleNotFoundError = require(\"./ModuleNotFoundError\");\r\nconst ModuleDependencyWarning = require(\"./ModuleDependencyWarning\");\r\nconst ModuleDependencyError = require(\"./ModuleDependencyError\");\r\nconst Module = require(\"./Module\");\r\nconst Chunk = require(\"./Chunk\");\r\nconst Entrypoint = require(\"./Entrypoint\");\r\nconst Stats = require(\"./Stats\");\r\nconst MainTemplate = require(\"./MainTemplate\");\r\nconst ChunkTemplate = require(\"./ChunkTemplate\");\r\nconst HotUpdateChunkTemplate = require(\"./HotUpdateChunkTemplate\");\r\nconst ModuleTemplate = require(\"./ModuleTemplate\");\r\nconst Dependency = require(\"./Dependency\");\r\nconst ChunkRenderError = require(\"./ChunkRenderError\");\r\nconst CachedSource = require(\"webpack-sources\").CachedSource;\r\n\r\nfunction byId(a, b) {\r\n\tif(a.id < b.id) return -1;\r\n\tif(a.id > b.id) return 1;\r\n\treturn 0;\r\n}\r\n\r\nfunction iterationBlockVariable(variables, fn) {\r\n\tfor(let indexVariable = 0; indexVariable < variables.length; indexVariable++) {\r\n\t\tlet varDep = variables[indexVariable].dependencies;\r\n\t\tfor(let indexVDep = 0; indexVDep < varDep.length; indexVDep++) {\r\n\t\t\tfn(varDep[indexVDep]);\r\n\t\t}\r\n\t}\r\n}\r\n\r\nfunction iterationOfArrayCallback(arr, fn) {\r\n\tfor(let index = 0; index < arr.length; index++) {\r\n\t\tfn(arr[index]);\r\n\t}\r\n}\r\n\r\nclass Compilation extends Tapable {\r\n\tconstructor(compiler) {\r\n\t\tsuper();\r\n\t\tthis.compiler = compiler;\r\n\t\tthis.resolvers = compiler.resolvers;\r\n\t\tthis.inputFileSystem = compiler.inputFileSystem;\r\n\r\n\t\tconst options = this.options = compiler.options;\r\n\t\tthis.outputOptions = options && options.output;\r\n\t\tthis.bail = options && options.bail;\r\n\t\tthis.profile = options && options.profile;\r\n\t\tthis.performance = options && options.performance;\r\n\r\n\t\tthis.mainTemplate = new MainTemplate(this.outputOptions);\r\n\t\tthis.chunkTemplate = new ChunkTemplate(this.outputOptions);\r\n\t\tthis.hotUpdateChunkTemplate = new HotUpdateChunkTemplate(this.outputOptions);\r\n\t\tthis.moduleTemplate = new ModuleTemplate(this.outputOptions);\r\n\r\n\t\tthis.entries = [];\r\n\t\tthis.preparedChunks = [];\r\n\t\tthis.entrypoints = {};\r\n\t\tthis.chunks = [];\r\n\t\tthis.namedChunks = {};\r\n\t\tthis.modules = [];\r\n\t\tthis._modules = {};\r\n\t\tthis.cache = null;\r\n\t\tthis.records = null;\r\n\t\tthis.nextFreeModuleIndex = undefined;\r\n\t\tthis.nextFreeModuleIndex2 = undefined;\r\n\t\tthis.additionalChunkAssets = [];\r\n\t\tthis.assets = {};\r\n\t\tthis.errors = [];\r\n\t\tthis.warnings = [];\r\n\t\tthis.children = [];\r\n\t\tthis.dependencyFactories = new Map();\r\n\t\tthis.dependencyTemplates = new Map();\r\n\t}\r\n\r\n\ttemplatesPlugin(name, fn) {\r\n\t\tthis.mainTemplate.plugin(name, fn);\r\n\t\tthis.chunkTemplate.plugin(name, fn);\r\n\t}\r\n\r\n\taddModule(module, cacheGroup) {\r\n\t\tconst identifier = module.identifier();\r\n\t\tif(this._modules[identifier]) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\tconst cacheName = (cacheGroup || \"m\") + identifier;\r\n\t\tif(this.cache && this.cache[cacheName]) {\r\n\t\t\tconst cacheModule = this.cache[cacheName];\r\n\r\n\t\t\tlet rebuild = true;\r\n\t\t\tif(!cacheModule.error && cacheModule.cacheable && this.fileTimestamps && this.contextTimestamps) {\r\n\t\t\t\trebuild = cacheModule.needRebuild(this.fileTimestamps, this.contextTimestamps);\r\n\t\t\t}\r\n\r\n\t\t\tif(!rebuild) {\r\n\t\t\t\tcacheModule.disconnect();\r\n\t\t\t\tthis._modules[identifier] = cacheModule;\r\n\t\t\t\tthis.modules.push(cacheModule);\r\n\t\t\t\tcacheModule.errors.forEach(err => this.errors.push(err), this);\r\n\t\t\t\tcacheModule.warnings.forEach(err => this.warnings.push(err), this);\r\n\t\t\t\treturn cacheModule;\r\n\t\t\t} else {\r\n\t\t\t\tmodule.lastId = cacheModule.id;\r\n\t\t\t}\r\n\t\t}\r\n\t\tmodule.unbuild();\r\n\t\tthis._modules[identifier] = module;\r\n\t\tif(this.cache) {\r\n\t\t\tthis.cache[cacheName] = module;\r\n\t\t}\r\n\t\tthis.modules.push(module);\r\n\t\treturn true;\r\n\t}\r\n\r\n\tgetModule(module) {\r\n\t\tconst identifier = module.identifier();\r\n\t\treturn this._modules[identifier];\r\n\t}\r\n\r\n\tfindModule(identifier) {\r\n\t\treturn this._modules[identifier];\r\n\t}\r\n\r\n\tbuildModule(module, optional, origin, dependencies, thisCallback) {\r\n\t\tthis.applyPlugins1(\"build-module\", module);\r\n\t\tif(module.building) return module.building.push(thisCallback);\r\n\t\tconst building = module.building = [thisCallback];\r\n\r\n\t\tfunction callback(err) {\r\n\t\t\tmodule.building = undefined;\r\n\t\t\tbuilding.forEach(cb => cb(err));\r\n\t\t}\r\n\t\tmodule.build(this.options, this, this.resolvers.normal, this.inputFileSystem, (error) => {\r\n\t\t\tconst errors = module.errors;\r\n\t\t\tfor(let indexError = 0; indexError < errors.length; indexError++) {\r\n\t\t\t\tconst err = errors[indexError];\r\n\t\t\t\terr.origin = origin;\r\n\t\t\t\terr.dependencies = dependencies;\r\n\t\t\t\tif(optional)\r\n\t\t\t\t\tthis.warnings.push(err);\r\n\t\t\t\telse\r\n\t\t\t\t\tthis.errors.push(err);\r\n\t\t\t}\r\n\r\n\t\t\tconst warnings = module.warnings;\r\n\t\t\tfor(let indexWarning = 0; indexWarning < warnings.length; indexWarning++) {\r\n\t\t\t\tconst war = warnings[indexWarning];\r\n\t\t\t\twar.origin = origin;\r\n\t\t\t\twar.dependencies = dependencies;\r\n\t\t\t\tthis.warnings.push(war);\r\n\t\t\t}\r\n\t\t\tmodule.dependencies.sort(Dependency.compare);\r\n\t\t\tif(error) {\r\n\t\t\t\tthis.applyPlugins2(\"failed-module\", module, error);\r\n\t\t\t\treturn callback(error);\r\n\t\t\t}\r\n\t\t\tthis.applyPlugins1(\"succeed-module\", module);\r\n\t\t\treturn callback();\r\n\t\t});\r\n\t}\r\n\r\n\tprocessModuleDependencies(module, callback) {\r\n\t\tconst dependencies = [];\r\n\r\n\t\tfunction addDependency(dep) {\r\n\t\t\tfor(let i = 0; i < dependencies.length; i++) {\r\n\t\t\t\tif(dep.isEqualResource(dependencies[i][0])) {\r\n\t\t\t\t\treturn dependencies[i].push(dep);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tdependencies.push([dep]);\r\n\t\t}\r\n\r\n\t\tfunction addDependenciesBlock(block) {\r\n\t\t\tif(block.dependencies) {\r\n\t\t\t\titerationOfArrayCallback(block.dependencies, addDependency);\r\n\t\t\t}\r\n\t\t\tif(block.blocks) {\r\n\t\t\t\titerationOfArrayCallback(block.blocks, addDependenciesBlock);\r\n\t\t\t}\r\n\t\t\tif(block.variables) {\r\n\t\t\t\titerationBlockVariable(block.variables, addDependency);\r\n\t\t\t}\r\n\t\t}\r\n\t\taddDependenciesBlock(module);\r\n\t\tthis.addModuleDependencies(module, dependencies, this.bail, null, true, callback);\r\n\t}\r\n\r\n\taddModuleDependencies(module, dependencies, bail, cacheGroup, recursive, callback) {\r\n\t\tlet _this = this;\r\n\t\tconst start = _this.profile && +new Date();\r\n\r\n\t\tconst factories = [];\r\n\t\tfor(let i = 0; i < dependencies.length; i++) {\r\n\t\t\tconst factory = _this.dependencyFactories.get(dependencies[i][0].constructor);\r\n\t\t\tif(!factory) {\r\n\t\t\t\treturn callback(new Error(`No module factory available for dependency type: ${dependencies[i][0].constructor.name}`));\r\n\t\t\t}\r\n\t\t\tfactories[i] = [factory, dependencies[i]];\r\n\t\t}\r\n\t\tasyncLib.forEach(factories, function iteratorFactory(item, callback) {\r\n\t\t\tconst dependencies = item[1];\r\n\r\n\t\t\tconst errorAndCallback = function errorAndCallback(err) {\r\n\t\t\t\terr.origin = module;\r\n\t\t\t\t_this.errors.push(err);\r\n\t\t\t\tif(bail) {\r\n\t\t\t\t\tcallback(err);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tcallback();\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t\tconst warningAndCallback = function warningAndCallback(err) {\r\n\t\t\t\terr.origin = module;\r\n\t\t\t\t_this.warnings.push(err);\r\n\t\t\t\tcallback();\r\n\t\t\t};\r\n\r\n\t\t\tconst factory = item[0];\r\n\t\t\tfactory.create({\r\n\t\t\t\tcontextInfo: {\r\n\t\t\t\t\tissuer: module.nameForCondition && module.nameForCondition(),\r\n\t\t\t\t\tcompiler: _this.compiler.name\r\n\t\t\t\t},\r\n\t\t\t\tcontext: module.context,\r\n\t\t\t\tdependencies: dependencies\r\n\t\t\t}, function factoryCallback(err, dependentModule) {\r\n\t\t\t\tlet afterFactory;\r\n\r\n\t\t\t\tfunction isOptional() {\r\n\t\t\t\t\treturn dependencies.filter(d => !d.optional).length === 0;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tfunction errorOrWarningAndCallback(err) {\r\n\t\t\t\t\tif(isOptional()) {\r\n\t\t\t\t\t\treturn warningAndCallback(err);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\treturn errorAndCallback(err);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tfunction iterationDependencies(depend) {\r\n\t\t\t\t\tfor(let index = 0; index < depend.length; index++) {\r\n\t\t\t\t\t\tconst dep = depend[index];\r\n\t\t\t\t\t\tdep.module = dependentModule;\r\n\t\t\t\t\t\tdependentModule.addReason(module, dep);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif(err) {\r\n\t\t\t\t\treturn errorOrWarningAndCallback(new ModuleNotFoundError(module, err, dependencies));\r\n\t\t\t\t}\r\n\t\t\t\tif(!dependentModule) {\r\n\t\t\t\t\treturn process.nextTick(callback);\r\n\t\t\t\t}\r\n\t\t\t\tif(_this.profile) {\r\n\t\t\t\t\tif(!dependentModule.profile) {\r\n\t\t\t\t\t\tdependentModule.profile = {};\r\n\t\t\t\t\t}\r\n\t\t\t\t\tafterFactory = +new Date();\r\n\t\t\t\t\tdependentModule.profile.factory = afterFactory - start;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tdependentModule.issuer = module;\r\n\t\t\t\tconst newModule = _this.addModule(dependentModule, cacheGroup);\r\n\r\n\t\t\t\tif(!newModule) { // from cache\r\n\t\t\t\t\tdependentModule = _this.getModule(dependentModule);\r\n\r\n\t\t\t\t\tif(dependentModule.optional) {\r\n\t\t\t\t\t\tdependentModule.optional = isOptional();\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\titerationDependencies(dependencies);\r\n\r\n\t\t\t\t\tif(_this.profile) {\r\n\t\t\t\t\t\tif(!module.profile) {\r\n\t\t\t\t\t\t\tmodule.profile = {};\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tconst time = +new Date() - start;\r\n\t\t\t\t\t\tif(!module.profile.dependencies || time > module.profile.dependencies) {\r\n\t\t\t\t\t\t\tmodule.profile.dependencies = time;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\treturn process.nextTick(callback);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif(newModule instanceof Module) {\r\n\t\t\t\t\tif(_this.profile) {\r\n\t\t\t\t\t\tnewModule.profile = dependentModule.profile;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tnewModule.optional = isOptional();\r\n\t\t\t\t\tnewModule.issuer = dependentModule.issuer;\r\n\t\t\t\t\tdependentModule = newModule;\r\n\r\n\t\t\t\t\titerationDependencies(dependencies);\r\n\r\n\t\t\t\t\tif(_this.profile) {\r\n\t\t\t\t\t\tconst afterBuilding = +new Date();\r\n\t\t\t\t\t\tmodule.profile.building = afterBuilding - afterFactory;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif(recursive) {\r\n\t\t\t\t\t\treturn process.nextTick(_this.processModuleDependencies.bind(_this, dependentModule, callback));\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\treturn process.nextTick(callback);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tdependentModule.optional = isOptional();\r\n\r\n\t\t\t\titerationDependencies(dependencies);\r\n\r\n\t\t\t\t_this.buildModule(dependentModule, isOptional(), module, dependencies, err => {\r\n\t\t\t\t\tif(err) {\r\n\t\t\t\t\t\treturn errorOrWarningAndCallback(err);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif(_this.profile) {\r\n\t\t\t\t\t\tconst afterBuilding = +new Date();\r\n\t\t\t\t\t\tdependentModule.profile.building = afterBuilding - afterFactory;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif(recursive) {\r\n\t\t\t\t\t\t_this.processModuleDependencies(dependentModule, callback);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\treturn callback();\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\r\n\t\t\t});\r\n\t\t}, function finalCallbackAddModuleDependencies(err) {\r\n\t\t\t// In V8, the Error objects keep a reference to the functions on the stack. These warnings &\r\n\t\t\t// errors are created inside closures that keep a reference to the Compilation, so errors are\r\n\t\t\t// leaking the Compilation object. Setting _this to null workarounds the following issue in V8.\r\n\t\t\t// https://bugs.chromium.org/p/chromium/issues/detail?id=612191\r\n\t\t\t_this = null;\r\n\r\n\t\t\tif(err) {\r\n\t\t\t\treturn callback(err);\r\n\t\t\t}\r\n\r\n\t\t\treturn process.nextTick(callback);\r\n\t\t});\r\n\t}\r\n\r\n\t_addModuleChain(context, dependency, onModule, callback) {\r\n\t\tconst start = this.profile && +new Date();\r\n\r\n\t\tconst errorAndCallback = this.bail ? function errorAndCallback(err) {\r\n\t\t\tcallback(err);\r\n\t\t} : function errorAndCallback(err) {\r\n\t\t\terr.dependencies = [dependency];\r\n\t\t\tthis.errors.push(err);\r\n\t\t\tcallback();\r\n\t\t}.bind(this);\r\n\r\n\t\tif(typeof dependency !== \"object\" || dependency === null || !dependency.constructor) {\r\n\t\t\tthrow new Error(\"Parameter 'dependency' must be a Dependency\");\r\n\t\t}\r\n\r\n\t\tconst moduleFactory = this.dependencyFactories.get(dependency.constructor);\r\n\t\tif(!moduleFactory) {\r\n\t\t\tthrow new Error(`No dependency factory available for this dependency type: ${dependency.constructor.name}`);\r\n\t\t}\r\n\r\n\t\tmoduleFactory.create({\r\n\t\t\tcontextInfo: {\r\n\t\t\t\tissuer: \"\",\r\n\t\t\t\tcompiler: this.compiler.name\r\n\t\t\t},\r\n\t\t\tcontext: context,\r\n\t\t\tdependencies: [dependency]\r\n\t\t}, (err, module) => {\r\n\t\t\tif(err) {\r\n\t\t\t\treturn errorAndCallback(new EntryModuleNotFoundError(err));\r\n\t\t\t}\r\n\r\n\t\t\tlet afterFactory;\r\n\r\n\t\t\tif(this.profile) {\r\n\t\t\t\tif(!module.profile) {\r\n\t\t\t\t\tmodule.profile = {};\r\n\t\t\t\t}\r\n\t\t\t\tafterFactory = +new Date();\r\n\t\t\t\tmodule.profile.factory = afterFactory - start;\r\n\t\t\t}\r\n\r\n\t\t\tconst result = this.addModule(module);\r\n\t\t\tif(!result) {\r\n\t\t\t\tmodule = this.getModule(module);\r\n\r\n\t\t\t\tonModule(module);\r\n\r\n\t\t\t\tif(this.profile) {\r\n\t\t\t\t\tconst afterBuilding = +new Date();\r\n\t\t\t\t\tmodule.profile.building = afterBuilding - afterFactory;\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn callback(null, module);\r\n\t\t\t}\r\n\r\n\t\t\tif(result instanceof Module) {\r\n\t\t\t\tif(this.profile) {\r\n\t\t\t\t\tresult.profile = module.profile;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tmodule = result;\r\n\r\n\t\t\t\tonModule(module);\r\n\r\n\t\t\t\tmoduleReady.call(this);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tonModule(module);\r\n\r\n\t\t\tthis.buildModule(module, false, null, null, (err) => {\r\n\t\t\t\tif(err) {\r\n\t\t\t\t\treturn errorAndCallback(err);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif(this.profile) {\r\n\t\t\t\t\tconst afterBuilding = +new Date();\r\n\t\t\t\t\tmodule.profile.building = afterBuilding - afterFactory;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tmoduleReady.call(this);\r\n\t\t\t});\r\n\r\n\t\t\tfunction moduleReady() {\r\n\t\t\t\tthis.processModuleDependencies(module, err => {\r\n\t\t\t\t\tif(err) {\r\n\t\t\t\t\t\treturn callback(err);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\treturn callback(null, module);\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\taddEntry(context, entry, name, callback) {\r\n\t\tconst slot = {\r\n\t\t\tname: name,\r\n\t\t\tmodule: null\r\n\t\t};\r\n\t\tthis.preparedChunks.push(slot);\r\n\t\tthis._addModuleChain(context, entry, (module) => {\r\n\r\n\t\t\tentry.module = module;\r\n\t\t\tthis.entries.push(module);\r\n\t\t\tmodule.issuer = null;\r\n\r\n\t\t}, (err, module) => {\r\n\t\t\tif(err) {\r\n\t\t\t\treturn callback(err);\r\n\t\t\t}\r\n\r\n\t\t\tif(module) {\r\n\t\t\t\tslot.module = module;\r\n\t\t\t} else {\r\n\t\t\t\tconst idx = this.preparedChunks.indexOf(slot);\r\n\t\t\t\tthis.preparedChunks.splice(idx, 1);\r\n\t\t\t}\r\n\t\t\treturn callback(null, module);\r\n\t\t});\r\n\t}\r\n\r\n\tprefetch(context, dependency, callback) {\r\n\t\tthis._addModuleChain(context, dependency, module => {\r\n\r\n\t\t\tmodule.prefetched = true;\r\n\t\t\tmodule.issuer = null;\r\n\r\n\t\t}, callback);\r\n\t}\r\n\r\n\trebuildModule(module, thisCallback) {\r\n\t\tif(module.variables.length || module.blocks.length)\r\n\t\t\tthrow new Error(\"Cannot rebuild a complex module with variables or blocks\");\r\n\t\tif(module.rebuilding) {\r\n\t\t\treturn module.rebuilding.push(thisCallback);\r\n\t\t}\r\n\t\tconst rebuilding = module.rebuilding = [thisCallback];\r\n\r\n\t\tfunction callback(err) {\r\n\t\t\tmodule.rebuilding = undefined;\r\n\t\t\trebuilding.forEach(cb => cb(err));\r\n\t\t}\r\n\t\tconst deps = module.dependencies.slice();\r\n\t\tthis.buildModule(module, false, module, null, (err) => {\r\n\t\t\tif(err) return callback(err);\r\n\r\n\t\t\tthis.processModuleDependencies(module, (err) => {\r\n\t\t\t\tif(err) return callback(err);\r\n\t\t\t\tdeps.forEach(d => {\r\n\t\t\t\t\tif(d.module && d.module.removeReason(module, d)) {\r\n\t\t\t\t\t\tmodule.chunks.forEach(chunk => {\r\n\t\t\t\t\t\t\tif(!d.module.hasReasonForChunk(chunk)) {\r\n\t\t\t\t\t\t\t\tif(d.module.removeChunk(chunk)) {\r\n\t\t\t\t\t\t\t\t\tthis.removeChunkFromDependencies(d.module, chunk);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t\tcallback();\r\n\t\t\t});\r\n\r\n\t\t});\r\n\t}\r\n\r\n\tfinish() {\r\n\t\tconst modules = this.modules;\r\n\t\tthis.applyPlugins1(\"finish-modules\", modules);\r\n\r\n\t\tfor(let index = 0; index < modules.length; index++) {\r\n\t\t\tconst module = modules[index];\r\n\t\t\tthis.reportDependencyErrorsAndWarnings(module, [module]);\r\n\t\t}\r\n\t}\r\n\r\n\tunseal() {\r\n\t\tthis.applyPlugins0(\"unseal\");\r\n\t\tthis.chunks.length = 0;\r\n\t\tthis.namedChunks = {};\r\n\t\tthis.additionalChunkAssets.length = 0;\r\n\t\tthis.assets = {};\r\n\t\tthis.modules.forEach(module => module.unseal());\r\n\t}\r\n\r\n\tseal(callback) {\r\n\t\tconst self = this;\r\n\t\tself.applyPlugins0(\"seal\");\r\n\t\tself.nextFreeModuleIndex = 0;\r\n\t\tself.nextFreeModuleIndex2 = 0;\r\n\t\tself.preparedChunks.forEach(preparedChunk => {\r\n\t\t\tconst module = preparedChunk.module;\r\n\t\t\tconst chunk = self.addChunk(preparedChunk.name, module);\r\n\t\t\tconst entrypoint = self.entrypoints[chunk.name] = new Entrypoint(chunk.name);\r\n\t\t\tentrypoint.unshiftChunk(chunk);\r\n\r\n\t\t\tchunk.addModule(module);\r\n\t\t\tmodule.addChunk(chunk);\r\n\t\t\tchunk.entryModule = module;\r\n\t\t\tself.assignIndex(module);\r\n\t\t\tself.assignDepth(module);\r\n\t\t\tself.processDependenciesBlockForChunk(module, chunk);\r\n\t\t});\r\n\t\tself.sortModules(self.modules);\r\n\t\tself.applyPlugins0(\"optimize\");\r\n\r\n\t\twhile(self.applyPluginsBailResult1(\"optimize-modules-basic\", self.modules) ||\r\n\t\t\tself.applyPluginsBailResult1(\"optimize-modules\", self.modules) ||\r\n\t\t\tself.applyPluginsBailResult1(\"optimize-modules-advanced\", self.modules)); // eslint-disable-line no-extra-semi\r\n\t\tself.applyPlugins1(\"after-optimize-modules\", self.modules);\r\n\r\n\t\twhile(self.applyPluginsBailResult1(\"optimize-chunks-basic\", self.chunks) ||\r\n\t\t\tself.applyPluginsBailResult1(\"optimize-chunks\", self.chunks) ||\r\n\t\t\tself.applyPluginsBailResult1(\"optimize-chunks-advanced\", self.chunks)); // eslint-disable-line no-extra-semi\r\n\t\tself.applyPlugins1(\"after-optimize-chunks\", self.chunks);\r\n\r\n\t\tself.applyPluginsAsyncSeries(\"optimize-tree\", self.chunks, self.modules, function sealPart2(err) {\r\n\t\t\tif(err) {\r\n\t\t\t\treturn callback(err);\r\n\t\t\t}\r\n\r\n\t\t\tself.applyPlugins2(\"after-optimize-tree\", self.chunks, self.modules);\r\n\r\n\t\t\tconst shouldRecord = self.applyPluginsBailResult(\"should-record\") !== false;\r\n\r\n\t\t\tself.applyPlugins2(\"revive-modules\", self.modules, self.records);\r\n\t\t\tself.applyPlugins1(\"optimize-module-order\", self.modules);\r\n\t\t\tself.applyPlugins1(\"advanced-optimize-module-order\", self.modules);\r\n\t\t\tself.applyPlugins1(\"before-module-ids\", self.modules);\r\n\t\t\tself.applyPlugins1(\"module-ids\", self.modules);\r\n\t\t\tself.applyModuleIds();\r\n\t\t\tself.applyPlugins1(\"optimize-module-ids\", self.modules);\r\n\t\t\tself.applyPlugins1(\"after-optimize-module-ids\", self.modules);\r\n\r\n\t\t\tself.sortItemsWithModuleIds();\r\n\r\n\t\t\tself.applyPlugins2(\"revive-chunks\", self.chunks, self.records);\r\n\t\t\tself.applyPlugins1(\"optimize-chunk-order\", self.chunks);\r\n\t\t\tself.applyPlugins1(\"before-chunk-ids\", self.chunks);\r\n\t\t\tself.applyChunkIds();\r\n\t\t\tself.applyPlugins1(\"optimize-chunk-ids\", self.chunks);\r\n\t\t\tself.applyPlugins1(\"after-optimize-chunk-ids\", self.chunks);\r\n\r\n\t\t\tself.sortItemsWithChunkIds();\r\n\r\n\t\t\tif(shouldRecord)\r\n\t\t\t\tself.applyPlugins2(\"record-modules\", self.modules, self.records);\r\n\t\t\tif(shouldRecord)\r\n\t\t\t\tself.applyPlugins2(\"record-chunks\", self.chunks, self.records);\r\n\r\n\t\t\tself.applyPlugins0(\"before-hash\");\r\n\t\t\tself.createHash();\r\n\t\t\tself.applyPlugins0(\"after-hash\");\r\n\r\n\t\t\tif(shouldRecord)\r\n\t\t\t\tself.applyPlugins1(\"record-hash\", self.records);\r\n\r\n\t\t\tself.applyPlugins0(\"before-module-assets\");\r\n\t\t\tself.createModuleAssets();\r\n\t\t\tif(self.applyPluginsBailResult(\"should-generate-chunk-assets\") !== false) {\r\n\t\t\t\tself.applyPlugins0(\"before-chunk-assets\");\r\n\t\t\t\tself.createChunkAssets();\r\n\t\t\t}\r\n\t\t\tself.applyPlugins1(\"additional-chunk-assets\", self.chunks);\r\n\t\t\tself.summarizeDependencies();\r\n\t\t\tif(shouldRecord)\r\n\t\t\t\tself.applyPlugins2(\"record\", self, self.records);\r\n\r\n\t\t\tself.applyPluginsAsync(\"additional-assets\", err => {\r\n\t\t\t\tif(err) {\r\n\t\t\t\t\treturn callback(err);\r\n\t\t\t\t}\r\n\t\t\t\tself.applyPluginsAsync(\"optimize-chunk-assets\", self.chunks, err => {\r\n\t\t\t\t\tif(err) {\r\n\t\t\t\t\t\treturn callback(err);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tself.applyPlugins1(\"after-optimize-chunk-assets\", self.chunks);\r\n\t\t\t\t\tself.applyPluginsAsync(\"optimize-assets\", self.assets, err => {\r\n\t\t\t\t\t\tif(err) {\r\n\t\t\t\t\t\t\treturn callback(err);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tself.applyPlugins1(\"after-optimize-assets\", self.assets);\r\n\t\t\t\t\t\tif(self.applyPluginsBailResult(\"need-additional-seal\")) {\r\n\t\t\t\t\t\t\tself.unseal();\r\n\t\t\t\t\t\t\treturn self.seal(callback);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\treturn self.applyPluginsAsync(\"after-seal\", callback);\r\n\t\t\t\t\t});\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n\r\n\tsortModules(modules) {\r\n\t\tmodules.sort((a, b) => {\r\n\t\t\tif(a.index < b.index) return -1;\r\n\t\t\tif(a.index > b.index) return 1;\r\n\t\t\treturn 0;\r\n\t\t});\r\n\t}\r\n\r\n\treportDependencyErrorsAndWarnings(module, blocks) {\r\n\t\tfor(let indexBlock = 0; indexBlock < blocks.length; indexBlock++) {\r\n\t\t\tconst block = blocks[indexBlock];\r\n\t\t\tconst dependencies = block.dependencies;\r\n\r\n\t\t\tfor(let indexDep = 0; indexDep < dependencies.length; indexDep++) {\r\n\t\t\t\tconst d = dependencies[indexDep];\r\n\r\n\t\t\t\tconst warnings = d.getWarnings();\r\n\t\t\t\tif(warnings) {\r\n\t\t\t\t\tfor(let indexWar = 0; indexWar < warnings.length; indexWar++) {\r\n\t\t\t\t\t\tconst w = warnings[indexWar];\r\n\r\n\t\t\t\t\t\tconst warning = new ModuleDependencyWarning(module, w, d.loc);\r\n\t\t\t\t\t\tthis.warnings.push(warning);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tconst errors = d.getErrors();\r\n\t\t\t\tif(errors) {\r\n\t\t\t\t\tfor(let indexErr = 0; indexErr < errors.length; indexErr++) {\r\n\t\t\t\t\t\tconst e = errors[indexErr];\r\n\r\n\t\t\t\t\t\tconst error = new ModuleDependencyError(module, e, d.loc);\r\n\t\t\t\t\t\tthis.errors.push(error);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tthis.reportDependencyErrorsAndWarnings(module, block.blocks);\r\n\t\t}\r\n\t}\r\n\r\n\taddChunk(name, module, loc) {\r\n\t\tif(name) {\r\n\t\t\tif(Object.prototype.hasOwnProperty.call(this.namedChunks, name)) {\r\n\t\t\t\tconst chunk = this.namedChunks[name];\r\n\t\t\t\tif(module) {\r\n\t\t\t\t\tchunk.addOrigin(module, loc);\r\n\t\t\t\t}\r\n\t\t\t\treturn chunk;\r\n\t\t\t}\r\n\t\t}\r\n\t\tconst chunk = new Chunk(name, module, loc);\r\n\t\tthis.chunks.push(chunk);\r\n\t\tif(name) {\r\n\t\t\tthis.namedChunks[name] = chunk;\r\n\t\t}\r\n\t\treturn chunk;\r\n\t}\r\n\r\n\tassignIndex(module) {\r\n\t\tconst _this = this;\r\n\r\n\t\tconst queue = [() => {\r\n\t\t\tassignIndexToModule(module);\r\n\t\t}];\r\n\r\n\t\tconst iteratorAllDependencies = d => {\r\n\t\t\tqueue.push(() => assignIndexToDependency(d));\r\n\t\t};\r\n\r\n\t\tfunction assignIndexToModule(module) {\r\n\t\t\t// enter module\r\n\t\t\tif(typeof module.index !== \"number\") {\r\n\t\t\t\tmodule.index = _this.nextFreeModuleIndex++;\r\n\r\n\t\t\t\t// leave module\r\n\t\t\t\tqueue.push(() => module.index2 = _this.nextFreeModuleIndex2++);\r\n\r\n\t\t\t\t// enter it as block\r\n\t\t\t\tassignIndexToDependencyBlock(module);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfunction assignIndexToDependency(dependency) {\r\n\t\t\tif(dependency.module) {\r\n\t\t\t\tqueue.push(() => assignIndexToModule(dependency.module));\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfunction assignIndexToDependencyBlock(block) {\r\n\t\t\tlet allDependencies = [];\r\n\r\n\t\t\tfunction iteratorDependency(d) {\r\n\t\t\t\tallDependencies.push(d);\r\n\t\t\t}\r\n\r\n\t\t\tfunction iteratorBlock(b) {\r\n\t\t\t\tqueue.push(() => assignIndexToDependencyBlock(b));\r\n\t\t\t}\r\n\r\n\t\t\tif(block.variables) {\r\n\t\t\t\titerationBlockVariable(block.variables, iteratorDependency);\r\n\t\t\t}\r\n\r\n\t\t\tif(block.dependencies) {\r\n\t\t\t\titerationOfArrayCallback(block.dependencies, iteratorDependency);\r\n\t\t\t}\r\n\t\t\tif(block.blocks) {\r\n\t\t\t\tconst blocks = block.blocks;\r\n\t\t\t\tlet indexBlock = blocks.length;\r\n\t\t\t\twhile(indexBlock--) {\r\n\t\t\t\t\titeratorBlock(blocks[indexBlock]);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tlet indexAll = allDependencies.length;\r\n\t\t\twhile(indexAll--) {\r\n\t\t\t\titeratorAllDependencies(allDependencies[indexAll]);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\twhile(queue.length) {\r\n\t\t\tqueue.pop()();\r\n\t\t}\r\n\t}\r\n\r\n\tassignDepth(module) {\r\n\t\tfunction assignDepthToModule(module, depth) {\r\n\t\t\t// enter module\r\n\t\t\tif(typeof module.depth === \"number\" && module.depth <= depth) return;\r\n\t\t\tmodule.depth = depth;\r\n\r\n\t\t\t// enter it as block\r\n\t\t\tassignDepthToDependencyBlock(module, depth + 1);\r\n\t\t}\r\n\r\n\t\tfunction assignDepthToDependency(dependency, depth) {\r\n\t\t\tif(dependency.module) {\r\n\t\t\t\tqueue.push(() => assignDepthToModule(dependency.module, depth));\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfunction assignDepthToDependencyBlock(block, depth) {\r\n\t\t\tfunction iteratorDependency(d) {\r\n\t\t\t\tassignDepthToDependency(d, depth);\r\n\t\t\t}\r\n\r\n\t\t\tfunction iteratorBlock(b) {\r\n\t\t\t\tassignDepthToDependencyBlock(b, depth);\r\n\t\t\t}\r\n\r\n\t\t\tif(block.variables) {\r\n\t\t\t\titerationBlockVariable(block.variables, iteratorDependency);\r\n\t\t\t}\r\n\r\n\t\t\tif(block.dependencies) {\r\n\t\t\t\titerationOfArrayCallback(block.dependencies, iteratorDependency);\r\n\t\t\t}\r\n\r\n\t\t\tif(block.blocks) {\r\n\t\t\t\titerationOfArrayCallback(block.blocks, iteratorBlock);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tconst queue = [() => {\r\n\t\t\tassignDepthToModule(module, 0);\r\n\t\t}];\r\n\t\twhile(queue.length) {\r\n\t\t\tqueue.pop()();\r\n\t\t}\r\n\t}\r\n\r\n\tprocessDependenciesBlockForChunk(block, chunk) {\r\n\t\tconst iteratorBlock = b => {\r\n\t\t\tlet c;\r\n\t\t\tif(!b.chunks) {\r\n\t\t\t\tc = this.addChunk(b.chunkName, b.module, b.loc);\r\n\t\t\t\tb.chunks = [c];\r\n\t\t\t\tc.addBlock(b);\r\n\t\t\t} else {\r\n\t\t\t\tc = b.chunks[0];\r\n\t\t\t}\r\n\t\t\tchunk.addChunk(c);\r\n\t\t\tc.addParent(chunk);\r\n\t\t\tqueue.push([b, c]);\r\n\t\t};\r\n\r\n\t\tconst iteratorDependency = d => {\r\n\t\t\tif(!d.module) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tif(d.weak) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tif(chunk.addModule(d.module)) {\r\n\t\t\t\td.module.addChunk(chunk);\r\n\t\t\t\tqueue.push([d.module, chunk]);\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tconst queue = [\r\n\t\t\t[block, chunk]\r\n\t\t];\r\n\r\n\t\twhile(queue.length) {\r\n\t\t\tconst queueItem = queue.pop();\r\n\t\t\tblock = queueItem[0];\r\n\t\t\tchunk = queueItem[1];\r\n\r\n\t\t\tif(block.variables) {\r\n\t\t\t\titerationBlockVariable(block.variables, iteratorDependency);\r\n\t\t\t}\r\n\r\n\t\t\tif(block.dependencies) {\r\n\t\t\t\titerationOfArrayCallback(block.dependencies, iteratorDependency);\r\n\t\t\t}\r\n\r\n\t\t\tif(block.blocks) {\r\n\t\t\t\titerationOfArrayCallback(block.blocks, iteratorBlock);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tremoveChunkFromDependencies(block, chunk) {\r\n\t\tconst iteratorDependency = d => {\r\n\t\t\tif(!d.module) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tif(!d.module.hasReasonForChunk(chunk)) {\r\n\t\t\t\tif(d.module.removeChunk(chunk)) {\r\n\t\t\t\t\tthis.removeChunkFromDependencies(d.module, chunk);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tconst blocks = block.blocks;\r\n\t\tfor(let indexBlock = 0; indexBlock < blocks.length; indexBlock++) {\r\n\t\t\tconst chunks = blocks[indexBlock].chunks;\r\n\t\t\tfor(let indexChunk = 0; indexChunk < chunks.length; indexChunk++) {\r\n\t\t\t\tconst blockChunk = chunks[indexChunk];\r\n\t\t\t\tchunk.removeChunk(blockChunk);\r\n\t\t\t\tblockChunk.removeParent(chunk);\r\n\t\t\t\tthis.removeChunkFromDependencies(chunks, blockChunk);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif(block.dependencies) {\r\n\t\t\titerationOfArrayCallback(block.dependencies, iteratorDependency);\r\n\t\t}\r\n\r\n\t\tif(block.variables) {\r\n\t\t\titerationBlockVariable(block.variables, iteratorDependency);\r\n\t\t}\r\n\t}\r\n\r\n\tapplyModuleIds() {\r\n\t\tlet unusedIds = [];\r\n\t\tlet nextFreeModuleId = 0;\r\n\t\tlet usedIds = [];\r\n\t\t// TODO consider Map when performance has improved https://gist.github.com/sokra/234c077e1299b7369461f1708519c392\r\n\t\tconst usedIdMap = Object.create(null);\r\n\t\tif(this.usedModuleIds) {\r\n\t\t\tObject.keys(this.usedModuleIds).forEach(key => {\r\n\t\t\t\tconst id = this.usedModuleIds[key];\r\n\t\t\t\tif(!usedIdMap[id]) {\r\n\t\t\t\t\tusedIds.push(id);\r\n\t\t\t\t\tusedIdMap[id] = true;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tconst modules1 = this.modules;\r\n\t\tfor(let indexModule1 = 0; indexModule1 < modules1.length; indexModule1++) {\r\n\t\t\tconst module1 = modules1[indexModule1];\r\n\t\t\tif(module1.id && !usedIdMap[module1.id]) {\r\n\t\t\t\tusedIds.push(module1.id);\r\n\t\t\t\tusedIdMap[module1.id] = true;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif(usedIds.length > 0) {\r\n\t\t\tlet usedIdMax = -1;\r\n\t\t\tfor(let index = 0; index < usedIds.length; index++) {\r\n\t\t\t\tconst usedIdKey = usedIds[index];\r\n\r\n\t\t\t\tif(typeof usedIdKey !== \"number\") {\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tusedIdMax = Math.max(usedIdMax, usedIdKey);\r\n\t\t\t}\r\n\r\n\t\t\tlet lengthFreeModules = nextFreeModuleId = usedIdMax + 1;\r\n\r\n\t\t\twhile(lengthFreeModules--) {\r\n\t\t\t\tif(!usedIdMap[lengthFreeModules]) {\r\n\t\t\t\t\tunusedIds.push(lengthFreeModules);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tconst modules2 = this.modules;\r\n\t\tfor(let indexModule2 = 0; indexModule2 < modules2.length; indexModule2++) {\r\n\t\t\tconst module2 = modules2[indexModule2];\r\n\t\t\tif(module2.id === null) {\r\n\t\t\t\tif(unusedIds.length > 0)\r\n\t\t\t\t\tmodule2.id = unusedIds.pop();\r\n\t\t\t\telse\r\n\t\t\t\t\tmodule2.id = nextFreeModuleId++;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tapplyChunkIds() {\r\n\t\tconst unusedIds = [];\r\n\t\tlet nextFreeChunkId = 0;\r\n\r\n\t\tfunction getNextFreeChunkId(usedChunkIds) {\r\n\t\t\tconst keyChunks = Object.keys(usedChunkIds);\r\n\t\t\tlet result = -1;\r\n\r\n\t\t\tfor(let index = 0; index < keyChunks.length; index++) {\r\n\t\t\t\tconst usedIdKey = keyChunks[index];\r\n\t\t\t\tconst usedIdValue = usedChunkIds[usedIdKey];\r\n\r\n\t\t\t\tif(typeof usedIdValue !== \"number\") {\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tresult = Math.max(result, usedIdValue);\r\n\t\t\t}\r\n\r\n\t\t\treturn result;\r\n\t\t}\r\n\r\n\t\tif(this.usedChunkIds) {\r\n\t\t\tnextFreeChunkId = getNextFreeChunkId(this.usedChunkIds) + 1;\r\n\t\t\tlet index = nextFreeChunkId;\r\n\t\t\twhile(index--) {\r\n\t\t\t\tif(this.usedChunkIds[index] !== index) {\r\n\t\t\t\t\tunusedIds.push(index);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tconst chunks = this.chunks;\r\n\t\tfor(let indexChunk = 0; indexChunk < chunks.length; indexChunk++) {\r\n\t\t\tconst chunk = chunks[indexChunk];\r\n\t\t\tif(chunk.id === null) {\r\n\t\t\t\tif(unusedIds.length > 0)\r\n\t\t\t\t\tchunk.id = unusedIds.pop();\r\n\t\t\t\telse\r\n\t\t\t\t\tchunk.id = nextFreeChunkId++;\r\n\t\t\t}\r\n\t\t\tif(!chunk.ids) {\r\n\t\t\t\tchunk.ids = [chunk.id];\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tsortItemsWithModuleIds() {\r\n\t\tthis.modules.sort(byId);\r\n\r\n\t\tconst modules = this.modules;\r\n\t\tfor(let indexModule = 0; indexModule < modules.length; indexModule++) {\r\n\t\t\tmodules[indexModule].sortItems();\r\n\t\t}\r\n\r\n\t\tconst chunks = this.chunks;\r\n\t\tfor(let indexChunk = 0; indexChunk < chunks.length; indexChunk++) {\r\n\t\t\tchunks[indexChunk].sortItems();\r\n\t\t}\r\n\t}\r\n\r\n\tsortItemsWithChunkIds() {\r\n\t\tthis.chunks.sort(byId);\r\n\r\n\t\tconst modules = this.modules;\r\n\t\tfor(let indexModule = 0; indexModule < modules.length; indexModule++) {\r\n\t\t\tmodules[indexModule].sortItems();\r\n\t\t}\r\n\r\n\t\tconst chunks = this.chunks;\r\n\t\tfor(let indexChunk = 0; indexChunk < chunks.length; indexChunk++) {\r\n\t\t\tchunks[indexChunk].sortItems();\r\n\t\t}\r\n\t}\r\n\r\n\tsummarizeDependencies() {\r\n\t\tfunction filterDups(array) {\r\n\t\t\tconst newArray = [];\r\n\t\t\tfor(let i = 0; i < array.length; i++) {\r\n\t\t\t\tif(i === 0 || array[i - 1] !== array[i])\r\n\t\t\t\t\tnewArray.push(array[i]);\r\n\t\t\t}\r\n\t\t\treturn newArray;\r\n\t\t}\r\n\t\tthis.fileDependencies = (this.compilationDependencies || []).slice();\r\n\t\tthis.contextDependencies = [];\r\n\t\tthis.missingDependencies = [];\r\n\r\n\t\tconst children = this.children;\r\n\t\tfor(let indexChildren = 0; indexChildren < children.length; indexChildren++) {\r\n\t\t\tconst child = children[indexChildren];\r\n\r\n\t\t\tthis.fileDependencies = this.fileDependencies.concat(child.fileDependencies);\r\n\t\t\tthis.contextDependencies = this.contextDependencies.concat(child.contextDependencies);\r\n\t\t\tthis.missingDependencies = this.missingDependencies.concat(child.missingDependencies);\r\n\t\t}\r\n\r\n\t\tconst modules = this.modules;\r\n\t\tfor(let indexModule = 0; indexModule < modules.length; indexModule++) {\r\n\t\t\tconst module = modules[indexModule];\r\n\r\n\t\t\tif(module.fileDependencies) {\r\n\t\t\t\tconst fileDependencies = module.fileDependencies;\r\n\t\t\t\tfor(let indexFileDep = 0; indexFileDep < fileDependencies.length; indexFileDep++) {\r\n\t\t\t\t\tthis.fileDependencies.push(fileDependencies[indexFileDep]);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif(module.contextDependencies) {\r\n\t\t\t\tconst contextDependencies = module.contextDependencies;\r\n\t\t\t\tfor(let indexContextDep = 0; indexContextDep < contextDependencies.length; indexContextDep++) {\r\n\t\t\t\t\tthis.contextDependencies.push(contextDependencies[indexContextDep]);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis.errors.forEach(error => {\r\n\t\t\tif(Array.isArray(error.missing)) {\r\n\t\t\t\terror.missing.forEach(item => this.missingDependencies.push(item));\r\n\t\t\t}\r\n\t\t});\r\n\t\tthis.fileDependencies.sort();\r\n\t\tthis.fileDependencies = filterDups(this.fileDependencies);\r\n\t\tthis.contextDependencies.sort();\r\n\t\tthis.contextDependencies = filterDups(this.contextDependencies);\r\n\t\tthis.missingDependencies.sort();\r\n\t\tthis.missingDependencies = filterDups(this.missingDependencies);\r\n\t}\r\n\r\n\tcreateHash() {\r\n\t\tconst outputOptions = this.outputOptions;\r\n\t\tconst hashFunction = outputOptions.hashFunction;\r\n\t\tconst hashDigest = outputOptions.hashDigest;\r\n\t\tconst hashDigestLength = outputOptions.hashDigestLength;\r\n\t\tconst hash = crypto.createHash(hashFunction);\r\n\t\tif(outputOptions.hashSalt)\r\n\t\t\thash.update(outputOptions.hashSalt);\r\n\t\tthis.mainTemplate.updateHash(hash);\r\n\t\tthis.chunkTemplate.updateHash(hash);\r\n\t\tthis.moduleTemplate.updateHash(hash);\r\n\t\tthis.children.forEach(function(child) {\r\n\t\t\thash.update(child.hash);\r\n\t\t});\r\n\t\t// clone needed as sort below is inplace mutation\r\n\t\tconst chunks = this.chunks.slice();\r\n\t\t/**\r\n\t\t * sort here will bring all \"falsy\" values to the beginning\r\n\t\t * this is needed as the \"hasRuntime()\" chunks are dependent on the\r\n\t\t * hashes of the non-runtime chunks.\r\n\t\t */\r\n\t\tchunks.sort((a, b) => {\r\n\t\t\tconst aEntry = a.hasRuntime();\r\n\t\t\tconst bEntry = b.hasRuntime();\r\n\t\t\tif(aEntry && !bEntry) return 1;\r\n\t\t\tif(!aEntry && bEntry) return -1;\r\n\t\t\treturn 0;\r\n\t\t});\r\n\t\tfor(let i = 0; i < chunks.length; i++) {\r\n\t\t\tconst chunk = chunks[i];\r\n\t\t\tconst chunkHash = crypto.createHash(hashFunction);\r\n\t\t\tif(outputOptions.hashSalt)\r\n\t\t\t\tchunkHash.update(outputOptions.hashSalt);\r\n\t\t\tchunk.updateHash(chunkHash);\r\n\t\t\tif(chunk.hasRuntime()) {\r\n\t\t\t\tthis.mainTemplate.updateHashForChunk(chunkHash, chunk);\r\n\t\t\t} else {\r\n\t\t\t\tthis.chunkTemplate.updateHashForChunk(chunkHash, chunk);\r\n\t\t\t}\r\n\t\t\tthis.applyPlugins2(\"chunk-hash\", chunk, chunkHash);\r\n\t\t\tchunk.hash = chunkHash.digest(hashDigest);\r\n\t\t\thash.update(chunk.hash);\r\n\t\t\tchunk.renderedHash = chunk.hash.substr(0, hashDigestLength);\r\n\t\t}\r\n\t\tthis.fullHash = hash.digest(hashDigest);\r\n\t\tthis.hash = this.fullHash.substr(0, hashDigestLength);\r\n\t}\r\n\r\n\tmodifyHash(update) {\r\n\t\tconst outputOptions = this.outputOptions;\r\n\t\tconst hashFunction = outputOptions.hashFunction;\r\n\t\tconst hashDigest = outputOptions.hashDigest;\r\n\t\tconst hashDigestLength = outputOptions.hashDigestLength;\r\n\t\tconst hash = crypto.createHash(hashFunction);\r\n\t\thash.update(this.fullHash);\r\n\t\thash.update(update);\r\n\t\tthis.fullHash = hash.digest(hashDigest);\r\n\t\tthis.hash = this.fullHash.substr(0, hashDigestLength);\r\n\t}\r\n\r\n\tcreateModuleAssets() {\r\n\t\tfor(let i = 0; i < this.modules.length; i++) {\r\n\t\t\tconst module = this.modules[i];\r\n\t\t\tif(module.assets) {\r\n\t\t\t\tObject.keys(module.assets).forEach((assetName) => {\r\n\t\t\t\t\tconst fileName = this.getPath(assetName);\r\n\t\t\t\t\tthis.assets[fileName] = module.assets[assetName];\r\n\t\t\t\t\tthis.applyPlugins2(\"module-asset\", module, fileName);\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tcreateChunkAssets() {\r\n\t\tconst outputOptions = this.outputOptions;\r\n\t\tconst filename = outputOptions.filename;\r\n\t\tconst chunkFilename = outputOptions.chunkFilename;\r\n\t\tfor(let i = 0; i < this.chunks.length; i++) {\r\n\t\t\tconst chunk = this.chunks[i];\r\n\t\t\tchunk.files = [];\r\n\t\t\tconst chunkHash = chunk.hash;\r\n\t\t\tlet source;\r\n\t\t\tlet file;\r\n\t\t\tconst filenameTemplate = chunk.filenameTemplate ? chunk.filenameTemplate :\r\n\t\t\t\tchunk.isInitial() ? filename :\r\n\t\t\t\tchunkFilename;\r\n\t\t\ttry {\r\n\t\t\t\tconst useChunkHash = !chunk.hasRuntime() || (this.mainTemplate.useChunkHash && this.mainTemplate.useChunkHash(chunk));\r\n\t\t\t\tconst usedHash = useChunkHash ? chunkHash : this.fullHash;\r\n\t\t\t\tconst cacheName = \"c\" + chunk.id;\r\n\t\t\t\tif(this.cache && this.cache[cacheName] && this.cache[cacheName].hash === usedHash) {\r\n\t\t\t\t\tsource = this.cache[cacheName].source;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tif(chunk.hasRuntime()) {\r\n\t\t\t\t\t\tsource = this.mainTemplate.render(this.hash, chunk, this.moduleTemplate, this.dependencyTemplates);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tsource = this.chunkTemplate.render(chunk, this.moduleTemplate, this.dependencyTemplates);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif(this.cache) {\r\n\t\t\t\t\t\tthis.cache[cacheName] = {\r\n\t\t\t\t\t\t\thash: usedHash,\r\n\t\t\t\t\t\t\tsource: source = (source instanceof CachedSource ? source : new CachedSource(source))\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tfile = this.getPath(filenameTemplate, {\r\n\t\t\t\t\tnoChunkHash: !useChunkHash,\r\n\t\t\t\t\tchunk\r\n\t\t\t\t});\r\n\t\t\t\tif(this.assets[file])\r\n\t\t\t\t\tthrow new Error(`Conflict: Multiple assets emit to the same filename ${file}`);\r\n\t\t\t\tthis.assets[file] = source;\r\n\t\t\t\tchunk.files.push(file);\r\n\t\t\t\tthis.applyPlugins2(\"chunk-asset\", chunk, file);\r\n\t\t\t} catch(err) {\r\n\t\t\t\tthis.errors.push(new ChunkRenderError(chunk, file || filenameTemplate, err));\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tgetPath(filename, data) {\r\n\t\tdata = data || {};\r\n\t\tdata.hash = data.hash || this.hash;\r\n\t\treturn this.mainTemplate.applyPluginsWaterfall(\"asset-path\", filename, data);\r\n\t}\r\n\r\n\tgetStats() {\r\n\t\treturn new Stats(this);\r\n\t}\r\n\r\n\tcreateChildCompiler(name, outputOptions) {\r\n\t\treturn this.compiler.createChildCompiler(this, name, outputOptions);\r\n\t}\r\n\r\n\tcheckConstraints() {\r\n\t\tconst usedIds = {};\r\n\r\n\t\tconst modules = this.modules;\r\n\t\tfor(let indexModule = 0; indexModule < modules.length; indexModule++) {\r\n\t\t\tconst moduleId = modules[indexModule].id;\r\n\r\n\t\t\tif(usedIds[moduleId])\r\n\t\t\t\tthrow new Error(`checkConstraints: duplicate module id ${moduleId}`);\r\n\t\t}\r\n\r\n\t\tconst chunks = this.chunks;\r\n\t\tfor(let indexChunk = 0; indexChunk < chunks.length; indexChunk++) {\r\n\t\t\tconst chunk = chunks[indexChunk];\r\n\r\n\t\t\tif(chunks.indexOf(chunk) !== indexChunk)\r\n\t\t\t\tthrow new Error(`checkConstraints: duplicate chunk in compilation ${chunk.debugId}`);\r\n\t\t\tchunk.checkConstraints();\r\n\t\t}\r\n\t}\r\n}\r\n\r\nmodule.exports = Compilation;\r\n","/home/travis/build/npmtest/node-npmtest-webpack/node_modules/webpack/lib/EntryModuleNotFoundError.js":"/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\n\"use strict\";\r\n\r\nconst WebpackError = require(\"./WebpackError\");\r\n\r\nclass EntryModuleNotFoundError extends WebpackError {\r\n\tconstructor(err) {\r\n\t\tsuper();\r\n\r\n\t\tthis.name = \"EntryModuleNotFoundError\";\r\n\t\tthis.message = \"Entry module not found: \" + err;\r\n\t\tthis.details = err.details;\r\n\t\tthis.error = err;\r\n\r\n\t\tError.captureStackTrace(this, this.constructor);\r\n\t}\r\n}\r\n\r\nmodule.exports = EntryModuleNotFoundError;\r\n","/home/travis/build/npmtest/node-npmtest-webpack/node_modules/webpack/lib/WebpackError.js":"/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Jarid Margolin @jaridmargolin\r\n*/\r\n\"use strict\";\r\n\r\nmodule.exports = class WebpackError extends Error {\r\n\tinspect() {\r\n\t\treturn this.stack + (this.details ? `\\n${this.details}` : \"\");\r\n\t}\r\n};\r\n","/home/travis/build/npmtest/node-npmtest-webpack/node_modules/webpack/lib/ModuleNotFoundError.js":"/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\n\"use strict\";\r\n\r\nconst WebpackError = require(\"./WebpackError\");\r\n\r\nclass ModuleNotFoundError extends WebpackError {\r\n\tconstructor(module, err, dependencies) {\r\n\t\tsuper();\r\n\r\n\t\tthis.name = \"ModuleNotFoundError\";\r\n\t\tthis.message = \"Module not found: \" + err;\r\n\t\tthis.details = err.details;\r\n\t\tthis.missing = err.missing;\r\n\t\tthis.module = module;\r\n\t\tthis.origin = module;\r\n\t\tthis.dependencies = dependencies;\r\n\t\tthis.error = err;\r\n\r\n\t\tError.captureStackTrace(this, this.constructor);\r\n\t}\r\n}\r\n\r\nmodule.exports = ModuleNotFoundError;\r\n","/home/travis/build/npmtest/node-npmtest-webpack/node_modules/webpack/lib/ModuleDependencyWarning.js":"/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\n\"use strict\";\r\n\r\nconst WebpackError = require(\"./WebpackError\");\r\nconst formatLocation = require(\"./formatLocation\");\r\n\r\nmodule.exports = class ModuleDependencyWarning extends WebpackError {\r\n\tconstructor(module, err, loc) {\r\n\t\tsuper();\r\n\r\n\t\tthis.name = \"ModuleDependencyWarning\";\r\n\t\tthis.message = `${formatLocation(loc)} ${err.message}`;\r\n\t\tthis.details = err.stack.split(\"\\n\").slice(1).join(\"\\n\");\r\n\t\tthis.origin = this.module = module;\r\n\t\tthis.error = err;\r\n\r\n\t\tError.captureStackTrace(this, this.constructor);\r\n\t}\r\n};\r\n","/home/travis/build/npmtest/node-npmtest-webpack/node_modules/webpack/lib/formatLocation.js":"/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\nmodule.exports = function formatLocation(loc) {\r\n\tif(typeof loc === \"string\")\r\n\t\treturn loc;\r\n\tif(typeof loc === \"number\")\r\n\t\treturn loc + \"\";\r\n\tif(loc && typeof loc === \"object\") {\r\n\t\tif(loc.start && loc.end) {\r\n\t\t\tif(typeof loc.start.line === \"number\" && typeof loc.end.line === \"number\" && typeof loc.end.column === \"number\" && loc.start.line === loc.end.line)\r\n\t\t\t\treturn formatPosition(loc.start) + \"-\" + loc.end.column;\r\n\t\t\treturn formatPosition(loc.start) + \"-\" + formatPosition(loc.end);\r\n\t\t}\r\n\t\tif(loc.start)\r\n\t\t\treturn formatPosition(loc.start);\r\n\t\treturn formatPosition(loc);\r\n\t}\r\n\treturn \"\";\r\n\r\n\tfunction formatPosition(pos) {\r\n\t\tif(typeof pos === \"string\")\r\n\t\t\treturn pos;\r\n\t\tif(typeof pos === \"number\")\r\n\t\t\treturn pos + \"\";\r\n\t\tif(pos && typeof pos === \"object\") {\r\n\t\t\tif(typeof pos.line === \"number\" && typeof pos.column === \"number\")\r\n\t\t\t\treturn pos.line + \":\" + pos.column;\r\n\t\t\tif(typeof pos.line === \"number\")\r\n\t\t\t\treturn pos.line + \":?\";\r\n\t\t\tif(typeof pos.index === \"number\")\r\n\t\t\t\treturn \"+\" + pos.index;\r\n\t\t}\r\n\t\treturn \"\";\r\n\t}\r\n};\r\n","/home/travis/build/npmtest/node-npmtest-webpack/node_modules/webpack/lib/ModuleDependencyError.js":"/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\n\"use strict\";\r\n\r\nconst WebpackError = require(\"./WebpackError\");\r\nconst formatLocation = require(\"./formatLocation\");\r\n\r\nmodule.exports = class ModuleDependencyError extends WebpackError {\r\n\tconstructor(module, err, loc) {\r\n\t\tsuper();\r\n\r\n\t\tthis.name = \"ModuleDependencyError\";\r\n\t\tthis.message = `${formatLocation(loc)} ${err.message}`;\r\n\t\tthis.details = err.stack.split(\"\\n\").slice(1).join(\"\\n\");\r\n\t\tthis.origin = this.module = module;\r\n\t\tthis.error = err;\r\n\r\n\t\tError.captureStackTrace(this, this.constructor);\r\n\t}\r\n};\r\n","/home/travis/build/npmtest/node-npmtest-webpack/node_modules/webpack/lib/Module.js":"/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\n\"use strict\";\r\n\r\nconst DependenciesBlock = require(\"./DependenciesBlock\");\r\nconst ModuleReason = require(\"./ModuleReason\");\r\nconst Template = require(\"./Template\");\r\n\r\nfunction addToSet(set, items) {\r\n\tfor(let item of items) {\r\n\t\tif(set.indexOf(item) < 0)\r\n\t\t\tset.push(item);\r\n\t}\r\n}\r\n\r\nfunction byId(a, b) {\r\n\treturn a.id - b.id;\r\n}\r\n\r\nlet debugId = 1000;\r\n\r\nclass Module extends DependenciesBlock {\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.context = null;\r\n\t\tthis.reasons = [];\r\n\t\tthis.debugId = debugId++;\r\n\t\tthis.lastId = -1;\r\n\t\tthis.id = null;\r\n\t\tthis.portableId = null;\r\n\t\tthis.index = null;\r\n\t\tthis.index2 = null;\r\n\t\tthis.depth = null;\r\n\t\tthis.used = null;\r\n\t\tthis.usedExports = null;\r\n\t\tthis.providedExports = null;\r\n\t\tthis.chunks = [];\r\n\t\tthis.warnings = [];\r\n\t\tthis.dependenciesWarnings = [];\r\n\t\tthis.errors = [];\r\n\t\tthis.dependenciesErrors = [];\r\n\t\tthis.strict = false;\r\n\t\tthis.meta = {};\r\n\t}\r\n\r\n\tdisconnect() {\r\n\t\tthis.reasons.length = 0;\r\n\t\tthis.lastId = this.id;\r\n\t\tthis.id = null;\r\n\t\tthis.index = null;\r\n\t\tthis.index2 = null;\r\n\t\tthis.depth = null;\r\n\t\tthis.used = null;\r\n\t\tthis.usedExports = null;\r\n\t\tthis.providedExports = null;\r\n\t\tthis.chunks.length = 0;\r\n\t\tsuper.disconnect();\r\n\t}\r\n\r\n\tunseal() {\r\n\t\tthis.lastId = this.id;\r\n\t\tthis.id = null;\r\n\t\tthis.index = null;\r\n\t\tthis.index2 = null;\r\n\t\tthis.depth = null;\r\n\t\tthis.chunks.length = 0;\r\n\t\tsuper.unseal();\r\n\t}\r\n\r\n\taddChunk(chunk) {\r\n\t\tlet idx = this.chunks.indexOf(chunk);\r\n\t\tif(idx < 0)\r\n\t\t\tthis.chunks.push(chunk);\r\n\t}\r\n\r\n\tremoveChunk(chunk) {\r\n\t\tlet idx = this.chunks.indexOf(chunk);\r\n\t\tif(idx >= 0) {\r\n\t\t\tthis.chunks.splice(idx, 1);\r\n\t\t\tchunk.removeModule(this);\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\taddReason(module, dependency) {\r\n\t\tthis.reasons.push(new ModuleReason(module, dependency));\r\n\t}\r\n\r\n\tremoveReason(module, dependency) {\r\n\t\tfor(let i = 0; i < this.reasons.length; i++) {\r\n\t\t\tlet r = this.reasons[i];\r\n\t\t\tif(r.module === module && r.dependency === dependency) {\r\n\t\t\t\tthis.reasons.splice(i, 1);\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\thasReasonForChunk(chunk) {\r\n\t\tfor(let r of this.reasons) {\r\n\t\t\tif(r.chunks) {\r\n\t\t\t\tif(r.chunks.indexOf(chunk) >= 0)\r\n\t\t\t\t\treturn true;\r\n\t\t\t} else if(r.module.chunks.indexOf(chunk) >= 0)\r\n\t\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\trewriteChunkInReasons(oldChunk, newChunks) {\r\n\t\tthis.reasons.forEach(r => {\r\n\t\t\tif(!r.chunks) {\r\n\t\t\t\tif(r.module.chunks.indexOf(oldChunk) < 0)\r\n\t\t\t\t\treturn;\r\n\t\t\t\tr.chunks = r.module.chunks;\r\n\t\t\t}\r\n\t\t\tr.chunks = r.chunks.reduce((arr, c) => {\r\n\t\t\t\taddToSet(arr, c !== oldChunk ? [c] : newChunks);\r\n\t\t\t\treturn arr;\r\n\t\t\t}, []);\r\n\t\t});\r\n\t}\r\n\r\n\tisUsed(exportName) {\r\n\t\tif(this.used === null) return exportName;\r\n\t\tif(!exportName) return !!this.used;\r\n\t\tif(!this.used) return false;\r\n\t\tif(!this.usedExports) return false;\r\n\t\tif(this.usedExports === true) return exportName;\r\n\t\tlet idx = this.usedExports.indexOf(exportName);\r\n\t\tif(idx < 0) return false;\r\n\t\tif(this.isProvided(exportName))\r\n\t\t\treturn Template.numberToIdentifer(idx);\r\n\t\treturn exportName;\r\n\t}\r\n\r\n\tisProvided(exportName) {\r\n\t\tif(!Array.isArray(this.providedExports))\r\n\t\t\treturn null;\r\n\t\treturn this.providedExports.indexOf(exportName) >= 0;\r\n\t}\r\n\r\n\ttoString() {\r\n\t\treturn `Module[${this.id || this.debugId}]`;\r\n\t}\r\n\r\n\tneedRebuild(fileTimestamps, contextTimestamps) {\r\n\t\treturn true;\r\n\t}\r\n\r\n\tupdateHash(hash) {\r\n\t\thash.update(this.id + \"\" + this.used);\r\n\t\thash.update(JSON.stringify(this.usedExports));\r\n\t\tsuper.updateHash(hash);\r\n\t}\r\n\r\n\tsortItems() {\r\n\t\tsuper.sortItems();\r\n\t\tthis.chunks.sort(byId);\r\n\t\tthis.reasons.sort((a, b) => byId(a.module, b.module));\r\n\t}\r\n\r\n\tunbuild() {\r\n\t\tthis.disconnect();\r\n\t}\r\n}\r\n\r\nObject.defineProperty(Module.prototype, \"entry\", {\r\n\tconfigurable: false,\r\n\tget() {\r\n\t\tthrow new Error(\"Module.entry was removed. Use Chunk.entryModule\");\r\n\t},\r\n\tset() {\r\n\t\tthrow new Error(\"Module.entry was removed. Use Chunk.entryModule\");\r\n\t}\r\n});\r\nModule.prototype.identifier = null;\r\nModule.prototype.readableIdentifier = null;\r\nModule.prototype.build = null;\r\nModule.prototype.source = null;\r\nModule.prototype.size = null;\r\nModule.prototype.nameForCondition = null;\r\n\r\nmodule.exports = Module;\r\n","/home/travis/build/npmtest/node-npmtest-webpack/node_modules/webpack/lib/DependenciesBlock.js":"/*\r\n MIT License http://www.opensource.org/licenses/mit-license.php\r\n Author Tobias Koppers @sokra\r\n */\r\n\"use strict\";\r\n\r\nconst DependenciesBlockVariable = require(\"./DependenciesBlockVariable\");\r\n\r\nfunction disconnect(i) {\r\n\ti.disconnect();\r\n}\r\n\r\nfunction unseal(i) {\r\n\ti.unseal();\r\n}\r\n\r\nclass DependenciesBlock {\r\n\tconstructor() {\r\n\t\tthis.dependencies = [];\r\n\t\tthis.blocks = [];\r\n\t\tthis.variables = [];\r\n\t}\r\n\r\n\taddBlock(block) {\r\n\t\tthis.blocks.push(block);\r\n\t\tblock.parent = this;\r\n\t}\r\n\r\n\taddVariable(name, expression, dependencies) {\r\n\t\tfor(let v of this.variables) {\r\n\t\t\tif(v.name === name && v.expression === expression) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis.variables.push(new DependenciesBlockVariable(name, expression, dependencies));\r\n\t}\r\n\r\n\taddDependency(dependency) {\r\n\t\tthis.dependencies.push(dependency);\r\n\t}\r\n\r\n\tupdateHash(hash) {\r\n\t\tfunction updateHash(i) {\r\n\t\t\ti.updateHash(hash);\r\n\t\t}\r\n\r\n\t\tthis.dependencies.forEach(updateHash);\r\n\t\tthis.blocks.forEach(updateHash);\r\n\t\tthis.variables.forEach(updateHash);\r\n\t}\r\n\r\n\tdisconnect() {\r\n\t\tthis.dependencies.forEach(disconnect);\r\n\t\tthis.blocks.forEach(disconnect);\r\n\t\tthis.variables.forEach(disconnect);\r\n\t}\r\n\r\n\tunseal() {\r\n\t\tthis.blocks.forEach(unseal);\r\n\t}\r\n\r\n\thasDependencies(filter) {\r\n\t\tif(filter) {\r\n\t\t\tif(this.dependencies.some(filter)) {\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tif(this.dependencies.length > 0) {\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn this.blocks.concat(this.variables).some(item => item.hasDependencies(filter));\r\n\t}\r\n\r\n\tsortItems() {\r\n\t\tthis.blocks.forEach(block => block.sortItems());\r\n\t}\r\n}\r\n\r\nmodule.exports = DependenciesBlock;\r\n","/home/travis/build/npmtest/node-npmtest-webpack/node_modules/webpack/lib/DependenciesBlockVariable.js":"/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\n\"use strict\";\r\n\r\nconst ReplaceSource = require(\"webpack-sources\").ReplaceSource;\r\nconst RawSource = require(\"webpack-sources\").RawSource;\r\n\r\nclass DependenciesBlockVariable {\r\n\tconstructor(name, expression, dependencies) {\r\n\t\tthis.name = name;\r\n\t\tthis.expression = expression;\r\n\t\tthis.dependencies = dependencies || [];\r\n\t}\r\n\r\n\tupdateHash(hash) {\r\n\t\thash.update(this.name);\r\n\t\thash.update(this.expression);\r\n\t\tthis.dependencies.forEach(d => {\r\n\t\t\td.updateHash(hash);\r\n\t\t});\r\n\t}\r\n\r\n\texpressionSource(dependencyTemplates, outputOptions, requestShortener) {\r\n\t\tconst source = new ReplaceSource(new RawSource(this.expression));\r\n\t\tthis.dependencies.forEach(dep => {\r\n\t\t\tconst template = dependencyTemplates.get(dep.constructor);\r\n\t\t\tif(!template) throw new Error(`No template for dependency: ${dep.constructor.name}`);\r\n\t\t\ttemplate.apply(dep, source, outputOptions, requestShortener, dependencyTemplates);\r\n\t\t});\r\n\t\treturn source;\r\n\t}\r\n\r\n\tdisconnect() {\r\n\t\tthis.dependencies.forEach(d => {\r\n\t\t\td.disconnect();\r\n\t\t});\r\n\t}\r\n\r\n\thasDependencies(filter) {\r\n\t\tif(filter) {\r\n\t\t\tif(this.dependencies.some(filter)) return true;\r\n\t\t} else {\r\n\t\t\tif(this.dependencies.length > 0) return true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n}\r\n\r\nmodule.exports = DependenciesBlockVariable;\r\n","/home/travis/build/npmtest/node-npmtest-webpack/node_modules/webpack-sources/lib/index.js":"/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\nexports.Source = require(\"./Source\");\r\n\r\nexports.RawSource = require(\"./RawSource\");\r\nexports.OriginalSource = require(\"./OriginalSource\");\r\nexports.SourceMapSource = require(\"./SourceMapSource\");\r\nexports.LineToLineMappedSource = require(\"./LineToLineMappedSource\");\r\n\r\nexports.CachedSource = require(\"./CachedSource\");\r\nexports.ConcatSource = require(\"./ConcatSource\");\r\nexports.ReplaceSource = require(\"./ReplaceSource\");\r\nexports.PrefixSource = require(\"./PrefixSource\");\r\n","/home/travis/build/npmtest/node-npmtest-webpack/node_modules/webpack-sources/lib/Source.js":"/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\nvar SourceNode = require(\"source-map\").SourceNode;\r\nvar SourceMapConsumer = require(\"source-map\").SourceMapConsumer;\r\n\r\nfunction Source() {}\r\n\r\nmodule.exports = Source;\r\n\r\nSource.prototype.source = null;\r\n\r\nSource.prototype.size = function() {\r\n\treturn this.source().length;\r\n};\r\n\r\nSource.prototype.map = function(options) {\r\n\treturn null;\r\n};\r\n\r\nSource.prototype.sourceAndMap = function(options) {\r\n\treturn {\r\n\t\tsource: this.source(),\r\n\t\tmap: this.map()\r\n\t};\r\n};\r\n\r\nSource.prototype.node = null;\r\n\r\nSource.prototype.listNode = null;\r\n\r\nSource.prototype.updateHash = function(hash) {\r\n\tvar source = this.source();\r\n\thash.update(source || \"\");\r\n};\r\n","/home/travis/build/npmtest/node-npmtest-webpack/node_modules/webpack-sources/lib/RawSource.js":"/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\nvar Source = require(\"./Source\");\r\nvar SourceNode = require(\"source-map\").SourceNode;\r\nvar SourceListMap = require(\"source-list-map\").SourceListMap;\r\n\r\nfunction RawSource(value) {\r\n\tSource.call(this);\r\n\tthis._value = value;\r\n}\r\nmodule.exports = RawSource;\r\n\r\nRawSource.prototype = Object.create(Source.prototype);\r\nRawSource.prototype.constructor = RawSource;\r\n\r\nRawSource.prototype.source = function() {\r\n\treturn this._value;\r\n};\r\n\r\nRawSource.prototype.map = function(options) {\r\n\treturn null;\r\n};\r\n\r\nRawSource.prototype.node = function(options) {\r\n\treturn new SourceNode(null, null, null, this._value);\r\n};\r\n\r\nRawSource.prototype.listMap = function(options) {\r\n\treturn new SourceListMap(this._value);\r\n};\r\n\r\nRawSource.prototype.updateHash = function(hash) {\r\n\thash.update(this._value);\r\n};\r\n","/home/travis/build/npmtest/node-npmtest-webpack/node_modules/webpack-sources/lib/OriginalSource.js":"/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\nvar SourceNode = require(\"source-map\").SourceNode;\r\nvar SourceMapConsumer = require(\"source-map\").SourceMapConsumer;\r\nvar SourceListMap = require(\"source-list-map\").SourceListMap;\r\nvar Source = require(\"./Source\");\r\n\r\nfunction isSplitter(c) {\r\n\tswitch(c) {\r\n\t\tcase 10: // \\n\r\n\t\tcase 13: // \\r\r\n\t\tcase 59: // ;\r\n\t\tcase 123: // {\r\n\t\tcase 125: // }\r\n\t\t\treturn true;\r\n\t}\r\n\treturn false;\r\n}\r\n\r\nfunction _splitCode(code) {\r\n\tvar result = [];\r\n\tvar i = 0;\r\n\tvar j = 0;\r\n\tfor(; i < code.length; i++) {\r\n\t\tif(isSplitter(code.charCodeAt(i))) {\r\n\t\t\twhile(isSplitter(code.charCodeAt(++i)));\r\n\t\t\tresult.push(code.substring(j, i));\r\n\t\t\tj = i;\r\n\t\t}\r\n\t}\r\n\tif(j < code.length)\r\n\t\tresult.push(code.substr(j));\r\n\treturn result;\r\n}\r\n\r\nfunction OriginalSource(value, name) {\r\n\tSource.call(this);\r\n\tthis._value = value;\r\n\tthis._name = name;\r\n}\r\n\r\nmodule.exports = OriginalSource;\r\n\r\nOriginalSource.prototype = Object.create(Source.prototype);\r\nOriginalSource.prototype.constructor = OriginalSource;\r\n\r\nOriginalSource.prototype.source = function() {\r\n\treturn this._value;\r\n};\r\n\r\nrequire(\"./SourceAndMapMixin\")(OriginalSource.prototype);\r\n\r\nOriginalSource.prototype.node = function(options) {\r\n\toptions = options || {};\r\n\tvar sourceMap = this._sourceMap;\r\n\tvar value = this._value;\r\n\tvar name = this._name;\r\n\tvar lines = value.split(\"\\n\");\r\n\tvar node = new SourceNode(null, null, null,\r\n\t\tlines.map(function(line, idx) {\r\n\t\t\tvar pos = 0;\r\n\t\t\tif(options.columns === false) {\r\n\t\t\t\tvar content = line + (idx != lines.length - 1 ? \"\\n\" : \"\");\r\n\t\t\t\treturn new SourceNode(idx + 1, 0, name, content);\r\n\t\t\t}\r\n\t\t\treturn new SourceNode(null, null, null,\r\n\t\t\t\t_splitCode(line + (idx != lines.length - 1 ? \"\\n\" : \"\")).map(function(item) {\r\n\t\t\t\t\tif(/^\\s*$/.test(item)) return item;\r\n\t\t\t\t\tvar res = new SourceNode(idx + 1, pos, name, item);\r\n\t\t\t\t\tpos += item.length;\r\n\t\t\t\t\treturn res;\r\n\t\t\t\t})\r\n\t\t\t);\r\n\t\t})\r\n\t);\r\n\tnode.setSourceContent(name, value);\r\n\treturn node;\r\n};\r\n\r\nOriginalSource.prototype.listMap = function(options) {\r\n\treturn new SourceListMap(this._value, this._name, this._value)\r\n};\r\n\r\nOriginalSource.prototype.updateHash = function(hash) {\r\n\thash.update(this._value);\r\n};\r\n","/home/travis/build/npmtest/node-npmtest-webpack/node_modules/webpack-sources/lib/SourceAndMapMixin.js":"/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\nmodule.exports = function mixinSourceAndMap(proto) {\r\n\tproto.map = function(options) {\r\n\t\toptions = options || {};\r\n\t\tif(options.columns === false) {\r\n\t\t\treturn this.listMap(options).toStringWithSourceMap({\r\n\t\t\t\tfile: \"x\"\r\n\t\t\t}).map;\r\n\t\t}\r\n\r\n\t\treturn this.node(options).toStringWithSourceMap({\r\n\t\t\tfile: \"x\"\r\n\t\t}).map.toJSON();\r\n\t};\r\n\r\n\tproto.sourceAndMap = function(options) {\r\n\t\toptions = options || {};\r\n\t\tif(options.columns === false) {\r\n\t\t\t//console.log(this.listMap(options).debugInfo());\r\n\t\t\treturn this.listMap(options).toStringWithSourceMap({\r\n\t\t\t\tfile: \"x\"\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tvar res = this.node(options).toStringWithSourceMap({\r\n\t\t\tfile: \"x\"\r\n\t\t});\r\n\t\treturn {\r\n\t\t\tsource: res.code,\r\n\t\t\tmap: res.map.toJSON()\r\n\t\t};\r\n\t};\r\n}\r\n","/home/travis/build/npmtest/node-npmtest-webpack/node_modules/webpack-sources/lib/SourceMapSource.js":"/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\nvar SourceNode = require(\"source-map\").SourceNode;\r\nvar SourceMapConsumer = require(\"source-map\").SourceMapConsumer;\r\nvar SourceMapGenerator = require(\"source-map\").SourceMapGenerator;\r\nvar SourceListMap = require(\"source-list-map\").SourceListMap;\r\nvar fromStringWithSourceMap = require(\"source-list-map\").fromStringWithSourceMap;\r\nvar Source = require(\"./Source\");\r\n\r\nfunction SourceMapSource(value, name, sourceMap, originalSource, innerSourceMap) {\r\n\tSource.call(this);\r\n\tthis._value = value;\r\n\tthis._name = name;\r\n\tthis._sourceMap = sourceMap;\r\n\tthis._originalSource = originalSource;\r\n\tthis._innerSourceMap = innerSourceMap;\r\n}\r\nmodule.exports = SourceMapSource;\r\n\r\nSourceMapSource.prototype = Object.create(Source.prototype);\r\nSourceMapSource.prototype.constructor = SourceMapSource;\r\n\r\nSourceMapSource.prototype.source = function() {\r\n\treturn this._value;\r\n};\r\n\r\nrequire(\"./SourceAndMapMixin\")(SourceMapSource.prototype);\r\n\r\nSourceMapSource.prototype.node = function(options) {\r\n\tvar innerSourceMap = this._innerSourceMap;\r\n\tvar sourceMap = this._sourceMap;\r\n\tif(innerSourceMap) {\r\n\t\tsourceMap = SourceMapGenerator.fromSourceMap(new SourceMapConsumer(sourceMap));\r\n\t\tif(this._originalSource)\r\n\t\t\tsourceMap.setSourceContent(this._name, this._originalSource);\r\n\t\tinnerSourceMap = new SourceMapConsumer(innerSourceMap);\r\n\t\tsourceMap.applySourceMap(innerSourceMap, this._name);\r\n\t\tsourceMap = sourceMap.toJSON();\r\n\t}\r\n\treturn SourceNode.fromStringWithSourceMap(this._value, new SourceMapConsumer(sourceMap));\r\n};\r\n\r\nSourceMapSource.prototype.listMap = function(options) {\r\n\tif(options.module === false)\r\n\t\treturn new SourceListMap(this._value, this._name, this._value);\r\n\treturn fromStringWithSourceMap(this._value, typeof this._sourceMap === \"string\" ? JSON.parse(this._sourceMap) : this._sourceMap);\r\n};\r\n\r\nSourceMapSource.prototype.updateHash = function(hash) {\r\n\thash.update(this._value);\r\n\tif(this._originalSource)\r\n\t\thash.update(this._originalSource);\r\n};\r\n","/home/travis/build/npmtest/node-npmtest-webpack/node_modules/webpack-sources/lib/LineToLineMappedSource.js":"/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\nvar SourceNode = require(\"source-map\").SourceNode;\r\nvar SourceMapConsumer = require(\"source-map\").SourceMapConsumer;\r\nvar SourceListMap = require(\"source-list-map\").SourceListMap;\r\nvar Source = require(\"./Source\");\r\n\r\nfunction LineToLineMappedSource(value, name, originalSource) {\r\n\tSource.call(this);\r\n\tthis._value = value;\r\n\tthis._name = name;\r\n\tthis._originalSource = originalSource;\r\n}\r\n\r\nmodule.exports = LineToLineMappedSource;\r\n\r\nLineToLineMappedSource.prototype = Object.create(Source.prototype);\r\nLineToLineMappedSource.prototype.constructor = LineToLineMappedSource;\r\n\r\nLineToLineMappedSource.prototype.source = function() {\r\n\treturn this._value;\r\n};\r\n\r\nrequire(\"./SourceAndMapMixin\")(LineToLineMappedSource.prototype);\r\n\r\nLineToLineMappedSource.prototype.node = function(options) {\r\n\tvar value = this._value;\r\n\tvar name = this._name;\r\n\tvar lines = value.split(\"\\n\");\r\n\tvar node = new SourceNode(null, null, null,\r\n\t\tlines.map(function(line, idx) {\r\n\t\t\treturn new SourceNode(idx + 1, 0, name, (line + (idx != lines.length - 1 ? \"\\n\" : \"\")));\r\n\t\t})\r\n\t);\r\n\tnode.setSourceContent(name, this._originalSource);\r\n\treturn node;\r\n};\r\n\r\nLineToLineMappedSource.prototype.listMap = function(options) {\r\n\treturn new SourceListMap(this._value, this._name, this._originalSource)\r\n};\r\n\r\nLineToLineMappedSource.prototype.updateHash = function(hash) {\r\n\thash.update(this._value);\r\n\thash.update(this._originalSource);\r\n};\r\n","/home/travis/build/npmtest/node-npmtest-webpack/node_modules/webpack-sources/lib/CachedSource.js":"/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\nfunction CachedSource(source) {\r\n\tthis._source = source;\r\n\tthis._cachedSource = undefined;\r\n\tthis._cachedSize = undefined;\r\n\tthis._cachedMaps = {};\r\n\r\n\tif(source.node) this.node = function(options) {\r\n\t\treturn this._source.node(options);\r\n\t};\r\n\r\n\tif(source.listMap) this.listMap = function(options) {\r\n\t\treturn this._source.listMap(options);\r\n\t};\r\n}\r\nmodule.exports = CachedSource;\r\n\r\nCachedSource.prototype.source = function() {\r\n\tif(typeof this._cachedSource !== \"undefined\") return this._cachedSource;\r\n\treturn this._cachedSource = this._source.source();\r\n};\r\n\r\nCachedSource.prototype.size = function() {\r\n\tif(typeof this._cachedSize !== \"undefined\") return this._cachedSize;\r\n\tif(typeof this._cachedSource !== \"undefined\")\r\n\t\treturn this._cachedSize = this._cachedSource.length;\r\n\treturn this._cachedSize = this._source.size();\r\n};\r\n\r\nCachedSource.prototype.sourceAndMap = function(options) {\r\n\tvar key = JSON.stringify(options);\r\n\tif(typeof this._cachedSource !== \"undefined\" && key in this._cachedMaps)\r\n\t\treturn {\r\n\t\t\tsource: this._cachedSource,\r\n\t\t\tmap: this._cachedMaps[key]\r\n\t\t};\r\n\telse if(typeof this._cachedSource !== \"undefined\") {\r\n\t\treturn {\r\n\t\t\tsource: this._cachedSource,\r\n\t\t\tmap: this._cachedMaps[key] = this._source.map(options)\r\n\t\t};\r\n\t} else if(key in this._cachedMaps) {\r\n\t\treturn {\r\n\t\t\tsource: this._cachedSource = this._source.source(),\r\n\t\t\tmap: this._cachedMaps[key]\r\n\t\t};\r\n\t}\r\n\tvar result = this._source.sourceAndMap(options);\r\n\tthis._cachedSource = result.source;\r\n\tthis._cachedMaps[key] = result.map;\r\n\treturn {\r\n\t\tsource: this._cachedSource,\r\n\t\tmap: this._cachedMaps[key]\r\n\t};\r\n};\r\n\r\nCachedSource.prototype.map = function(options) {\r\n\tif(!options) options = {};\r\n\tvar key = JSON.stringify(options);\r\n\tif(key in this._cachedMaps)\r\n\t\treturn this._cachedMaps[key];\r\n\treturn this._cachedMaps[key] = this._source.map();\r\n};\r\n\r\nCachedSource.prototype.updateHash = function(hash) {\r\n\tthis._source.updateHash(hash);\r\n};\r\n","/home/travis/build/npmtest/node-npmtest-webpack/node_modules/webpack-sources/lib/ConcatSource.js":"/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\nvar SourceNode = require(\"source-map\").SourceNode;\r\nvar SourceListMap = require(\"source-list-map\").SourceListMap;\r\nvar Source = require(\"./Source\");\r\n\r\nfunction ConcatSource() {\r\n\tSource.call(this);\r\n\tthis.children = Array.prototype.slice.call(arguments);\r\n}\r\nmodule.exports = ConcatSource;\r\n\r\nConcatSource.prototype = Object.create(Source.prototype);\r\nConcatSource.prototype.constructor = ConcatSource;\r\n\r\nConcatSource.prototype.add = function(item) {\r\n\tthis.children.push(item);\r\n};\r\n\r\nConcatSource.prototype.source = function() {\r\n\treturn this.children.map(function(item) {\r\n\t\treturn typeof item === \"string\" ? item : item.source();\r\n\t}).join(\"\");\r\n};\r\n\r\nConcatSource.prototype.size = function() {\r\n\treturn this.children.map(function(item) {\r\n\t\treturn typeof item === \"string\" ? item.length : item.size();\r\n\t}).reduce(function(sum, s) {\r\n\t\treturn sum + s;\r\n\t}, 0);\r\n};\r\n\r\nrequire(\"./SourceAndMapMixin\")(ConcatSource.prototype);\r\n\r\nConcatSource.prototype.node = function(options) {\r\n\tvar node = new SourceNode(null, null, null, this.children.map(function(item) {\r\n\t\treturn typeof item === \"string\" ? item : item.node(options);\r\n\t}));\r\n\treturn node;\r\n};\r\n\r\nConcatSource.prototype.listMap = function(options) {\r\n\tvar map = new SourceListMap();\r\n\tthis.children.forEach(function(item) {\r\n\t\tif(typeof item === \"string\")\r\n\t\t\tmap.add(item);\r\n\t\telse\r\n\t\t\tmap.add(item.listMap(options));\r\n\t});\r\n\treturn map;\r\n};\r\n\r\nConcatSource.prototype.updateHash = function(hash) {\r\n\tthis.children.forEach(function(item) {\r\n\t\tif(typeof item === \"string\")\r\n\t\t\thash.update(item);\r\n\t\telse\r\n\t\t\titem.updateHash(hash);\r\n\t});\r\n};\r\n","/home/travis/build/npmtest/node-npmtest-webpack/node_modules/webpack-sources/lib/ReplaceSource.js":"/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\nvar Source = require(\"./Source\");\r\nvar SourceNode = require(\"source-map\").SourceNode;\r\nvar SourceListMap = require(\"source-list-map\").SourceListMap;\r\nvar fromStringWithSourceMap = require(\"source-list-map\").fromStringWithSourceMap;\r\nvar SourceMapConsumer = require(\"source-map\").SourceMapConsumer;\r\n\r\nfunction ReplaceSource(source, name) {\r\n\tSource.call(this);\r\n\tthis._source = source;\r\n\tthis._name = name;\r\n\tthis.replacements = [];\r\n}\r\nmodule.exports = ReplaceSource;\r\n\r\nReplaceSource.prototype = Object.create(Source.prototype);\r\nReplaceSource.prototype.constructor = ReplaceSource;\r\n\r\nReplaceSource.prototype.replace = function(start, end, newValue) {\r\n\tif(typeof newValue !== \"string\")\r\n\t\tthrow new Error(\"insertion must be a string, but is a \" + typeof newValue);\r\n\tthis.replacements.push([start, end, newValue, this.replacements.length]);\r\n};\r\n\r\nReplaceSource.prototype.insert = function(pos, newValue) {\r\n\tif(typeof newValue !== \"string\")\r\n\t\tthrow new Error(\"insertion must be a string, but is a \" + typeof newValue + \": \" + newValue);\r\n\tthis.replacements.push([pos, pos - 1, newValue, this.replacements.length]);\r\n};\r\n\r\nReplaceSource.prototype.source = function(options) {\r\n\treturn this._replaceString(this._source.source());\r\n};\r\n\r\nReplaceSource.prototype._sortReplacements = function() {\r\n\tthis.replacements.sort(function(a, b) {\r\n\t\tvar diff = b[1] - a[1];\r\n\t\tif(diff !== 0)\r\n\t\t\treturn diff;\r\n\t\tdiff = b[0] - a[0];\r\n\t\tif(diff !== 0)\r\n\t\t\treturn diff;\r\n\t\treturn b[3] - a[3];\r\n\t});\r\n};\r\n\r\nReplaceSource.prototype._replaceString = function(str) {\r\n\tif(typeof str !== \"string\")\r\n\t\tthrow new Error(\"str must be a string, but is a \" + typeof str + \": \" + str);\r\n\tthis._sortReplacements();\r\n\tvar result = [str];\r\n\tthis.replacements.forEach(function(repl) {\r\n\t\tvar remSource = result.pop();\r\n\t\tvar splitted1 = this._splitString(remSource, Math.floor(repl[1] + 1));\r\n\t\tvar splitted2 = this._splitString(splitted1[0], Math.floor(repl[0]));\r\n\t\tresult.push(splitted1[1], repl[2], splitted2[0]);\r\n\t}, this);\r\n\tresult = result.reverse();\r\n\treturn result.join(\"\");\r\n};\r\n\r\nrequire(\"./SourceAndMapMixin\")(ReplaceSource.prototype);\r\n\r\nReplaceSource.prototype.node = function(options) {\r\n\tthis._sortReplacements();\r\n\tvar result = [this._source.node(options)];\r\n\tthis.replacements.forEach(function(repl) {\r\n\t\tvar remSource = result.pop();\r\n\t\tvar splitted1 = this._splitSourceNode(remSource, Math.floor(repl[1] + 1));\r\n\t\tvar splitted2;\r\n\t\tif(Array.isArray(splitted1)) {\r\n\t\t\tsplitted2 = this._splitSourceNode(splitted1[0], Math.floor(repl[0]));\r\n\t\t\tif(Array.isArray(splitted2)) {\r\n\t\t\t\tresult.push(splitted1[1], this._replacementToSourceNode(splitted2[1], repl[2]), splitted2[0]);\r\n\t\t\t} else {\r\n\t\t\t\tresult.push(splitted1[1], this._replacementToSourceNode(splitted1[1], repl[2]), splitted1[0]);\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tsplitted2 = this._splitSourceNode(remSource, Math.floor(repl[0]));\r\n\t\t\tif(Array.isArray(splitted2)) {\r\n\t\t\t\tresult.push(this._replacementToSourceNode(splitted2[1], repl[2]), splitted2[0]);\r\n\t\t\t} else {\r\n\t\t\t\tresult.push(repl[2], remSource);\r\n\t\t\t}\r\n\t\t}\r\n\t}, this);\r\n\tresult = result.reverse();\r\n\treturn new SourceNode(null, null, null, result);\r\n};\r\n\r\nReplaceSource.prototype.listMap = function(options) {\r\n\tthis._sortReplacements();\r\n\tvar map = this._source.listMap(options);\r\n\tvar currentIndex = 0;\r\n\tvar replacements = this.replacements;\r\n\tvar idxReplacement = replacements.length - 1;\r\n\tvar removeChars = 0;\r\n\tmap = map.mapGeneratedCode(function(str) {\r\n\t\tvar newCurrentIndex = currentIndex + str.length;\r\n\t\tif(removeChars > str.length) {\r\n\t\t\tremoveChars -= str.length;\r\n\t\t\tstr = \"\";\r\n\t\t} else {\r\n\t\t\tif(removeChars > 0) {\r\n\t\t\t\tstr = str.substr(removeChars);\r\n\t\t\t\tcurrentIndex += removeChars;\r\n\t\t\t\tremoveChars = 0;\r\n\t\t\t}\r\n\t\t\tvar finalStr = \"\";\r\n\t\t\twhile(idxReplacement >= 0 && replacements[idxReplacement][0] < newCurrentIndex) {\r\n\t\t\t\tvar repl = replacements[idxReplacement];\r\n\t\t\t\tvar start = Math.floor(repl[0]);\r\n\t\t\t\tvar end = Math.floor(repl[1] + 1);\r\n\t\t\t\tvar before = str.substr(0, Math.max(0, start - currentIndex));\r\n\t\t\t\tif(end <= newCurrentIndex) {\r\n\t\t\t\t\tvar after = str.substr(Math.max(0, end - currentIndex));\r\n\t\t\t\t\tfinalStr += before + repl[2];\r\n\t\t\t\t\tstr = after;\r\n\t\t\t\t\tcurrentIndex = Math.max(currentIndex, end);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tfinalStr += before + repl[2];\r\n\t\t\t\t\tstr = \"\";\r\n\t\t\t\t\tremoveChars = end - newCurrentIndex;\r\n\t\t\t\t}\r\n\t\t\t\tidxReplacement--;\r\n\t\t\t}\r\n\t\t\tstr = finalStr + str;\r\n\t\t}\r\n\t\tcurrentIndex = newCurrentIndex;\r\n\t\treturn str;\r\n\t});\r\n\tvar extraCode = \"\";\r\n\twhile(idxReplacement >= 0) {\r\n\t\textraCode += replacements[idxReplacement][2];\r\n\t\tidxReplacement--;\r\n\t}\r\n\tif(extraCode) {\r\n\t\tmap.add(extraCode);\r\n\t}\r\n\treturn map;\r\n};\r\n\r\nReplaceSource.prototype._replacementToSourceNode = function(oldNode, newString) {\r\n\tvar map = oldNode.toStringWithSourceMap({\r\n\t\tfile: \"?\"\r\n\t}).map;\r\n\tvar original = new SourceMapConsumer(map.toJSON()).originalPositionFor({\r\n\t\tline: 1,\r\n\t\tcolumn: 0\r\n\t});\r\n\tif(original) {\r\n\t\treturn new SourceNode(original.line, original.column, original.source, newString);\r\n\t} else {\r\n\t\treturn newString;\r\n\t}\r\n};\r\n\r\nReplaceSource.prototype._splitSourceNode = function(node, position) {\r\n\tif(typeof node === \"string\") {\r\n\t\tif(node.length <= position) return position - node.length;\r\n\t\treturn position <= 0 ? [\"\", node] : [node.substr(0, position), node.substr(position)];\r\n\t} else {\r\n\t\tfor(var i = 0; i < node.children.length; i++) {\r\n\t\t\tposition = this._splitSourceNode(node.children[i], position);\r\n\t\t\tif(Array.isArray(position)) {\r\n\t\t\t\tvar leftNode = new SourceNode(\r\n\t\t\t\t\tnode.line,\r\n\t\t\t\t\tnode.column,\r\n\t\t\t\t\tnode.source,\r\n\t\t\t\t\tnode.children.slice(0, i).concat([position[0]]),\r\n\t\t\t\t\tnode.name\r\n\t\t\t\t);\r\n\t\t\t\tvar rightNode = new SourceNode(\r\n\t\t\t\t\tnode.line,\r\n\t\t\t\t\tnode.column,\r\n\t\t\t\t\tnode.source, [position[1]].concat(node.children.slice(i + 1)),\r\n\t\t\t\t\tnode.name\r\n\t\t\t\t);\r\n\t\t\t\tleftNode.sourceContents = node.sourceContents;\r\n\t\t\t\treturn [leftNode, rightNode];\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn position;\r\n\t}\r\n};\r\n\r\nReplaceSource.prototype._splitString = function(str, position) {\r\n\treturn position <= 0 ? [\"\", str] : [str.substr(0, position), str.substr(position)];\r\n};\r\n","/home/travis/build/npmtest/node-npmtest-webpack/node_modules/webpack-sources/lib/PrefixSource.js":"/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\nvar Source = require(\"./Source\");\r\nvar SourceNode = require(\"source-map\").SourceNode;\r\n\r\nvar REPLACE_REGEX = /\\n(?=.|\\s)/g\r\n\r\nfunction PrefixSource(prefix, source) {\r\n\tSource.call(this);\r\n\tthis._source = source;\r\n\tthis._prefix = prefix;\r\n}\r\nmodule.exports = PrefixSource;\r\n\r\nPrefixSource.prototype = Object.create(Source.prototype);\r\nPrefixSource.prototype.constructor = PrefixSource;\r\n\r\nPrefixSource.prototype.source = function() {\r\n\tvar node = typeof this._source === \"string\" ? this._source : this._source.source();\r\n\tvar prefix = this._prefix;\r\n\treturn prefix + node.replace(REPLACE_REGEX, \"\\n\" + prefix);\r\n};\r\n\r\nrequire(\"./SourceAndMapMixin\")(PrefixSource.prototype);\r\n\r\nPrefixSource.prototype.node = function(options) {\r\n\tvar node = this._source.node(options);\r\n\tvar append = [this._prefix];\r\n\treturn new SourceNode(null, null, null, [\r\n\t\tcloneAndPrefix(node, this._prefix, append)\r\n\t]);\r\n};\r\n\r\nPrefixSource.prototype.listMap = function(options) {\r\n\tvar prefix = this._prefix;\r\n\tvar map = this._source.listMap(options);\r\n\treturn map.mapGeneratedCode(function(code) {\r\n\t\treturn prefix + code.replace(REPLACE_REGEX, \"\\n\" + prefix);\r\n\t});\r\n};\r\n\r\nPrefixSource.prototype.updateHash = function(hash) {\r\n\tif(typeof this._source === \"string\")\r\n\t\thash.update(this._source);\r\n\telse\r\n\t\tthis._source.updateHash(hash);\r\n\tif(typeof this._prefix === \"string\")\r\n\t\thash.update(this._prefix);\r\n\telse\r\n\t\tthis._prefix.updateHash(hash);\r\n};\r\n\r\nfunction cloneAndPrefix(node, prefix, append) {\r\n\tif(typeof node === \"string\") {\r\n\t\tvar result = node.replace(REPLACE_REGEX, \"\\n\" + prefix);\r\n\t\tif(append.length > 0) result = append.pop() + result;\r\n\t\tif(/\\n$/.test(node)) append.push(prefix);\r\n\t\treturn result;\r\n\t} else {\r\n\t\tvar newNode = new SourceNode(\r\n\t\t\tnode.line,\r\n\t\t\tnode.column,\r\n\t\t\tnode.source,\r\n\t\t\tnode.children.map(function(node) {\r\n\t\t\t\treturn cloneAndPrefix(node, prefix, append);\r\n\t\t\t}),\r\n\t\t\tnode.name\r\n\t\t);\r\n\t\tnewNode.sourceContents = node.sourceContents;\r\n\t\treturn newNode;\r\n\t}\r\n};\r\n","/home/travis/build/npmtest/node-npmtest-webpack/node_modules/webpack/lib/ModuleReason.js":"/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\n\"use strict\";\r\n\r\nmodule.exports = class ModuleReason {\r\n\tconstructor(module, dependency) {\r\n\t\tthis.module = module;\r\n\t\tthis.dependency = dependency;\r\n\t}\r\n};\r\n","/home/travis/build/npmtest/node-npmtest-webpack/node_modules/webpack/lib/Template.js":"/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\n\"use strict\";\r\n\r\nconst Tapable = require(\"tapable\");\r\nconst ConcatSource = require(\"webpack-sources\").ConcatSource;\r\n\r\nconst START_LOWERCASE_ALPHABET_CODE = \"a\".charCodeAt(0);\r\nconst START_UPPERCASE_ALPHABET_CODE = \"A\".charCodeAt(0);\r\nconst DELTA_A_TO_Z = \"z\".charCodeAt(0) - START_LOWERCASE_ALPHABET_CODE + 1;\r\n\r\nmodule.exports = class Template extends Tapable {\r\n\tconstructor(outputOptions) {\r\n\t\tsuper();\r\n\t\tthis.outputOptions = outputOptions || {};\r\n\t}\r\n\r\n\tstatic getFunctionContent(fn) {\r\n\t\treturn fn.toString().replace(/^function\\s?\\(\\)\\s?\\{\\n?|\\n?\\}$/g, \"\").replace(/^\\t/mg, \"\");\r\n\t}\r\n\r\n\tstatic toIdentifier(str) {\r\n\t\tif(typeof str !== \"string\") return \"\";\r\n\t\treturn str.replace(/^[^a-zA-Z$_]/, \"_\").replace(/[^a-zA-Z0-9$_]/g, \"_\");\r\n\t}\r\n\r\n\t// map number to a single character a-z, A-Z or <_ + number> if number is too big\r\n\tstatic numberToIdentifer(n) {\r\n\t\t// lower case\r\n\t\tif(n < DELTA_A_TO_Z) return String.fromCharCode(START_LOWERCASE_ALPHABET_CODE + n);\r\n\r\n\t\t// upper case\r\n\t\tn -= DELTA_A_TO_Z;\r\n\t\tif(n < DELTA_A_TO_Z) return String.fromCharCode(START_UPPERCASE_ALPHABET_CODE + n);\r\n\r\n\t\t// fall back to _ + number\r\n\t\tn -= DELTA_A_TO_Z;\r\n\t\treturn \"_\" + n;\r\n\t}\r\n\r\n\tindent(str) {\r\n\t\tif(Array.isArray(str)) {\r\n\t\t\treturn str.map(this.indent.bind(this)).join(\"\\n\");\r\n\t\t} else {\r\n\t\t\tstr = str.trimRight();\r\n\t\t\tif(!str) return \"\";\r\n\t\t\tvar ind = (str[0] === \"\\n\" ? \"\" : \"\\t\");\r\n\t\t\treturn ind + str.replace(/\\n([^\\n])/g, \"\\n\\t$1\");\r\n\t\t}\r\n\t}\r\n\r\n\tprefix(str, prefix) {\r\n\t\tif(Array.isArray(str)) {\r\n\t\t\tstr = str.join(\"\\n\");\r\n\t\t}\r\n\t\tstr = str.trim();\r\n\t\tif(!str) return \"\";\r\n\t\tconst ind = (str[0] === \"\\n\" ? \"\" : prefix);\r\n\t\treturn ind + str.replace(/\\n([^\\n])/g, \"\\n\" + prefix + \"$1\");\r\n\t}\r\n\r\n\tasString(str) {\r\n\t\tif(Array.isArray(str)) {\r\n\t\t\treturn str.join(\"\\n\");\r\n\t\t}\r\n\t\treturn str;\r\n\t}\r\n\r\n\tgetModulesArrayBounds(modules) {\r\n\t\tif(!modules.every(moduleIdIsNumber))\r\n\t\t\treturn false;\r\n\t\tvar maxId = -Infinity;\r\n\t\tvar minId = Infinity;\r\n\t\tmodules.forEach(function(module) {\r\n\t\t\tif(maxId < module.id) maxId = module.id;\r\n\t\t\tif(minId > module.id) minId = module.id;\r\n\t\t});\r\n\t\tif(minId < 16 + (\"\" + minId).length) {\r\n\t\t\t// add minId x ',' instead of 'Array(minId).concat(...)'\r\n\t\t\tminId = 0;\r\n\t\t}\r\n\t\tvar objectOverhead = modules.map(function(module) {\r\n\t\t\tvar idLength = (module.id + \"\").length;\r\n\t\t\treturn idLength + 2;\r\n\t\t}).reduce(function(a, b) {\r\n\t\t\treturn a + b;\r\n\t\t}, -1);\r\n\t\tvar arrayOverhead = minId === 0 ? maxId : 16 + (\"\" + minId).length + maxId;\r\n\t\treturn arrayOverhead < objectOverhead ? [minId, maxId] : false;\r\n\t}\r\n\r\n\trenderChunkModules(chunk, moduleTemplate, dependencyTemplates, prefix) {\r\n\t\tif(!prefix) prefix = \"\";\r\n\t\tvar source = new ConcatSource();\r\n\t\tif(chunk.modules.length === 0) {\r\n\t\t\tsource.add(\"[]\");\r\n\t\t\treturn source;\r\n\t\t}\r\n\t\tvar removedModules = chunk.removedModules;\r\n\t\tvar allModules = chunk.modules.map(function(module) {\r\n\t\t\treturn {\r\n\t\t\t\tid: module.id,\r\n\t\t\t\tsource: moduleTemplate.render(module, dependencyTemplates, chunk)\r\n\t\t\t};\r\n\t\t});\r\n\t\tif(removedModules && removedModules.length > 0) {\r\n\t\t\tremovedModules.forEach(function(id) {\r\n\t\t\t\tallModules.push({\r\n\t\t\t\t\tid: id,\r\n\t\t\t\t\tsource: \"false\"\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t}\r\n\t\tvar bounds = this.getModulesArrayBounds(chunk.modules);\r\n\r\n\t\tif(bounds) {\r\n\t\t\t// Render a spare array\r\n\t\t\tvar minId = bounds[0];\r\n\t\t\tvar maxId = bounds[1];\r\n\t\t\tif(minId !== 0) source.add(\"Array(\" + minId + \").concat(\");\r\n\t\t\tsource.add(\"[\\n\");\r\n\t\t\tvar modules = {};\r\n\t\t\tallModules.forEach(function(module) {\r\n\t\t\t\tmodules[module.id] = module;\r\n\t\t\t});\r\n\t\t\tfor(var idx = minId; idx <= maxId; idx++) {\r\n\t\t\t\tvar module = modules[idx];\r\n\t\t\t\tif(idx !== minId) source.add(\",\\n\");\r\n\t\t\t\tsource.add(\"/* \" + idx + \" */\");\r\n\t\t\t\tif(module) {\r\n\t\t\t\t\tsource.add(\"\\n\");\r\n\t\t\t\t\tsource.add(module.source);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tsource.add(\"\\n\" + prefix + \"]\");\r\n\t\t\tif(minId !== 0) source.add(\")\");\r\n\t\t} else {\r\n\t\t\t// Render an object\r\n\t\t\tsource.add(\"{\\n\");\r\n\t\t\tallModules.sort(function(a, b) {\r\n\t\t\t\tvar aId = a.id + \"\";\r\n\t\t\t\tvar bId = b.id + \"\";\r\n\t\t\t\tif(aId < bId) return -1;\r\n\t\t\t\tif(aId > bId) return 1;\r\n\t\t\t\treturn 0;\r\n\t\t\t}).forEach(function(module, idx) {\r\n\t\t\t\tif(idx !== 0) source.add(\",\\n\");\r\n\t\t\t\tsource.add(\"\\n/***/ \" + JSON.stringify(module.id) + \":\\n\");\r\n\t\t\t\tsource.add(module.source);\r\n\t\t\t});\r\n\t\t\tsource.add(\"\\n\\n\" + prefix + \"}\");\r\n\t\t}\r\n\t\treturn source;\r\n\t}\r\n};\r\n\r\nfunction moduleIdIsNumber(module) {\r\n\treturn typeof module.id === \"number\";\r\n}\r\n","/home/travis/build/npmtest/node-npmtest-webpack/node_modules/webpack/lib/Chunk.js":"/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\n\"use strict\";\r\n\r\nconst compareLocations = require(\"./compareLocations\");\r\nlet debugId = 1000;\r\n\r\nconst byId = (a, b) => {\r\n\tif(a.id < b.id) return -1;\r\n\tif(b.id < a.id) return 1;\r\n\treturn 0;\r\n};\r\n\r\nclass Chunk {\r\n\r\n\tconstructor(name, module, loc) {\r\n\t\tthis.id = null;\r\n\t\tthis.ids = null;\r\n\t\tthis.debugId = debugId++;\r\n\t\tthis.name = name;\r\n\t\tthis.modules = [];\r\n\t\tthis.entrypoints = [];\r\n\t\tthis.chunks = [];\r\n\t\tthis.parents = [];\r\n\t\tthis.blocks = [];\r\n\t\tthis.origins = [];\r\n\t\tthis.files = [];\r\n\t\tthis.rendered = false;\r\n\t\tif(module) {\r\n\t\t\tthis.origins.push({\r\n\t\t\t\tmodule,\r\n\t\t\t\tloc,\r\n\t\t\t\tname\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\tget entry() {\r\n\t\tthrow new Error(\"Chunk.entry was removed. Use hasRuntime()\");\r\n\t}\r\n\r\n\tset entry(data) {\r\n\t\tthrow new Error(\"Chunk.entry was removed. Use hasRuntime()\");\r\n\t}\r\n\r\n\tget initial() {\r\n\t\tthrow new Error(\"Chunk.initial was removed. Use isInitial()\");\r\n\t}\r\n\r\n\tset initial(data) {\r\n\t\tthrow new Error(\"Chunk.initial was removed. Use isInitial()\");\r\n\t}\r\n\r\n\thasRuntime() {\r\n\t\tif(this.entrypoints.length === 0) return false;\r\n\t\treturn this.entrypoints[0].chunks[0] === this;\r\n\t}\r\n\r\n\tisInitial() {\r\n\t\treturn this.entrypoints.length > 0;\r\n\t}\r\n\r\n\thasEntryModule() {\r\n\t\treturn !!this.entryModule;\r\n\t}\r\n\r\n\taddToCollection(collection, item) {\r\n\t\tif(item === this) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tif(collection.indexOf(item) > -1) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tcollection.push(item);\r\n\t\treturn true;\r\n\t}\r\n\r\n\taddChunk(chunk) {\r\n\t\treturn this.addToCollection(this.chunks, chunk);\r\n\t}\r\n\r\n\taddParent(parentChunk) {\r\n\t\treturn this.addToCollection(this.parents, parentChunk);\r\n\t}\r\n\r\n\taddModule(module) {\r\n\t\treturn this.addToCollection(this.modules, module);\r\n\t}\r\n\r\n\taddBlock(block) {\r\n\t\treturn this.addToCollection(this.blocks, block);\r\n\t}\r\n\r\n\tremoveModule(module) {\r\n\t\tconst idx = this.modules.indexOf(module);\r\n\t\tif(idx >= 0) {\r\n\t\t\tthis.modules.splice(idx, 1);\r\n\t\t\tmodule.removeChunk(this);\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\tremoveChunk(chunk) {\r\n\t\tconst idx = this.chunks.indexOf(chunk);\r\n\t\tif(idx >= 0) {\r\n\t\t\tthis.chunks.splice(idx, 1);\r\n\t\t\tchunk.removeParent(this);\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\tremoveParent(chunk) {\r\n\t\tconst idx = this.parents.indexOf(chunk);\r\n\t\tif(idx >= 0) {\r\n\t\t\tthis.parents.splice(idx, 1);\r\n\t\t\tchunk.removeChunk(this);\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\taddOrigin(module, loc) {\r\n\t\tthis.origins.push({\r\n\t\t\tmodule,\r\n\t\t\tloc,\r\n\t\t\tname: this.name\r\n\t\t});\r\n\t}\r\n\r\n\tremove(reason) {\r\n\t\t// cleanup modules\r\n\t\tthis.modules.slice().forEach(module => {\r\n\t\t\tmodule.removeChunk(this);\r\n\t\t});\r\n\r\n\t\t// cleanup parents\r\n\t\tthis.parents.forEach(parentChunk => {\r\n\t\t\t// remove this chunk from its parents\r\n\t\t\tconst idx = parentChunk.chunks.indexOf(this);\r\n\t\t\tif(idx >= 0) {\r\n\t\t\t\tparentChunk.chunks.splice(idx, 1);\r\n\t\t\t}\r\n\r\n\t\t\t// cleanup \"sub chunks\"\r\n\t\t\tthis.chunks.forEach(chunk => {\r\n\t\t\t\t/**\r\n\t\t\t\t * remove this chunk as \"intermediary\" and connect\r\n\t\t\t\t * it \"sub chunks\" and parents directly\r\n\t\t\t\t */\r\n\t\t\t\t// add parent to each \"sub chunk\"\r\n\t\t\t\tchunk.addParent(parentChunk);\r\n\t\t\t\t// add \"sub chunk\" to parent\r\n\t\t\t\tparentChunk.addChunk(chunk);\r\n\t\t\t});\r\n\t\t});\r\n\r\n\t\t/**\r\n\t\t * we need to iterate again over the chunks\r\n\t\t * to remove this from the chunks parents.\r\n\t\t * This can not be done in the above loop\r\n\t\t * as it is not garuanteed that `this.parents` contains anything.\r\n\t\t */\r\n\t\tthis.chunks.forEach(chunk => {\r\n\t\t\t// remove this as parent of every \"sub chunk\"\r\n\t\t\tconst idx = chunk.parents.indexOf(this);\r\n\t\t\tif(idx >= 0) {\r\n\t\t\t\tchunk.parents.splice(idx, 1);\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\t// cleanup blocks\r\n\t\tthis.blocks.forEach(block => {\r\n\t\t\tconst idx = block.chunks.indexOf(this);\r\n\t\t\tif(idx >= 0) {\r\n\t\t\t\tblock.chunks.splice(idx, 1);\r\n\t\t\t\tif(block.chunks.length === 0) {\r\n\t\t\t\t\tblock.chunks = null;\r\n\t\t\t\t\tblock.chunkReason = reason;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\tmoveModule(module, otherChunk) {\r\n\t\tmodule.removeChunk(this);\r\n\t\tmodule.addChunk(otherChunk);\r\n\t\totherChunk.addModule(module);\r\n\t\tmodule.rewriteChunkInReasons(this, [otherChunk]);\r\n\t}\r\n\r\n\treplaceChunk(oldChunk, newChunk) {\r\n\t\tconst idx = this.chunks.indexOf(oldChunk);\r\n\t\tif(idx >= 0) {\r\n\t\t\tthis.chunks.splice(idx, 1);\r\n\t\t}\r\n\t\tif(this !== newChunk && newChunk.addParent(this)) {\r\n\t\t\tthis.addChunk(newChunk);\r\n\t\t}\r\n\t}\r\n\r\n\treplaceParentChunk(oldParentChunk, newParentChunk) {\r\n\t\tconst idx = this.parents.indexOf(oldParentChunk);\r\n\t\tif(idx >= 0) {\r\n\t\t\tthis.parents.splice(idx, 1);\r\n\t\t}\r\n\t\tif(this !== newParentChunk && newParentChunk.addChunk(this)) {\r\n\t\t\tthis.addParent(newParentChunk);\r\n\t\t}\r\n\t}\r\n\r\n\tintegrate(otherChunk, reason) {\r\n\t\tif(!this.canBeIntegrated(otherChunk)) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tconst otherChunkModules = otherChunk.modules.slice();\r\n\t\totherChunkModules.forEach(module => otherChunk.moveModule(module, this));\r\n\t\totherChunk.modules.length = 0;\r\n\r\n\t\totherChunk.parents.forEach(parentChunk => parentChunk.replaceChunk(otherChunk, this));\r\n\t\totherChunk.parents.length = 0;\r\n\r\n\t\totherChunk.chunks.forEach(chunk => chunk.replaceParentChunk(otherChunk, this));\r\n\t\totherChunk.chunks.length = 0;\r\n\r\n\t\totherChunk.blocks.forEach(b => {\r\n\t\t\tb.chunks = b.chunks ? b.chunks.map(c => {\r\n\t\t\t\treturn c === otherChunk ? this : c;\r\n\t\t\t}) : [this];\r\n\t\t\tb.chunkReason = reason;\r\n\t\t\tthis.addBlock(b);\r\n\t\t});\r\n\t\totherChunk.blocks.length = 0;\r\n\r\n\t\totherChunk.origins.forEach(origin => {\r\n\t\t\tthis.origins.push(origin);\r\n\t\t});\r\n\t\tthis.origins.forEach(origin => {\r\n\t\t\tif(!origin.reasons) {\r\n\t\t\t\torigin.reasons = [reason];\r\n\t\t\t} else if(origin.reasons[0] !== reason) {\r\n\t\t\t\torigin.reasons.unshift(reason);\r\n\t\t\t}\r\n\t\t});\r\n\t\tthis.chunks = this.chunks.filter(chunk => {\r\n\t\t\treturn chunk !== otherChunk && chunk !== this;\r\n\t\t});\r\n\t\tthis.parents = this.parents.filter(parentChunk => {\r\n\t\t\treturn parentChunk !== otherChunk && parentChunk !== this;\r\n\t\t});\r\n\t\treturn true;\r\n\t}\r\n\r\n\tsplit(newChunk) {\r\n\t\tthis.blocks.forEach(block => {\r\n\t\t\tnewChunk.blocks.push(block);\r\n\t\t\tblock.chunks.push(newChunk);\r\n\t\t});\r\n\t\tthis.chunks.forEach(chunk => {\r\n\t\t\tnewChunk.chunks.push(chunk);\r\n\t\t\tchunk.parents.push(newChunk);\r\n\t\t});\r\n\t\tthis.parents.forEach(parentChunk => {\r\n\t\t\tparentChunk.chunks.push(newChunk);\r\n\t\t\tnewChunk.parents.push(parentChunk);\r\n\t\t});\r\n\t\tthis.entrypoints.forEach(entrypoint => {\r\n\t\t\tentrypoint.insertChunk(newChunk, this);\r\n\t\t});\r\n\t}\r\n\r\n\tisEmpty() {\r\n\t\treturn this.modules.length === 0;\r\n\t}\r\n\r\n\tupdateHash(hash) {\r\n\t\thash.update(`${this.id} `);\r\n\t\thash.update(this.ids ? this.ids.join(\",\") : \"\");\r\n\t\thash.update(`${this.name || \"\"} `);\r\n\t\tthis.modules.forEach(m => m.updateHash(hash));\r\n\t}\r\n\r\n\tcanBeIntegrated(otherChunk) {\r\n\t\tif(otherChunk.isInitial()) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\tif(this.isInitial()) {\r\n\t\t\tif(otherChunk.parents.length !== 1 || otherChunk.parents[0] !== this) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn true;\r\n\t}\r\n\r\n\taddMultiplierAndOverhead(size, options) {\r\n\t\tconst overhead = typeof options.chunkOverhead === \"number\" ? options.chunkOverhead : 10000;\r\n\t\tconst multiplicator = this.isInitial() ? (options.entryChunkMultiplicator || 10) : 1;\r\n\r\n\t\treturn size * multiplicator + overhead;\r\n\t}\r\n\r\n\tmodulesSize() {\r\n\t\tlet count = 0;\r\n\t\tfor(let i = 0; i < this.modules.length; i++) {\r\n\t\t\tcount += this.modules[i].size();\r\n\t\t}\r\n\t\treturn count;\r\n\t}\r\n\r\n\tsize(options) {\r\n\t\treturn this.addMultiplierAndOverhead(this.modulesSize(), options);\r\n\t}\r\n\r\n\tintegratedSize(otherChunk, options) {\r\n\t\t// Chunk if it's possible to integrate this chunk\r\n\t\tif(!this.canBeIntegrated(otherChunk)) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tlet integratedModulesSize = this.modulesSize();\r\n\t\t// only count modules that do not exist in this chunk!\r\n\t\tfor(let i = 0; i < otherChunk.modules.length; i++) {\r\n\t\t\tconst otherModule = otherChunk.modules[i];\r\n\t\t\tif(this.modules.indexOf(otherModule) === -1) {\r\n\t\t\t\tintegratedModulesSize += otherModule.size();\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn this.addMultiplierAndOverhead(integratedModulesSize, options);\r\n\t}\r\n\r\n\tgetChunkMaps(includeEntries, realHash) {\r\n\t\tconst chunksProcessed = [];\r\n\t\tconst chunkHashMap = {};\r\n\t\tconst chunkNameMap = {};\r\n\t\t(function addChunk(chunk) {\r\n\t\t\tif(chunksProcessed.indexOf(chunk) >= 0) return;\r\n\t\t\tchunksProcessed.push(chunk);\r\n\t\t\tif(!chunk.hasRuntime() || includeEntries) {\r\n\t\t\t\tchunkHashMap[chunk.id] = realHash ? chunk.hash : chunk.renderedHash;\r\n\t\t\t\tif(chunk.name)\r\n\t\t\t\t\tchunkNameMap[chunk.id] = chunk.name;\r\n\t\t\t}\r\n\t\t\tchunk.chunks.forEach(addChunk);\r\n\t\t}(this));\r\n\t\treturn {\r\n\t\t\thash: chunkHashMap,\r\n\t\t\tname: chunkNameMap\r\n\t\t};\r\n\t}\r\n\r\n\tsortItems() {\r\n\t\tthis.modules.sort(byId);\r\n\t\tthis.origins.sort((a, b) => {\r\n\t\t\tconst aIdent = a.module.identifier();\r\n\t\t\tconst bIdent = b.module.identifier();\r\n\t\t\tif(aIdent < bIdent) return -1;\r\n\t\t\tif(aIdent > bIdent) return 1;\r\n\t\t\treturn compareLocations(a.loc, b.loc);\r\n\t\t});\r\n\t\tthis.origins.forEach(origin => {\r\n\t\t\tif(origin.reasons)\r\n\t\t\t\torigin.reasons.sort();\r\n\t\t});\r\n\t\tthis.parents.sort(byId);\r\n\t\tthis.chunks.sort(byId);\r\n\t}\r\n\r\n\ttoString() {\r\n\t\treturn `Chunk[${this.modules.join()}]`;\r\n\t}\r\n\r\n\tcheckConstraints() {\r\n\t\tconst chunk = this;\r\n\t\tchunk.chunks.forEach((child, idx) => {\r\n\t\t\tif(chunk.chunks.indexOf(child) !== idx)\r\n\t\t\t\tthrow new Error(`checkConstraints: duplicate child in chunk ${chunk.debugId} ${child.debugId}`);\r\n\t\t\tif(child.parents.indexOf(chunk) < 0)\r\n\t\t\t\tthrow new Error(`checkConstraints: child missing parent ${chunk.debugId} -> ${child.debugId}`);\r\n\t\t});\r\n\t\tchunk.parents.forEach((parentChunk, idx) => {\r\n\t\t\tif(chunk.parents.indexOf(parentChunk) !== idx)\r\n\t\t\t\tthrow new Error(`checkConstraints: duplicate parent in chunk ${chunk.debugId} ${parentChunk.debugId}`);\r\n\t\t\tif(parentChunk.chunks.indexOf(chunk) < 0)\r\n\t\t\t\tthrow new Error(`checkConstraints: parent missing child ${parentChunk.debugId} <- ${chunk.debugId}`);\r\n\t\t});\r\n\t}\r\n}\r\n\r\nmodule.exports = Chunk;\r\n","/home/travis/build/npmtest/node-npmtest-webpack/node_modules/webpack/lib/compareLocations.js":"/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\n\"use strict\";\r\nmodule.exports = function compareLocations(a, b) {\r\n\tif(typeof a === \"string\") {\r\n\t\tif(typeof b === \"string\") {\r\n\t\t\tif(a < b) return -1;\r\n\t\t\tif(a > b) return 1;\r\n\t\t\treturn 0;\r\n\t\t} else if(typeof b === \"object\") {\r\n\t\t\treturn 1;\r\n\t\t} else {\r\n\t\t\treturn 0;\r\n\t\t}\r\n\t} else if(typeof a === \"object\") {\r\n\t\tif(typeof b === \"string\") {\r\n\t\t\treturn -1;\r\n\t\t} else if(typeof b === \"object\") {\r\n\t\t\tif(a.start && b.start) {\r\n\t\t\t\tconst ap = a.start;\r\n\t\t\t\tconst bp = b.start;\r\n\t\t\t\tif(ap.line < bp.line) return -1;\r\n\t\t\t\tif(ap.line > bp.line) return 1;\r\n\t\t\t\tif(ap.column < bp.column) return -1;\r\n\t\t\t\tif(ap.column > bp.column) return 1;\r\n\t\t\t}\r\n\t\t\tif(a.index < b.index) return -1;\r\n\t\t\tif(a.index > b.index) return 1;\r\n\t\t\treturn 0;\r\n\t\t} else {\r\n\t\t\treturn 0;\r\n\t\t}\r\n\t}\r\n};\r\n","/home/travis/build/npmtest/node-npmtest-webpack/node_modules/webpack/lib/Entrypoint.js":"/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\n\"use strict\";\r\n\r\nclass Entrypoint {\r\n\tconstructor(name) {\r\n\t\tthis.name = name;\r\n\t\tthis.chunks = [];\r\n\t}\r\n\r\n\tunshiftChunk(chunk) {\r\n\t\tthis.chunks.unshift(chunk);\r\n\t\tchunk.entrypoints.push(this);\r\n\t}\r\n\r\n\tinsertChunk(chunk, before) {\r\n\t\tconst idx = this.chunks.indexOf(before);\r\n\t\tif(idx >= 0) {\r\n\t\t\tthis.chunks.splice(idx, 0, chunk);\r\n\t\t} else {\r\n\t\t\tthrow new Error(\"before chunk not found\");\r\n\t\t}\r\n\t\tchunk.entrypoints.push(this);\r\n\t}\r\n\r\n\tgetFiles() {\r\n\t\tconst files = [];\r\n\r\n\t\tfor(let chunkIdx = 0; chunkIdx < this.chunks.length; chunkIdx++) {\r\n\t\t\tfor(let fileIdx = 0; fileIdx < this.chunks[chunkIdx].files.length; fileIdx++) {\r\n\t\t\t\tif(files.indexOf(this.chunks[chunkIdx].files[fileIdx]) === -1) {\r\n\t\t\t\t\tfiles.push(this.chunks[chunkIdx].files[fileIdx]);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn files;\r\n\t}\r\n}\r\n\r\nmodule.exports = Entrypoint;\r\n","/home/travis/build/npmtest/node-npmtest-webpack/node_modules/webpack/lib/Stats.js":"/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\n\"use strict\";\r\n\r\nconst RequestShortener = require(\"./RequestShortener\");\r\nconst SizeFormatHelpers = require(\"./SizeFormatHelpers\");\r\nconst formatLocation = require(\"./formatLocation\");\r\n\r\nconst optionOrFallback = (optionValue, fallbackValue) => optionValue !== undefined ? optionValue : fallbackValue;\r\n\r\nclass Stats {\r\n\tconstructor(compilation) {\r\n\t\tthis.compilation = compilation;\r\n\t\tthis.hash = compilation.hash;\r\n\t}\r\n\r\n\tstatic filterWarnings(warnings, warningsFilter) {\r\n\t\t// we dont have anything to filter so all warnings can be shown\r\n\t\tif(!warningsFilter) {\r\n\t\t\treturn warnings;\r\n\t\t}\r\n\r\n\t\t// create a chain of filters\r\n\t\t// if they return \"true\" a warning should be surpressed\r\n\t\tconst normalizedWarningsFilters = [].concat(warningsFilter).map(filter => {\r\n\t\t\tif(typeof filter === \"string\") {\r\n\t\t\t\treturn warning => warning.indexOf(filter) > -1;\r\n\t\t\t}\r\n\r\n\t\t\tif(filter instanceof RegExp) {\r\n\t\t\t\treturn warning => filter.test(warning);\r\n\t\t\t}\r\n\r\n\t\t\tif(typeof filter === \"function\") {\r\n\t\t\t\treturn filter;\r\n\t\t\t}\r\n\r\n\t\t\tthrow new Error(`Can only filter warnings with Strings or RegExps. (Given: ${filter})`);\r\n\t\t});\r\n\t\treturn warnings.filter(warning => {\r\n\t\t\treturn !normalizedWarningsFilters.some(check => check(warning));\r\n\t\t});\r\n\t}\r\n\r\n\thasWarnings() {\r\n\t\treturn this.compilation.warnings.length > 0;\r\n\t}\r\n\r\n\thasErrors() {\r\n\t\treturn this.compilation.errors.length > 0;\r\n\t}\r\n\r\n\t// remove a prefixed \"!\" that can be specified to reverse sort order\r\n\tnormalizeFieldKey(field) {\r\n\t\tif(field[0] === \"!\") {\r\n\t\t\treturn field.substr(1);\r\n\t\t}\r\n\t\treturn field;\r\n\t}\r\n\r\n\t// if a field is prefixed by a \"!\" reverse sort order\r\n\tsortOrderRegular(field) {\r\n\t\tif(field[0] === \"!\") {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\treturn true;\r\n\t}\r\n\r\n\ttoJson(options, forToString) {\r\n\t\tif(typeof options === \"boolean\" || typeof options === \"string\") {\r\n\t\t\toptions = Stats.presetToOptions(options);\r\n\t\t} else if(!options) {\r\n\t\t\toptions = {};\r\n\t\t}\r\n\r\n\t\tconst compilation = this.compilation;\r\n\t\tconst requestShortener = new RequestShortener(optionOrFallback(options.context, process.cwd()));\r\n\t\tconst showPerformance = optionOrFallback(options.performance, true);\r\n\t\tconst showHash = optionOrFallback(options.hash, true);\r\n\t\tconst showVersion = optionOrFallback(options.version, true);\r\n\t\tconst showTimings = optionOrFallback(options.timings, true);\r\n\t\tconst showAssets = optionOrFallback(options.assets, true);\r\n\t\tconst showEntrypoints = optionOrFallback(options.entrypoints, !forToString);\r\n\t\tconst showChunks = optionOrFallback(options.chunks, true);\r\n\t\tconst showChunkModules = optionOrFallback(options.chunkModules, !!forToString);\r\n\t\tconst showChunkOrigins = optionOrFallback(options.chunkOrigins, !forToString);\r\n\t\tconst showModules = optionOrFallback(options.modules, !forToString);\r\n\t\tconst showDepth = optionOrFallback(options.depth, !forToString);\r\n\t\tconst showCachedModules = optionOrFallback(options.cached, true);\r\n\t\tconst showCachedAssets = optionOrFallback(options.cachedAssets, true);\r\n\t\tconst showReasons = optionOrFallback(options.reasons, !forToString);\r\n\t\tconst showUsedExports = optionOrFallback(options.usedExports, !forToString);\r\n\t\tconst showProvidedExports = optionOrFallback(options.providedExports, !forToString);\r\n\t\tconst showChildren = optionOrFallback(options.children, true);\r\n\t\tconst showSource = optionOrFallback(options.source, !forToString);\r\n\t\tconst showErrors = optionOrFallback(options.errors, true);\r\n\t\tconst showErrorDetails = optionOrFallback(options.errorDetails, !forToString);\r\n\t\tconst showWarnings = optionOrFallback(options.warnings, true);\r\n\t\tconst warningsFilter = optionOrFallback(options.warningsFilter, null);\r\n\t\tconst showPublicPath = optionOrFallback(options.publicPath, !forToString);\r\n\t\tconst excludeModules = [].concat(optionOrFallback(options.exclude, [])).map(str => {\r\n\t\t\tif(typeof str !== \"string\") return str;\r\n\t\t\treturn new RegExp(`[\\\\\\\\/]${str.replace(/[\\-\\[\\]\\/\\{\\}\\(\\)\\*\\+\\?\\.\\\\\\^\\$\\|]/g, \"\\\\$&\")}([\\\\\\\\/]|$|!|\\\\?)`);\r\n\t\t});\r\n\t\tconst maxModules = optionOrFallback(options.maxModules, forToString ? 15 : Infinity);\r\n\t\tconst sortModules = optionOrFallback(options.modulesSort, \"id\");\r\n\t\tconst sortChunks = optionOrFallback(options.chunksSort, \"id\");\r\n\t\tconst sortAssets = optionOrFallback(options.assetsSort, \"\");\r\n\r\n\t\tconst createModuleFilter = () => {\r\n\t\t\tlet i = 0;\r\n\t\t\treturn module => {\r\n\t\t\t\tif(!showCachedModules && !module.built) {\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t\tif(excludeModules.length > 0) {\r\n\t\t\t\t\tconst ident = requestShortener.shorten(module.resource);\r\n\t\t\t\t\tconst excluded = excludeModules.some(regExp => regExp.test(ident));\r\n\t\t\t\t\tif(excluded)\r\n\t\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t\treturn i++ < maxModules;\r\n\t\t\t};\r\n\t\t};\r\n\r\n\t\tconst sortByFieldAndOrder = (fieldKey, a, b) => {\r\n\t\t\tif(a[fieldKey] === null && b[fieldKey] === null) return 0;\r\n\t\t\tif(a[fieldKey] === null) return 1;\r\n\t\t\tif(b[fieldKey] === null) return -1;\r\n\t\t\tif(a[fieldKey] === b[fieldKey]) return 0;\r\n\t\t\treturn a[fieldKey] < b[fieldKey] ? -1 : 1;\r\n\t\t};\r\n\r\n\t\tconst sortByField = (field) => (a, b) => {\r\n\t\t\tif(!field) {\r\n\t\t\t\treturn 0;\r\n\t\t\t}\r\n\r\n\t\t\tconst fieldKey = this.normalizeFieldKey(field);\r\n\r\n\t\t\t// if a field is prefixed with a \"!\" the sort is reversed!\r\n\t\t\tconst sortIsRegular = this.sortOrderRegular(field);\r\n\r\n\t\t\treturn sortByFieldAndOrder(fieldKey, sortIsRegular ? a : b, sortIsRegular ? b : a);\r\n\t\t};\r\n\r\n\t\tconst formatError = (e) => {\r\n\t\t\tlet text = \"\";\r\n\t\t\tif(typeof e === \"string\")\r\n\t\t\t\te = {\r\n\t\t\t\t\tmessage: e\r\n\t\t\t\t};\r\n\t\t\tif(e.chunk) {\r\n\t\t\t\ttext += `chunk ${e.chunk.name || e.chunk.id}${e.chunk.hasRuntime() ? \" [entry]\" : e.chunk.isInitial() ? \" [initial]\" : \"\"}\\n`;\r\n\t\t\t}\r\n\t\t\tif(e.file) {\r\n\t\t\t\ttext += `${e.file}\\n`;\r\n\t\t\t}\r\n\t\t\tif(e.module && e.module.readableIdentifier && typeof e.module.readableIdentifier === \"function\") {\r\n\t\t\t\ttext += `${e.module.readableIdentifier(requestShortener)}\\n`;\r\n\t\t\t}\r\n\t\t\ttext += e.message;\r\n\t\t\tif(showErrorDetails && e.details) text += `\\n${e.details}`;\r\n\t\t\tif(showErrorDetails && e.missing) text += e.missing.map(item => `\\n[${item}]`).join(\"\");\r\n\t\t\tif(e.dependencies && e.origin) {\r\n\t\t\t\ttext += `\\n @ ${e.origin.readableIdentifier(requestShortener)}`;\r\n\t\t\t\te.dependencies.forEach(dep => {\r\n\t\t\t\t\tif(!dep.loc) return;\r\n\t\t\t\t\tif(typeof dep.loc === \"string\") return;\r\n\t\t\t\t\tconst locInfo = formatLocation(dep.loc);\r\n\t\t\t\t\tif(!locInfo) return;\r\n\t\t\t\t\ttext += ` ${locInfo}`;\r\n\t\t\t\t});\r\n\t\t\t\tlet current = e.origin;\r\n\t\t\t\twhile(current.issuer) {\r\n\t\t\t\t\tcurrent = current.issuer;\r\n\t\t\t\t\ttext += `\\n @ ${current.readableIdentifier(requestShortener)}`;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn text;\r\n\t\t};\r\n\r\n\t\tconst obj = {\r\n\t\t\terrors: compilation.errors.map(formatError),\r\n\t\t\twarnings: Stats.filterWarnings(compilation.warnings.map(formatError), warningsFilter)\r\n\t\t};\r\n\r\n\t\t//We just hint other renderers since actually omitting\r\n\t\t//errors/warnings from the JSON would be kind of weird.\r\n\t\tObject.defineProperty(obj, \"_showWarnings\", {\r\n\t\t\tvalue: showWarnings,\r\n\t\t\tenumerable: false\r\n\t\t});\r\n\t\tObject.defineProperty(obj, \"_showErrors\", {\r\n\t\t\tvalue: showErrors,\r\n\t\t\tenumerable: false\r\n\t\t});\r\n\r\n\t\tif(showVersion) {\r\n\t\t\tobj.version = require(\"../package.json\").version;\r\n\t\t}\r\n\r\n\t\tif(showHash) obj.hash = this.hash;\r\n\t\tif(showTimings && this.startTime && this.endTime) {\r\n\t\t\tobj.time = this.endTime - this.startTime;\r\n\t\t}\r\n\t\tif(compilation.needAdditionalPass) {\r\n\t\t\tobj.needAdditionalPass = true;\r\n\t\t}\r\n\t\tif(showPublicPath) {\r\n\t\t\tobj.publicPath = this.compilation.mainTemplate.getPublicPath({\r\n\t\t\t\thash: this.compilation.hash\r\n\t\t\t});\r\n\t\t}\r\n\t\tif(showAssets) {\r\n\t\t\tconst assetsByFile = {};\r\n\t\t\tobj.assetsByChunkName = {};\r\n\t\t\tobj.assets = Object.keys(compilation.assets).map(asset => {\r\n\t\t\t\tconst obj = {\r\n\t\t\t\t\tname: asset,\r\n\t\t\t\t\tsize: compilation.assets[asset].size(),\r\n\t\t\t\t\tchunks: [],\r\n\t\t\t\t\tchunkNames: [],\r\n\t\t\t\t\temitted: compilation.assets[asset].emitted\r\n\t\t\t\t};\r\n\r\n\t\t\t\tif(showPerformance) {\r\n\t\t\t\t\tobj.isOverSizeLimit = compilation.assets[asset].isOverSizeLimit;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tassetsByFile[asset] = obj;\r\n\t\t\t\treturn obj;\r\n\t\t\t}).filter(asset => showCachedAssets || asset.emitted);\r\n\r\n\t\t\tcompilation.chunks.forEach(chunk => {\r\n\t\t\t\tchunk.files.forEach(asset => {\r\n\t\t\t\t\tif(assetsByFile[asset]) {\r\n\t\t\t\t\t\tchunk.ids.forEach(id => {\r\n\t\t\t\t\t\t\tassetsByFile[asset].chunks.push(id);\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t\tif(chunk.name) {\r\n\t\t\t\t\t\t\tassetsByFile[asset].chunkNames.push(chunk.name);\r\n\t\t\t\t\t\t\tif(obj.assetsByChunkName[chunk.name])\r\n\t\t\t\t\t\t\t\tobj.assetsByChunkName[chunk.name] = [].concat(obj.assetsByChunkName[chunk.name]).concat([asset]);\r\n\t\t\t\t\t\t\telse\r\n\t\t\t\t\t\t\t\tobj.assetsByChunkName[chunk.name] = asset;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t\tobj.assets.sort(sortByField(sortAssets));\r\n\t\t}\r\n\r\n\t\tif(showEntrypoints) {\r\n\t\t\tobj.entrypoints = {};\r\n\t\t\tObject.keys(compilation.entrypoints).forEach(name => {\r\n\t\t\t\tconst ep = compilation.entrypoints[name];\r\n\t\t\t\tobj.entrypoints[name] = {\r\n\t\t\t\t\tchunks: ep.chunks.map(c => c.id),\r\n\t\t\t\t\tassets: ep.chunks.reduce((array, c) => array.concat(c.files || []), [])\r\n\t\t\t\t};\r\n\t\t\t\tif(showPerformance) {\r\n\t\t\t\t\tobj.entrypoints[name].isOverSizeLimit = ep.isOverSizeLimit;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tfunction fnModule(module) {\r\n\t\t\tconst obj = {\r\n\t\t\t\tid: module.id,\r\n\t\t\t\tidentifier: module.identifier(),\r\n\t\t\t\tname: module.readableIdentifier(requestShortener),\r\n\t\t\t\tindex: module.index,\r\n\t\t\t\tindex2: module.index2,\r\n\t\t\t\tsize: module.size(),\r\n\t\t\t\tcacheable: !!module.cacheable,\r\n\t\t\t\tbuilt: !!module.built,\r\n\t\t\t\toptional: !!module.optional,\r\n\t\t\t\tprefetched: !!module.prefetched,\r\n\t\t\t\tchunks: module.chunks.map(chunk => chunk.id),\r\n\t\t\t\tassets: Object.keys(module.assets || {}),\r\n\t\t\t\tissuer: module.issuer && module.issuer.identifier(),\r\n\t\t\t\tissuerId: module.issuer && module.issuer.id,\r\n\t\t\t\tissuerName: module.issuer && module.issuer.readableIdentifier(requestShortener),\r\n\t\t\t\tprofile: module.profile,\r\n\t\t\t\tfailed: !!module.error,\r\n\t\t\t\terrors: module.errors && module.dependenciesErrors && (module.errors.length + module.dependenciesErrors.length),\r\n\t\t\t\twarnings: module.errors && module.dependenciesErrors && (module.warnings.length + module.dependenciesWarnings.length)\r\n\t\t\t};\r\n\t\t\tif(showReasons) {\r\n\t\t\t\tobj.reasons = module.reasons.filter(reason => reason.dependency && reason.module).map(reason => {\r\n\t\t\t\t\tconst obj = {\r\n\t\t\t\t\t\tmoduleId: reason.module.id,\r\n\t\t\t\t\t\tmoduleIdentifier: reason.module.identifier(),\r\n\t\t\t\t\t\tmodule: reason.module.readableIdentifier(requestShortener),\r\n\t\t\t\t\t\tmoduleName: reason.module.readableIdentifier(requestShortener),\r\n\t\t\t\t\t\ttype: reason.dependency.type,\r\n\t\t\t\t\t\tuserRequest: reason.dependency.userRequest\r\n\t\t\t\t\t};\r\n\t\t\t\t\tconst locInfo = formatLocation(reason.dependency.loc);\r\n\t\t\t\t\tif(locInfo) obj.loc = locInfo;\r\n\t\t\t\t\treturn obj;\r\n\t\t\t\t}).sort((a, b) => a.moduleId - b.moduleId);\r\n\t\t\t}\r\n\t\t\tif(showUsedExports) {\r\n\t\t\t\tobj.usedExports = module.used ? module.usedExports : false;\r\n\t\t\t}\r\n\t\t\tif(showProvidedExports) {\r\n\t\t\t\tobj.providedExports = Array.isArray(module.providedExports) ? module.providedExports : null;\r\n\t\t\t}\r\n\t\t\tif(showDepth) {\r\n\t\t\t\tobj.depth = module.depth;\r\n\t\t\t}\r\n\t\t\tif(showSource && module._source) {\r\n\t\t\t\tobj.source = module._source.source();\r\n\t\t\t}\r\n\t\t\treturn obj;\r\n\t\t}\r\n\t\tif(showChunks) {\r\n\t\t\tobj.chunks = compilation.chunks.map(chunk => {\r\n\t\t\t\tconst obj = {\r\n\t\t\t\t\tid: chunk.id,\r\n\t\t\t\t\trendered: chunk.rendered,\r\n\t\t\t\t\tinitial: chunk.isInitial(),\r\n\t\t\t\t\tentry: chunk.hasRuntime(),\r\n\t\t\t\t\trecorded: chunk.recorded,\r\n\t\t\t\t\textraAsync: !!chunk.extraAsync,\r\n\t\t\t\t\tsize: chunk.modules.reduce((size, module) => size + module.size(), 0),\r\n\t\t\t\t\tnames: chunk.name ? [chunk.name] : [],\r\n\t\t\t\t\tfiles: chunk.files.slice(),\r\n\t\t\t\t\thash: chunk.renderedHash,\r\n\t\t\t\t\tparents: chunk.parents.map(c => c.id)\r\n\t\t\t\t};\r\n\t\t\t\tif(showChunkModules) {\r\n\t\t\t\t\tobj.modules = chunk.modules\r\n\t\t\t\t\t\t.slice()\r\n\t\t\t\t\t\t.sort(sortByField(\"depth\"))\r\n\t\t\t\t\t\t.filter(createModuleFilter())\r\n\t\t\t\t\t\t.map(fnModule);\r\n\t\t\t\t\tobj.filteredModules = chunk.modules.length - obj.modules.length;\r\n\t\t\t\t\tobj.modules.sort(sortByField(sortModules));\r\n\t\t\t\t}\r\n\t\t\t\tif(showChunkOrigins) {\r\n\t\t\t\t\tobj.origins = chunk.origins.map(origin => ({\r\n\t\t\t\t\t\tmoduleId: origin.module ? origin.module.id : undefined,\r\n\t\t\t\t\t\tmodule: origin.module ? origin.module.identifier() : \"\",\r\n\t\t\t\t\t\tmoduleIdentifier: origin.module ? origin.module.identifier() : \"\",\r\n\t\t\t\t\t\tmoduleName: origin.module ? origin.module.readableIdentifier(requestShortener) : \"\",\r\n\t\t\t\t\t\tloc: formatLocation(origin.loc),\r\n\t\t\t\t\t\tname: origin.name,\r\n\t\t\t\t\t\treasons: origin.reasons || []\r\n\t\t\t\t\t}));\r\n\t\t\t\t}\r\n\t\t\t\treturn obj;\r\n\t\t\t});\r\n\t\t\tobj.chunks.sort(sortByField(sortChunks));\r\n\t\t}\r\n\t\tif(showModules) {\r\n\t\t\tobj.modules = compilation.modules\r\n\t\t\t\t.slice()\r\n\t\t\t\t.sort(sortByField(\"depth\"))\r\n\t\t\t\t.filter(createModuleFilter())\r\n\t\t\t\t.map(fnModule);\r\n\t\t\tobj.filteredModules = compilation.modules.length - obj.modules.length;\r\n\t\t\tobj.modules.sort(sortByField(sortModules));\r\n\t\t}\r\n\t\tif(showChildren) {\r\n\t\t\tobj.children = compilation.children.map((child, idx) => {\r\n\t\t\t\tconst childOptions = Stats.getChildOptions(options, idx);\r\n\t\t\t\tconst obj = new Stats(child).toJson(childOptions, forToString);\r\n\t\t\t\tdelete obj.hash;\r\n\t\t\t\tdelete obj.version;\r\n\t\t\t\tobj.name = child.name;\r\n\t\t\t\treturn obj;\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\treturn obj;\r\n\t}\r\n\r\n\ttoString(options) {\r\n\t\tif(typeof options === \"boolean\" || typeof options === \"string\") {\r\n\t\t\toptions = Stats.presetToOptions(options);\r\n\t\t} else if(!options) {\r\n\t\t\toptions = {};\r\n\t\t}\r\n\r\n\t\tconst useColors = optionOrFallback(options.colors, false);\r\n\r\n\t\tconst obj = this.toJson(options, true);\r\n\r\n\t\treturn Stats.jsonToString(obj, useColors);\r\n\t}\r\n\r\n\tstatic jsonToString(obj, useColors) {\r\n\t\tconst buf = [];\r\n\r\n\t\tconst defaultColors = {\r\n\t\t\tbold: \"\\u001b[1m\",\r\n\t\t\tyellow: \"\\u001b[1m\\u001b[33m\",\r\n\t\t\tred: \"\\u001b[1m\\u001b[31m\",\r\n\t\t\tgreen: \"\\u001b[1m\\u001b[32m\",\r\n\t\t\tcyan: \"\\u001b[1m\\u001b[36m\",\r\n\t\t\tmagenta: \"\\u001b[1m\\u001b[35m\"\r\n\t\t};\r\n\r\n\t\tconst colors = Object.keys(defaultColors).reduce((obj, color) => {\r\n\t\t\tobj[color] = str => {\r\n\t\t\t\tif(useColors) {\r\n\t\t\t\t\tbuf.push(\r\n\t\t\t\t\t\t(useColors === true || useColors[color] === undefined) ?\r\n\t\t\t\t\t\tdefaultColors[color] : useColors[color]\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\t\t\t\tbuf.push(str);\r\n\t\t\t\tif(useColors) {\r\n\t\t\t\t\tbuf.push(\"\\u001b[39m\\u001b[22m\");\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t\treturn obj;\r\n\t\t}, {\r\n\t\t\tnormal: (str) => buf.push(str)\r\n\t\t});\r\n\r\n\t\tconst coloredTime = (time) => {\r\n\t\t\tlet times = [800, 400, 200, 100];\r\n\t\t\tif(obj.time) {\r\n\t\t\t\ttimes = [obj.time / 2, obj.time / 4, obj.time / 8, obj.time / 16];\r\n\t\t\t}\r\n\t\t\tif(time < times[3])\r\n\t\t\t\tcolors.normal(`${time}ms`);\r\n\t\t\telse if(time < times[2])\r\n\t\t\t\tcolors.bold(`${time}ms`);\r\n\t\t\telse if(time < times[1])\r\n\t\t\t\tcolors.green(`${time}ms`);\r\n\t\t\telse if(time < times[0])\r\n\t\t\t\tcolors.yellow(`${time}ms`);\r\n\t\t\telse\r\n\t\t\t\tcolors.red(`${time}ms`);\r\n\t\t};\r\n\r\n\t\tconst newline = () => buf.push(\"\\n\");\r\n\r\n\t\tconst getText = (arr, row, col) => {\r\n\t\t\treturn arr[row][col].value;\r\n\t\t};\r\n\r\n\t\tconst table = (array, align, splitter) => {\r\n\t\t\tconst rows = array.length;\r\n\t\t\tconst cols = array[0].length;\r\n\t\t\tconst colSizes = new Array(cols);\r\n\t\t\tfor(let col = 0; col < cols; col++)\r\n\t\t\t\tcolSizes[col] = 0;\r\n\t\t\tfor(let row = 0; row < rows; row++) {\r\n\t\t\t\tfor(let col = 0; col < cols; col++) {\r\n\t\t\t\t\tconst value = `${getText(array, row, col)}`;\r\n\t\t\t\t\tif(value.length > colSizes[col]) {\r\n\t\t\t\t\t\tcolSizes[col] = value.length;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tfor(let row = 0; row < rows; row++) {\r\n\t\t\t\tfor(let col = 0; col < cols; col++) {\r\n\t\t\t\t\tconst format = array[row][col].color;\r\n\t\t\t\t\tconst value = `${getText(array, row, col)}`;\r\n\t\t\t\t\tlet l = value.length;\r\n\t\t\t\t\tif(align[col] === \"l\")\r\n\t\t\t\t\t\tformat(value);\r\n\t\t\t\t\tfor(; l < colSizes[col] && col !== cols - 1; l++)\r\n\t\t\t\t\t\tcolors.normal(\" \");\r\n\t\t\t\t\tif(align[col] === \"r\")\r\n\t\t\t\t\t\tformat(value);\r\n\t\t\t\t\tif(col + 1 < cols && colSizes[col] !== 0)\r\n\t\t\t\t\t\tcolors.normal(splitter || \"  \");\r\n\t\t\t\t}\r\n\t\t\t\tnewline();\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tconst getAssetColor = (asset, defaultColor) => {\r\n\t\t\tif(asset.isOverSizeLimit) {\r\n\t\t\t\treturn colors.yellow;\r\n\t\t\t}\r\n\r\n\t\t\treturn defaultColor;\r\n\t\t};\r\n\r\n\t\tif(obj.hash) {\r\n\t\t\tcolors.normal(\"Hash: \");\r\n\t\t\tcolors.bold(obj.hash);\r\n\t\t\tnewline();\r\n\t\t}\r\n\t\tif(obj.version) {\r\n\t\t\tcolors.normal(\"Version: webpack \");\r\n\t\t\tcolors.bold(obj.version);\r\n\t\t\tnewline();\r\n\t\t}\r\n\t\tif(typeof obj.time === \"number\") {\r\n\t\t\tcolors.normal(\"Time: \");\r\n\t\t\tcolors.bold(obj.time);\r\n\t\t\tcolors.normal(\"ms\");\r\n\t\t\tnewline();\r\n\t\t}\r\n\t\tif(obj.publicPath) {\r\n\t\t\tcolors.normal(\"PublicPath: \");\r\n\t\t\tcolors.bold(obj.publicPath);\r\n\t\t\tnewline();\r\n\t\t}\r\n\r\n\t\tif(obj.assets && obj.assets.length > 0) {\r\n\t\t\tconst t = [\r\n\t\t\t\t[{\r\n\t\t\t\t\tvalue: \"Asset\",\r\n\t\t\t\t\tcolor: colors.bold\r\n\t\t\t\t}, {\r\n\t\t\t\t\tvalue: \"Size\",\r\n\t\t\t\t\tcolor: colors.bold\r\n\t\t\t\t}, {\r\n\t\t\t\t\tvalue: \"Chunks\",\r\n\t\t\t\t\tcolor: colors.bold\r\n\t\t\t\t}, {\r\n\t\t\t\t\tvalue: \"\",\r\n\t\t\t\t\tcolor: colors.bold\r\n\t\t\t\t}, {\r\n\t\t\t\t\tvalue: \"\",\r\n\t\t\t\t\tcolor: colors.bold\r\n\t\t\t\t}, {\r\n\t\t\t\t\tvalue: \"Chunk Names\",\r\n\t\t\t\t\tcolor: colors.bold\r\n\t\t\t\t}]\r\n\t\t\t];\r\n\t\t\tobj.assets.forEach(asset => {\r\n\t\t\t\tt.push([{\r\n\t\t\t\t\tvalue: asset.name,\r\n\t\t\t\t\tcolor: getAssetColor(asset, colors.green)\r\n\t\t\t\t}, {\r\n\t\t\t\t\tvalue: SizeFormatHelpers.formatSize(asset.size),\r\n\t\t\t\t\tcolor: getAssetColor(asset, colors.normal)\r\n\t\t\t\t}, {\r\n\t\t\t\t\tvalue: asset.chunks.join(\", \"),\r\n\t\t\t\t\tcolor: colors.bold\r\n\t\t\t\t}, {\r\n\t\t\t\t\tvalue: asset.emitted ? \"[emitted]\" : \"\",\r\n\t\t\t\t\tcolor: colors.green\r\n\t\t\t\t}, {\r\n\t\t\t\t\tvalue: asset.isOverSizeLimit ? \"[big]\" : \"\",\r\n\t\t\t\t\tcolor: getAssetColor(asset, colors.normal)\r\n\t\t\t\t}, {\r\n\t\t\t\t\tvalue: asset.chunkNames.join(\", \"),\r\n\t\t\t\t\tcolor: colors.normal\r\n\t\t\t\t}]);\r\n\t\t\t});\r\n\t\t\ttable(t, \"rrrlll\");\r\n\t\t}\r\n\t\tif(obj.entrypoints) {\r\n\t\t\tObject.keys(obj.entrypoints).forEach(name => {\r\n\t\t\t\tconst ep = obj.entrypoints[name];\r\n\t\t\t\tcolors.normal(\"Entrypoint \");\r\n\t\t\t\tcolors.bold(name);\r\n\t\t\t\tif(ep.isOverSizeLimit) {\r\n\t\t\t\t\tcolors.normal(\" \");\r\n\t\t\t\t\tcolors.yellow(\"[big]\");\r\n\t\t\t\t}\r\n\t\t\t\tcolors.normal(\" =\");\r\n\t\t\t\tep.assets.forEach(asset => {\r\n\t\t\t\t\tcolors.normal(\" \");\r\n\t\t\t\t\tcolors.green(asset);\r\n\t\t\t\t});\r\n\t\t\t\tnewline();\r\n\t\t\t});\r\n\t\t}\r\n\t\tconst modulesByIdentifier = {};\r\n\t\tif(obj.modules) {\r\n\t\t\tobj.modules.forEach(module => {\r\n\t\t\t\tmodulesByIdentifier[`$${module.identifier}`] = module;\r\n\t\t\t});\r\n\t\t} else if(obj.chunks) {\r\n\t\t\tobj.chunks.forEach(chunk => {\r\n\t\t\t\tif(chunk.modules) {\r\n\t\t\t\t\tchunk.modules.forEach(module => {\r\n\t\t\t\t\t\tmodulesByIdentifier[`$${module.identifier}`] = module;\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tconst processModuleAttributes = (module) => {\r\n\t\t\tcolors.normal(\" \");\r\n\t\t\tcolors.normal(SizeFormatHelpers.formatSize(module.size));\r\n\t\t\tif(module.chunks) {\r\n\t\t\t\tmodule.chunks.forEach(chunk => {\r\n\t\t\t\t\tcolors.normal(\" {\");\r\n\t\t\t\t\tcolors.yellow(chunk);\r\n\t\t\t\t\tcolors.normal(\"}\");\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\tif(typeof module.depth === \"number\") {\r\n\t\t\t\tcolors.normal(` [depth ${module.depth}]`);\r\n\t\t\t}\r\n\t\t\tif(!module.cacheable) {\r\n\t\t\t\tcolors.red(\" [not cacheable]\");\r\n\t\t\t}\r\n\t\t\tif(module.optional) {\r\n\t\t\t\tcolors.yellow(\" [optional]\");\r\n\t\t\t}\r\n\t\t\tif(module.built) {\r\n\t\t\t\tcolors.green(\" [built]\");\r\n\t\t\t}\r\n\t\t\tif(module.prefetched) {\r\n\t\t\t\tcolors.magenta(\" [prefetched]\");\r\n\t\t\t}\r\n\t\t\tif(module.failed)\r\n\t\t\t\tcolors.red(\" [failed]\");\r\n\t\t\tif(module.warnings)\r\n\t\t\t\tcolors.yellow(` [${module.warnings} warning${module.warnings === 1 ? \"\" : \"s\"}]`);\r\n\t\t\tif(module.errors)\r\n\t\t\t\tcolors.red(` [${module.errors} error${module.errors === 1 ? \"\" : \"s\"}]`);\r\n\t\t};\r\n\r\n\t\tconst processModuleContent = (module, prefix) => {\r\n\t\t\tif(Array.isArray(module.providedExports)) {\r\n\t\t\t\tcolors.normal(prefix);\r\n\t\t\t\tcolors.cyan(`[exports: ${module.providedExports.join(\", \")}]`);\r\n\t\t\t\tnewline();\r\n\t\t\t}\r\n\t\t\tif(module.usedExports !== undefined) {\r\n\t\t\t\tif(module.usedExports !== true) {\r\n\t\t\t\t\tcolors.normal(prefix);\r\n\t\t\t\t\tif(module.usedExports === false)\r\n\t\t\t\t\t\tcolors.cyan(\"[no exports used]\");\r\n\t\t\t\t\telse\r\n\t\t\t\t\t\tcolors.cyan(`[only some exports used: ${module.usedExports.join(\", \")}]`);\r\n\t\t\t\t\tnewline();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif(module.reasons) {\r\n\t\t\t\tmodule.reasons.forEach(reason => {\r\n\t\t\t\t\tcolors.normal(prefix);\r\n\t\t\t\t\tcolors.normal(reason.type);\r\n\t\t\t\t\tcolors.normal(\" \");\r\n\t\t\t\t\tcolors.cyan(reason.userRequest);\r\n\t\t\t\t\tcolors.normal(\" [\");\r\n\t\t\t\t\tcolors.normal(reason.moduleId);\r\n\t\t\t\t\tcolors.normal(\"] \");\r\n\t\t\t\t\tcolors.magenta(reason.module);\r\n\t\t\t\t\tif(reason.loc) {\r\n\t\t\t\t\t\tcolors.normal(\" \");\r\n\t\t\t\t\t\tcolors.normal(reason.loc);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tnewline();\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\tif(module.profile) {\r\n\t\t\t\tcolors.normal(prefix);\r\n\t\t\t\tlet sum = 0;\r\n\t\t\t\tconst path = [];\r\n\t\t\t\tlet current = module;\r\n\t\t\t\twhile(current.issuer) {\r\n\t\t\t\t\tpath.unshift(current = current.issuer);\r\n\t\t\t\t}\r\n\t\t\t\tpath.forEach(module => {\r\n\t\t\t\t\tcolors.normal(\"[\");\r\n\t\t\t\t\tcolors.normal(module.id);\r\n\t\t\t\t\tcolors.normal(\"] \");\r\n\t\t\t\t\tif(module.profile) {\r\n\t\t\t\t\t\tconst time = (module.profile.factory || 0) + (module.profile.building || 0);\r\n\t\t\t\t\t\tcoloredTime(time);\r\n\t\t\t\t\t\tsum += time;\r\n\t\t\t\t\t\tcolors.normal(\" \");\r\n\t\t\t\t\t}\r\n\t\t\t\t\tcolors.normal(\"->\");\r\n\t\t\t\t});\r\n\t\t\t\tObject.keys(module.profile).forEach(key => {\r\n\t\t\t\t\tcolors.normal(` ${key}:`);\r\n\t\t\t\t\tconst time = module.profile[key];\r\n\t\t\t\t\tcoloredTime(time);\r\n\t\t\t\t\tsum += time;\r\n\t\t\t\t});\r\n\t\t\t\tcolors.normal(\" = \");\r\n\t\t\t\tcoloredTime(sum);\r\n\t\t\t\tnewline();\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tif(obj.chunks) {\r\n\t\t\tobj.chunks.forEach(chunk => {\r\n\t\t\t\tcolors.normal(\"chunk \");\r\n\t\t\t\tif(chunk.id < 1000) colors.normal(\" \");\r\n\t\t\t\tif(chunk.id < 100) colors.normal(\" \");\r\n\t\t\t\tif(chunk.id < 10) colors.normal(\" \");\r\n\t\t\t\tcolors.normal(\"{\");\r\n\t\t\t\tcolors.yellow(chunk.id);\r\n\t\t\t\tcolors.normal(\"} \");\r\n\t\t\t\tcolors.green(chunk.files.join(\", \"));\r\n\t\t\t\tif(chunk.names && chunk.names.length > 0) {\r\n\t\t\t\t\tcolors.normal(\" (\");\r\n\t\t\t\t\tcolors.normal(chunk.names.join(\", \"));\r\n\t\t\t\t\tcolors.normal(\")\");\r\n\t\t\t\t}\r\n\t\t\t\tcolors.normal(\" \");\r\n\t\t\t\tcolors.normal(SizeFormatHelpers.formatSize(chunk.size));\r\n\t\t\t\tchunk.parents.forEach(id => {\r\n\t\t\t\t\tcolors.normal(\" {\");\r\n\t\t\t\t\tcolors.yellow(id);\r\n\t\t\t\t\tcolors.normal(\"}\");\r\n\t\t\t\t});\r\n\t\t\t\tif(chunk.entry) {\r\n\t\t\t\t\tcolors.yellow(\" [entry]\");\r\n\t\t\t\t} else if(chunk.initial) {\r\n\t\t\t\t\tcolors.yellow(\" [initial]\");\r\n\t\t\t\t}\r\n\t\t\t\tif(chunk.rendered) {\r\n\t\t\t\t\tcolors.green(\" [rendered]\");\r\n\t\t\t\t}\r\n\t\t\t\tif(chunk.recorded) {\r\n\t\t\t\t\tcolors.green(\" [recorded]\");\r\n\t\t\t\t}\r\n\t\t\t\tnewline();\r\n\t\t\t\tif(chunk.origins) {\r\n\t\t\t\t\tchunk.origins.forEach(origin => {\r\n\t\t\t\t\t\tcolors.normal(\"    > \");\r\n\t\t\t\t\t\tif(origin.reasons && origin.reasons.length) {\r\n\t\t\t\t\t\t\tcolors.yellow(origin.reasons.join(\" \"));\r\n\t\t\t\t\t\t\tcolors.normal(\" \");\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif(origin.name) {\r\n\t\t\t\t\t\t\tcolors.normal(origin.name);\r\n\t\t\t\t\t\t\tcolors.normal(\" \");\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif(origin.module) {\r\n\t\t\t\t\t\t\tcolors.normal(\"[\");\r\n\t\t\t\t\t\t\tcolors.normal(origin.moduleId);\r\n\t\t\t\t\t\t\tcolors.normal(\"] \");\r\n\t\t\t\t\t\t\tconst module = modulesByIdentifier[`$${origin.module}`];\r\n\t\t\t\t\t\t\tif(module) {\r\n\t\t\t\t\t\t\t\tcolors.bold(module.name);\r\n\t\t\t\t\t\t\t\tcolors.normal(\" \");\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tif(origin.loc) {\r\n\t\t\t\t\t\t\t\tcolors.normal(origin.loc);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tnewline();\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t\tif(chunk.modules) {\r\n\t\t\t\t\tchunk.modules.forEach(module => {\r\n\t\t\t\t\t\tcolors.normal(\" \");\r\n\t\t\t\t\t\tif(module.id < 1000) colors.normal(\" \");\r\n\t\t\t\t\t\tif(module.id < 100) colors.normal(\" \");\r\n\t\t\t\t\t\tif(module.id < 10) colors.normal(\" \");\r\n\t\t\t\t\t\tcolors.normal(\"[\");\r\n\t\t\t\t\t\tcolors.normal(module.id);\r\n\t\t\t\t\t\tcolors.normal(\"] \");\r\n\t\t\t\t\t\tcolors.bold(module.name);\r\n\t\t\t\t\t\tprocessModuleAttributes(module);\r\n\t\t\t\t\t\tnewline();\r\n\t\t\t\t\t\tprocessModuleContent(module, \"        \");\r\n\t\t\t\t\t});\r\n\t\t\t\t\tif(chunk.filteredModules > 0) {\r\n\t\t\t\t\t\tcolors.normal(`     + ${chunk.filteredModules} hidden modules`);\r\n\t\t\t\t\t\tnewline();\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t\tif(obj.modules) {\r\n\t\t\tobj.modules.forEach(module => {\r\n\t\t\t\tif(module.id < 1000) colors.normal(\" \");\r\n\t\t\t\tif(module.id < 100) colors.normal(\" \");\r\n\t\t\t\tif(module.id < 10) colors.normal(\" \");\r\n\t\t\t\tcolors.normal(\"[\");\r\n\t\t\t\tcolors.normal(module.id);\r\n\t\t\t\tcolors.normal(\"] \");\r\n\t\t\t\tcolors.bold(module.name || module.identifier);\r\n\t\t\t\tprocessModuleAttributes(module);\r\n\t\t\t\tnewline();\r\n\t\t\t\tprocessModuleContent(module, \"       \");\r\n\t\t\t});\r\n\t\t\tif(obj.filteredModules > 0) {\r\n\t\t\t\tcolors.normal(`    + ${obj.filteredModules} hidden modules`);\r\n\t\t\t\tnewline();\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif(obj._showWarnings && obj.warnings) {\r\n\t\t\tobj.warnings.forEach(warning => {\r\n\t\t\t\tnewline();\r\n\t\t\t\tcolors.yellow(`WARNING in ${warning}`);\r\n\t\t\t\tnewline();\r\n\t\t\t});\r\n\t\t}\r\n\t\tif(obj._showErrors && obj.errors) {\r\n\t\t\tobj.errors.forEach(error => {\r\n\t\t\t\tnewline();\r\n\t\t\t\tcolors.red(`ERROR in ${error}`);\r\n\t\t\t\tnewline();\r\n\t\t\t});\r\n\t\t}\r\n\t\tif(obj.children) {\r\n\t\t\tobj.children.forEach(child => {\r\n\t\t\t\tconst childString = Stats.jsonToString(child, useColors);\r\n\t\t\t\tif(childString) {\r\n\t\t\t\t\tif(child.name) {\r\n\t\t\t\t\t\tcolors.normal(\"Child \");\r\n\t\t\t\t\t\tcolors.bold(child.name);\r\n\t\t\t\t\t\tcolors.normal(\":\");\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tcolors.normal(\"Child\");\r\n\t\t\t\t\t}\r\n\t\t\t\t\tnewline();\r\n\t\t\t\t\tbuf.push(\"    \");\r\n\t\t\t\t\tbuf.push(childString.replace(/\\n/g, \"\\n    \"));\r\n\t\t\t\t\tnewline();\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t\tif(obj.needAdditionalPass) {\r\n\t\t\tcolors.yellow(\"Compilation needs an additional pass and will compile again.\");\r\n\t\t}\r\n\r\n\t\twhile(buf[buf.length - 1] === \"\\n\") buf.pop();\r\n\t\treturn buf.join(\"\");\r\n\t}\r\n\r\n\tstatic presetToOptions(name) {\r\n\t\t//Accepted values: none, errors-only, minimal, normal, verbose\r\n\t\t//Any other falsy value will behave as 'none', truthy values as 'normal'\r\n\t\tconst pn = (typeof name === \"string\") && name.toLowerCase() || name;\r\n\t\tif(pn === \"none\" || !pn) {\r\n\t\t\treturn {\r\n\t\t\t\thash: false,\r\n\t\t\t\tversion: false,\r\n\t\t\t\ttimings: false,\r\n\t\t\t\tassets: false,\r\n\t\t\t\tentrypoints: false,\r\n\t\t\t\tchunks: false,\r\n\t\t\t\tchunkModules: false,\r\n\t\t\t\tmodules: false,\r\n\t\t\t\treasons: false,\r\n\t\t\t\tdepth: false,\r\n\t\t\t\tusedExports: false,\r\n\t\t\t\tprovidedExports: false,\r\n\t\t\t\tchildren: false,\r\n\t\t\t\tsource: false,\r\n\t\t\t\terrors: false,\r\n\t\t\t\terrorDetails: false,\r\n\t\t\t\twarnings: false,\r\n\t\t\t\tpublicPath: false,\r\n\t\t\t\tperformance: false\r\n\t\t\t};\r\n\t\t} else {\r\n\t\t\treturn {\r\n\t\t\t\thash: pn !== \"errors-only\" && pn !== \"minimal\",\r\n\t\t\t\tversion: pn === \"verbose\",\r\n\t\t\t\ttimings: pn !== \"errors-only\" && pn !== \"minimal\",\r\n\t\t\t\tassets: pn === \"verbose\",\r\n\t\t\t\tentrypoints: pn === \"verbose\",\r\n\t\t\t\tchunks: pn !== \"errors-only\",\r\n\t\t\t\tchunkModules: pn === \"verbose\",\r\n\t\t\t\t//warnings: pn !== \"errors-only\",\r\n\t\t\t\terrorDetails: pn !== \"errors-only\" && pn !== \"minimal\",\r\n\t\t\t\treasons: pn === \"verbose\",\r\n\t\t\t\tdepth: pn === \"verbose\",\r\n\t\t\t\tusedExports: pn === \"verbose\",\r\n\t\t\t\tprovidedExports: pn === \"verbose\",\r\n\t\t\t\tcolors: true,\r\n\t\t\t\tperformance: true\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tstatic getChildOptions(options, idx) {\r\n\t\tlet innerOptions;\r\n\t\tif(Array.isArray(options.children)) {\r\n\t\t\tif(idx < options.children.length)\r\n\t\t\t\tinnerOptions = options.children[idx];\r\n\t\t} else if(typeof options.children === \"object\" && options.children) {\r\n\t\t\tinnerOptions = options.children;\r\n\t\t}\r\n\t\tif(typeof innerOptions === \"boolean\" || typeof innerOptions === \"string\")\r\n\t\t\tinnerOptions = Stats.presetToOptions(innerOptions);\r\n\t\tif(!innerOptions)\r\n\t\t\treturn options;\r\n\t\tconst childOptions = Object.assign({}, options);\r\n\t\tdelete childOptions.children; // do not inherit children\r\n\t\treturn Object.assign(childOptions, innerOptions);\r\n\t}\r\n}\r\n\r\nmodule.exports = Stats;\r\n","/home/travis/build/npmtest/node-npmtest-webpack/node_modules/webpack/lib/RequestShortener.js":"/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\n\"use strict\";\r\n\r\nconst path = require(\"path\");\r\n\r\nclass RequestShortener {\r\n\tconstructor(directory) {\r\n\t\tdirectory = directory.replace(/\\\\/g, \"/\");\r\n\t\tif(/[\\/\\\\]$/.test(directory)) directory = directory.substr(0, directory.length - 1);\r\n\r\n\t\tif(directory) {\r\n\t\t\tconst currentDirectoryRegExpString = directory.replace(/[-[\\]{}()*+?.,\\\\^$|#\\s]/g, \"\\\\$&\");\r\n\t\t\tthis.currentDirectoryRegExp = new RegExp(\"^\" + currentDirectoryRegExpString + \"|(!)\" + currentDirectoryRegExpString, \"g\");\r\n\t\t}\r\n\r\n\t\tconst dirname = path.dirname(directory);\r\n\t\tconst endsWithSeperator = /[\\/\\\\]$/.test(dirname);\r\n\t\tconst parentDirectory = endsWithSeperator ? dirname.substr(0, dirname.length - 1) : dirname;\r\n\t\tif(parentDirectory && parentDirectory !== directory) {\r\n\t\t\tconst parentDirectoryRegExpString = parentDirectory.replace(/[-[\\]{}()*+?.,\\\\^$|#\\s]/g, \"\\\\$&\");\r\n\t\t\tthis.parentDirectoryRegExp = new RegExp(\"^\" + parentDirectoryRegExpString + \"|(!)\" + parentDirectoryRegExpString, \"g\");\r\n\t\t}\r\n\r\n\t\tif(__dirname.length >= 2) {\r\n\t\t\tconst buildins = path.join(__dirname, \"..\").replace(/\\\\/g, \"/\");\r\n\t\t\tconst buildinsAsModule = this.currentDirectoryRegExp && this.currentDirectoryRegExp.test(buildins);\r\n\t\t\tthis.buildinsAsModule = buildinsAsModule;\r\n\t\t\tconst buildinsRegExpString = buildins.replace(/[-[\\]{}()*+?.,\\\\^$|#\\s]/g, \"\\\\$&\");\r\n\t\t\tthis.buildinsRegExp = new RegExp(\"^\" + buildinsRegExpString + \"|(!)\" + buildinsRegExpString, \"g\");\r\n\t\t}\r\n\r\n\t\tthis.nodeModulesRegExp = /\\/node_modules\\//g;\r\n\t\tthis.indexJsRegExp = /\\/index.js(!|\\?|\\(query\\))/g;\r\n\t}\r\n\r\n\tshorten(request) {\r\n\t\tif(!request) return request;\r\n\t\trequest = request.replace(/\\\\/g, \"/\");\r\n\t\tif(this.buildinsAsModule && this.buildinsRegExp)\r\n\t\t\trequest = request.replace(this.buildinsRegExp, \"!(webpack)\");\r\n\t\tif(this.currentDirectoryRegExp)\r\n\t\t\trequest = request.replace(this.currentDirectoryRegExp, \"!.\");\r\n\t\tif(this.parentDirectoryRegExp)\r\n\t\t\trequest = request.replace(this.parentDirectoryRegExp, \"!..\");\r\n\t\tif(!this.buildinsAsModule && this.buildinsRegExp)\r\n\t\t\trequest = request.replace(this.buildinsRegExp, \"!(webpack)\");\r\n\t\trequest = request.replace(this.nodeModulesRegExp, \"/~/\");\r\n\t\trequest = request.replace(this.indexJsRegExp, \"$1\");\r\n\t\treturn request.replace(/^!|!$/, \"\");\r\n\t}\r\n}\r\n\r\nmodule.exports = RequestShortener;\r\n","/home/travis/build/npmtest/node-npmtest-webpack/node_modules/webpack/lib/SizeFormatHelpers.js":"/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Sean Larkin @thelarkinn\r\n*/\r\n\"use strict\";\r\n\r\nconst SizeFormatHelpers = exports;\r\n\r\nSizeFormatHelpers.formatSize = size => {\r\n\tif(size <= 0) {\r\n\t\treturn \"0 bytes\";\r\n\t}\r\n\r\n\tconst abbreviations = [\"bytes\", \"kB\", \"MB\", \"GB\"];\r\n\tconst index = Math.floor(Math.log(size) / Math.log(1000));\r\n\r\n\treturn `${+(size / Math.pow(1000, index)).toPrecision(3)} ${abbreviations[index]}`;\r\n};\r\n","/home/travis/build/npmtest/node-npmtest-webpack/node_modules/webpack/lib/MainTemplate.js":"/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\n\"use strict\";\r\n\r\nconst ConcatSource = require(\"webpack-sources\").ConcatSource;\r\nconst OriginalSource = require(\"webpack-sources\").OriginalSource;\r\nconst PrefixSource = require(\"webpack-sources\").PrefixSource;\r\nconst Template = require(\"./Template\");\r\n\r\n// require function shortcuts:\r\n// __webpack_require__.s = the module id of the entry point\r\n// __webpack_require__.c = the module cache\r\n// __webpack_require__.m = the module functions\r\n// __webpack_require__.p = the bundle public path\r\n// __webpack_require__.i = the identity function used for harmony imports\r\n// __webpack_require__.e = the chunk ensure function\r\n// __webpack_require__.d = the exported propery define getter function\r\n// __webpack_require__.o = Object.prototype.hasOwnProperty.call\r\n// __webpack_require__.n = compatibility get default export\r\n// __webpack_require__.h = the webpack hash\r\n// __webpack_require__.oe = the uncatched error handler for the webpack runtime\r\n// __webpack_require__.nc = the script nonce\r\n\r\nmodule.exports = class MainTemplate extends Template {\r\n\tconstructor(outputOptions) {\r\n\t\tsuper(outputOptions);\r\n\t\tthis.plugin(\"startup\", (source, chunk, hash) => {\r\n\t\t\tconst buf = [];\r\n\t\t\tif(chunk.entryModule) {\r\n\t\t\t\tbuf.push(\"// Load entry module and return exports\");\r\n\t\t\t\tbuf.push(`return ${this.renderRequireFunctionForModule(hash, chunk, JSON.stringify(chunk.entryModule.id))}(${this.requireFn}.s = ${JSON.stringify(chunk.entryModule.id)});`);\r\n\t\t\t}\r\n\t\t\treturn this.asString(buf);\r\n\t\t});\r\n\t\tthis.plugin(\"render\", (bootstrapSource, chunk, hash, moduleTemplate, dependencyTemplates) => {\r\n\t\t\tconst source = new ConcatSource();\r\n\t\t\tsource.add(\"/******/ (function(modules) { // webpackBootstrap\\n\");\r\n\t\t\tsource.add(new PrefixSource(\"/******/\", bootstrapSource));\r\n\t\t\tsource.add(\"/******/ })\\n\");\r\n\t\t\tsource.add(\"/************************************************************************/\\n\");\r\n\t\t\tsource.add(\"/******/ (\");\r\n\t\t\tconst modules = this.renderChunkModules(chunk, moduleTemplate, dependencyTemplates, \"/******/ \");\r\n\t\t\tsource.add(this.applyPluginsWaterfall(\"modules\", modules, chunk, hash, moduleTemplate, dependencyTemplates));\r\n\t\t\tsource.add(\")\");\r\n\t\t\treturn source;\r\n\t\t});\r\n\t\tthis.plugin(\"local-vars\", (source, chunk, hash) => {\r\n\t\t\treturn this.asString([\r\n\t\t\t\tsource,\r\n\t\t\t\t\"// The module cache\",\r\n\t\t\t\t\"var installedModules = {};\"\r\n\t\t\t]);\r\n\t\t});\r\n\t\tthis.plugin(\"require\", (source, chunk, hash) => {\r\n\t\t\treturn this.asString([\r\n\t\t\t\tsource,\r\n\t\t\t\t\"// Check if module is in cache\",\r\n\t\t\t\t\"if(installedModules[moduleId]) {\",\r\n\t\t\t\tthis.indent(\"return installedModules[moduleId].exports;\"),\r\n\t\t\t\t\"}\",\r\n\t\t\t\t\"// Create a new module (and put it into the cache)\",\r\n\t\t\t\t\"var module = installedModules[moduleId] = {\",\r\n\t\t\t\tthis.indent(this.applyPluginsWaterfall(\"module-obj\", \"\", chunk, hash, \"moduleId\")),\r\n\t\t\t\t\"};\",\r\n\t\t\t\t\"\",\r\n\t\t\t\tthis.asString(outputOptions.strictModuleExceptionHandling ? [\r\n\t\t\t\t\t\"// Execute the module function\",\r\n\t\t\t\t\t\"var threw = true;\",\r\n\t\t\t\t\t\"try {\",\r\n\t\t\t\t\tthis.indent([\r\n\t\t\t\t\t\t`modules[moduleId].call(module.exports, module, module.exports, ${this.renderRequireFunctionForModule(hash, chunk, \"moduleId\")});`,\r\n\t\t\t\t\t\t\"threw = false;\"\r\n\t\t\t\t\t]),\r\n\t\t\t\t\t\"} finally {\",\r\n\t\t\t\t\tthis.indent([\r\n\t\t\t\t\t\t\"if(threw) delete installedModules[moduleId];\"\r\n\t\t\t\t\t]),\r\n\t\t\t\t\t\"}\"\r\n\t\t\t\t] : [\r\n\t\t\t\t\t\"// Execute the module function\",\r\n\t\t\t\t\t`modules[moduleId].call(module.exports, module, module.exports, ${this.renderRequireFunctionForModule(hash, chunk, \"moduleId\")});`,\r\n\t\t\t\t]),\r\n\t\t\t\t\"\",\r\n\t\t\t\t\"// Flag the module as loaded\",\r\n\t\t\t\t\"module.l = true;\",\r\n\t\t\t\t\"\",\r\n\t\t\t\t\"// Return the exports of the module\",\r\n\t\t\t\t\"return module.exports;\"\r\n\t\t\t]);\r\n\t\t});\r\n\t\tthis.plugin(\"module-obj\", (source, chunk, hash, varModuleId) => {\r\n\t\t\treturn this.asString([\r\n\t\t\t\t\"i: moduleId,\",\r\n\t\t\t\t\"l: false,\",\r\n\t\t\t\t\"exports: {}\"\r\n\t\t\t]);\r\n\t\t});\r\n\t\tthis.plugin(\"require-extensions\", (source, chunk, hash) => {\r\n\t\t\tconst buf = [];\r\n\t\t\tif(chunk.chunks.length > 0) {\r\n\t\t\t\tbuf.push(\"// This file contains only the entry chunk.\");\r\n\t\t\t\tbuf.push(\"// The chunk loading function for additional chunks\");\r\n\t\t\t\tbuf.push(`${this.requireFn}.e = function requireEnsure(chunkId) {`);\r\n\t\t\t\tbuf.push(this.indent(this.applyPluginsWaterfall(\"require-ensure\", \"throw new Error('Not chunk loading available');\", chunk, hash, \"chunkId\")));\r\n\t\t\t\tbuf.push(\"};\");\r\n\t\t\t}\r\n\t\t\tbuf.push(\"\");\r\n\t\t\tbuf.push(\"// expose the modules object (__webpack_modules__)\");\r\n\t\t\tbuf.push(`${this.requireFn}.m = modules;`);\r\n\r\n\t\t\tbuf.push(\"\");\r\n\t\t\tbuf.push(\"// expose the module cache\");\r\n\t\t\tbuf.push(`${this.requireFn}.c = installedModules;`);\r\n\r\n\t\t\tbuf.push(\"\");\r\n\t\t\tbuf.push(\"// identity function for calling harmony imports with the correct context\");\r\n\t\t\tbuf.push(`${this.requireFn}.i = function(value) { return value; };`);\r\n\r\n\t\t\tbuf.push(\"\");\r\n\t\t\tbuf.push(\"// define getter function for harmony exports\");\r\n\t\t\tbuf.push(`${this.requireFn}.d = function(exports, name, getter) {`);\r\n\t\t\tbuf.push(this.indent([\r\n\t\t\t\t`if(!${this.requireFn}.o(exports, name)) {`,\r\n\t\t\t\tthis.indent([\r\n\t\t\t\t\t\"Object.defineProperty(exports, name, {\",\r\n\t\t\t\t\tthis.indent([\r\n\t\t\t\t\t\t\"configurable: false,\",\r\n\t\t\t\t\t\t\"enumerable: true,\",\r\n\t\t\t\t\t\t\"get: getter\"\r\n\t\t\t\t\t]),\r\n\t\t\t\t\t\"});\"\r\n\t\t\t\t]),\r\n\t\t\t\t\"}\"\r\n\t\t\t]));\r\n\t\t\tbuf.push(\"};\");\r\n\r\n\t\t\tbuf.push(\"\");\r\n\t\t\tbuf.push(\"// getDefaultExport function for compatibility with non-harmony modules\");\r\n\t\t\tbuf.push(this.requireFn + \".n = function(module) {\");\r\n\t\t\tbuf.push(this.indent([\r\n\t\t\t\t\"var getter = module && module.__esModule ?\",\r\n\t\t\t\tthis.indent([\r\n\t\t\t\t\t\"function getDefault() { return module['default']; } :\",\r\n\t\t\t\t\t\"function getModuleExports() { return module; };\"\r\n\t\t\t\t]),\r\n\t\t\t\t`${this.requireFn}.d(getter, 'a', getter);`,\r\n\t\t\t\t\"return getter;\"\r\n\t\t\t]));\r\n\t\t\tbuf.push(\"};\");\r\n\r\n\t\t\tbuf.push(\"\");\r\n\t\t\tbuf.push(\"// Object.prototype.hasOwnProperty.call\");\r\n\t\t\tbuf.push(`${this.requireFn}.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };`);\r\n\r\n\t\t\tconst publicPath = this.getPublicPath({\r\n\t\t\t\thash: hash\r\n\t\t\t});\r\n\t\t\tbuf.push(\"\");\r\n\t\t\tbuf.push(\"// __webpack_public_path__\");\r\n\t\t\tbuf.push(`${this.requireFn}.p = ${JSON.stringify(publicPath)};`);\r\n\t\t\treturn this.asString(buf);\r\n\t\t});\r\n\r\n\t\tthis.requireFn = \"__webpack_require__\";\r\n\t}\r\n\r\n\trender(hash, chunk, moduleTemplate, dependencyTemplates) {\r\n\t\tconst buf = [];\r\n\t\tbuf.push(this.applyPluginsWaterfall(\"bootstrap\", \"\", chunk, hash, moduleTemplate, dependencyTemplates));\r\n\t\tbuf.push(this.applyPluginsWaterfall(\"local-vars\", \"\", chunk, hash));\r\n\t\tbuf.push(\"\");\r\n\t\tbuf.push(\"// The require function\");\r\n\t\tbuf.push(`function ${this.requireFn}(moduleId) {`);\r\n\t\tbuf.push(this.indent(this.applyPluginsWaterfall(\"require\", \"\", chunk, hash)));\r\n\t\tbuf.push(\"}\");\r\n\t\tbuf.push(\"\");\r\n\t\tbuf.push(this.asString(this.applyPluginsWaterfall(\"require-extensions\", \"\", chunk, hash)));\r\n\t\tbuf.push(\"\");\r\n\t\tbuf.push(this.asString(this.applyPluginsWaterfall(\"startup\", \"\", chunk, hash)));\r\n\t\tlet source = this.applyPluginsWaterfall(\"render\", new OriginalSource(this.prefix(buf, \" \\t\") + \"\\n\", `webpack/bootstrap ${hash}`), chunk, hash, moduleTemplate, dependencyTemplates);\r\n\t\tif(chunk.hasEntryModule()) {\r\n\t\t\tsource = this.applyPluginsWaterfall(\"render-with-entry\", source, chunk, hash);\r\n\t\t}\r\n\t\tif(!source) throw new Error(\"Compiler error: MainTemplate plugin 'render' should return something\");\r\n\t\tchunk.rendered = true;\r\n\t\treturn new ConcatSource(source, \";\");\r\n\t}\r\n\r\n\trenderRequireFunctionForModule(hash, chunk, varModuleId) {\r\n\t\treturn this.applyPluginsWaterfall(\"module-require\", this.requireFn, chunk, hash, varModuleId);\r\n\t}\r\n\r\n\trenderAddModule(hash, chunk, varModuleId, varModule) {\r\n\t\treturn this.applyPluginsWaterfall(\"add-module\", `modules[${varModuleId}] = ${varModule};`, chunk, hash, varModuleId, varModule);\r\n\t}\r\n\r\n\trenderCurrentHashCode(hash, length) {\r\n\t\tlength = length || Infinity;\r\n\t\treturn this.applyPluginsWaterfall(\"current-hash\", JSON.stringify(hash.substr(0, length)), length);\r\n\t}\r\n\r\n\tentryPointInChildren(chunk) {\r\n\t\tconst checkChildren = (chunk, alreadyCheckedChunks) => {\r\n\t\t\treturn chunk.chunks.some((child) => {\r\n\t\t\t\tif(alreadyCheckedChunks.indexOf(child) >= 0) return;\r\n\t\t\t\talreadyCheckedChunks.push(child);\r\n\t\t\t\treturn child.hasEntryModule() || checkChildren(child, alreadyCheckedChunks);\r\n\t\t\t});\r\n\t\t};\r\n\t\treturn checkChildren(chunk, []);\r\n\t}\r\n\r\n\tgetPublicPath(options) {\r\n\t\treturn this.applyPluginsWaterfall(\"asset-path\", this.outputOptions.publicPath || \"\", options);\r\n\t}\r\n\r\n\tupdateHash(hash) {\r\n\t\thash.update(\"maintemplate\");\r\n\t\thash.update(\"3\");\r\n\t\thash.update(this.outputOptions.publicPath + \"\");\r\n\t\tthis.applyPlugins(\"hash\", hash);\r\n\t}\r\n\r\n\tupdateHashForChunk(hash, chunk) {\r\n\t\tthis.updateHash(hash);\r\n\t\tthis.applyPlugins(\"hash-for-chunk\", hash, chunk);\r\n\t}\r\n\r\n\tuseChunkHash(chunk) {\r\n\t\tconst paths = this.applyPluginsWaterfall(\"global-hash-paths\", []);\r\n\t\treturn !this.applyPluginsBailResult(\"global-hash\", chunk, paths);\r\n\t}\r\n};\r\n","/home/travis/build/npmtest/node-npmtest-webpack/node_modules/webpack/lib/ChunkTemplate.js":"/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\n\"use strict\";\r\n\r\nconst ConcatSource = require(\"webpack-sources\").ConcatSource;\r\nconst Template = require(\"./Template\");\r\n\r\nmodule.exports = class ChunkTemplate extends Template {\r\n\tconstructor(outputOptions) {\r\n\t\tsuper(outputOptions);\r\n\t}\r\n\r\n\trender(chunk, moduleTemplate, dependencyTemplates) {\r\n\t\tconst moduleSources = this.renderChunkModules(chunk, moduleTemplate, dependencyTemplates);\r\n\t\tconst core = this.applyPluginsWaterfall(\"modules\", moduleSources, chunk, moduleTemplate, dependencyTemplates);\r\n\t\tlet source = this.applyPluginsWaterfall(\"render\", core, chunk, moduleTemplate, dependencyTemplates);\r\n\t\tif(chunk.hasEntryModule()) {\r\n\t\t\tsource = this.applyPluginsWaterfall(\"render-with-entry\", source, chunk);\r\n\t\t}\r\n\t\tchunk.rendered = true;\r\n\t\treturn new ConcatSource(source, \";\");\r\n\t}\r\n\r\n\tupdateHash(hash) {\r\n\t\thash.update(\"ChunkTemplate\");\r\n\t\thash.update(\"2\");\r\n\t\tthis.applyPlugins(\"hash\", hash);\r\n\t}\r\n\r\n\tupdateHashForChunk(hash, chunk) {\r\n\t\tthis.updateHash(hash);\r\n\t\tthis.applyPlugins(\"hash-for-chunk\", hash, chunk);\r\n\t}\r\n};\r\n","/home/travis/build/npmtest/node-npmtest-webpack/node_modules/webpack/lib/HotUpdateChunkTemplate.js":"/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\n\"use strict\";\r\n\r\nconst Template = require(\"./Template\");\r\n\r\nmodule.exports = class HotUpdateChunkTemplate extends Template {\r\n\tconstructor(outputOptions) {\r\n\t\tsuper(outputOptions);\r\n\t}\r\n\r\n\trender(id, modules, removedModules, hash, moduleTemplate, dependencyTemplates) {\r\n\t\tconst modulesSource = this.renderChunkModules({\r\n\t\t\tid: id,\r\n\t\t\tmodules: modules,\r\n\t\t\tremovedModules: removedModules\r\n\t\t}, moduleTemplate, dependencyTemplates);\r\n\t\tconst core = this.applyPluginsWaterfall(\"modules\", modulesSource, modules, removedModules, moduleTemplate, dependencyTemplates);\r\n\t\tconst source = this.applyPluginsWaterfall(\"render\", core, modules, removedModules, hash, id, moduleTemplate, dependencyTemplates);\r\n\t\treturn source;\r\n\t}\r\n\r\n\tupdateHash(hash) {\r\n\t\thash.update(\"HotUpdateChunkTemplate\");\r\n\t\thash.update(\"1\");\r\n\t\tthis.applyPlugins(\"hash\", hash);\r\n\t}\r\n};\r\n","/home/travis/build/npmtest/node-npmtest-webpack/node_modules/webpack/lib/ModuleTemplate.js":"/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\n\"use strict\";\r\n\r\nconst Template = require(\"./Template\");\r\n\r\nmodule.exports = class ModuleTemplate extends Template {\r\n\tconstructor(outputOptions) {\r\n\t\tsuper(outputOptions);\r\n\t}\r\n\trender(module, dependencyTemplates, chunk) {\r\n\t\tconst moduleSource = module.source(dependencyTemplates, this.outputOptions, this.requestShortener);\r\n\t\tconst moduleSourcePostModule = this.applyPluginsWaterfall(\"module\", moduleSource, module, chunk, dependencyTemplates);\r\n\t\tconst moduleSourcePostRender = this.applyPluginsWaterfall(\"render\", moduleSourcePostModule, module, chunk, dependencyTemplates);\r\n\t\treturn this.applyPluginsWaterfall(\"package\", moduleSourcePostRender, module, chunk, dependencyTemplates);\r\n\t}\r\n\tupdateHash(hash) {\r\n\t\thash.update(\"1\");\r\n\t\tthis.applyPlugins(\"hash\", hash);\r\n\t}\r\n};\r\n","/home/travis/build/npmtest/node-npmtest-webpack/node_modules/webpack/lib/Dependency.js":"/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\n\"use strict\";\r\nconst compareLocations = require(\"./compareLocations\");\r\n\r\nclass Dependency {\r\n\tconstructor() {\r\n\t\tthis.module = null;\r\n\t}\r\n\r\n\tisEqualResource() {\r\n\t\treturn false;\r\n\t}\r\n\r\n\t// Returns the referenced module and export\r\n\tgetReference() {\r\n\t\tif(!this.module) return null;\r\n\t\treturn {\r\n\t\t\tmodule: this.module,\r\n\t\t\timportedNames: true, // true: full object, false: only sideeffects/no export, array of strings: the exports with this names\r\n\t\t};\r\n\t}\r\n\r\n\t// Returns the exported names\r\n\tgetExports() {\r\n\t\treturn null;\r\n\t}\r\n\r\n\tgetWarnings() {\r\n\t\treturn null;\r\n\t}\r\n\r\n\tgetErrors() {\r\n\t\treturn null;\r\n\t}\r\n\r\n\tupdateHash(hash) {\r\n\t\thash.update((this.module && this.module.id) + \"\");\r\n\t}\r\n\r\n\tdisconnect() {\r\n\t\tthis.module = null;\r\n\t}\r\n\r\n\t// TODO: remove in webpack 3\r\n\tcompare(a, b) {\r\n\t\treturn compareLocations(a.loc, b.loc);\r\n\t}\r\n}\r\nDependency.compare = (a, b) => compareLocations(a.loc, b.loc);\r\n\r\nmodule.exports = Dependency;\r\n","/home/travis/build/npmtest/node-npmtest-webpack/node_modules/webpack/lib/ChunkRenderError.js":"/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\n\"use strict\";\r\n\r\nconst WebpackError = require(\"./WebpackError\");\r\n\r\nclass ChunkRenderError extends WebpackError {\r\n\tconstructor(chunk, file, error) {\r\n\t\tsuper();\r\n\r\n\t\tthis.name = \"ChunkRenderError\";\r\n\t\tthis.error = error;\r\n\t\tthis.message = error.message;\r\n\t\tthis.details = error.stack;\r\n\t\tthis.file = file;\r\n\t\tthis.chunk = chunk;\r\n\r\n\t\tError.captureStackTrace(this, this.constructor);\r\n\t}\r\n}\r\n\r\nmodule.exports = ChunkRenderError;\r\n","/home/travis/build/npmtest/node-npmtest-webpack/node_modules/webpack/lib/NormalModuleFactory.js":"/*\r\n MIT License http://www.opensource.org/licenses/mit-license.php\r\n Author Tobias Koppers @sokra\r\n */\r\n\"use strict\";\r\n\r\nconst asyncLib = require(\"async\");\r\nconst Tapable = require(\"tapable\");\r\nconst NormalModule = require(\"./NormalModule\");\r\nconst RawModule = require(\"./RawModule\");\r\nconst Parser = require(\"./Parser\");\r\nconst RuleSet = require(\"./RuleSet\");\r\n\r\nfunction loaderToIdent(data) {\r\n\tif(!data.options)\r\n\t\treturn data.loader;\r\n\tif(typeof data.options === \"string\")\r\n\t\treturn data.loader + \"?\" + data.options;\r\n\tif(typeof data.options !== \"object\")\r\n\t\tthrow new Error(\"loader options must be string or object\");\r\n\tif(data.ident)\r\n\t\treturn data.loader + \"??\" + data.ident;\r\n\treturn data.loader + \"?\" + JSON.stringify(data.options);\r\n}\r\n\r\nfunction identToLoaderRequest(resultString) {\r\n\tconst idx = resultString.indexOf(\"?\");\r\n\tlet options;\r\n\r\n\tif(idx >= 0) {\r\n\t\toptions = resultString.substr(idx + 1);\r\n\t\tresultString = resultString.substr(0, idx);\r\n\r\n\t\treturn {\r\n\t\t\tloader: resultString,\r\n\t\t\toptions\r\n\t\t};\r\n\t} else {\r\n\t\treturn {\r\n\t\t\tloader: resultString\r\n\t\t};\r\n\t}\r\n}\r\n\r\nclass NormalModuleFactory extends Tapable {\r\n\tconstructor(context, resolvers, options) {\r\n\t\tsuper();\r\n\t\tthis.resolvers = resolvers;\r\n\t\tthis.ruleSet = new RuleSet(options.rules || options.loaders);\r\n\t\tthis.cachePredicate = typeof options.unsafeCache === \"function\" ? options.unsafeCache : Boolean.bind(null, options.unsafeCache);\r\n\t\tthis.context = context || \"\";\r\n\t\tthis.parserCache = {};\r\n\t\tthis.plugin(\"factory\", function() {\r\n\t\t\t/* beautify preserve:start */\r\n            // js-beautify consider to concat \"return\" and \"(\"\r\n            // but it сontradicts eslint rule (keyword-spacing)\r\n\t\t\treturn (result, callback) => {\r\n\t\t\t\t/* beautify preserve:end */\r\n\t\t\t\tlet resolver = this.applyPluginsWaterfall0(\"resolver\", null);\r\n\r\n\t\t\t\t// Ignored\r\n\t\t\t\tif(!resolver) return callback();\r\n\r\n\t\t\t\tresolver(result, (err, data) => {\r\n\t\t\t\t\tif(err) return callback(err);\r\n\r\n\t\t\t\t\t// Ignored\r\n\t\t\t\t\tif(!data) return callback();\r\n\r\n\t\t\t\t\t// direct module\r\n\t\t\t\t\tif(typeof data.source === \"function\")\r\n\t\t\t\t\t\treturn callback(null, data);\r\n\r\n\t\t\t\t\tthis.applyPluginsAsyncWaterfall(\"after-resolve\", data, (err, result) => {\r\n\t\t\t\t\t\tif(err) return callback(err);\r\n\r\n\t\t\t\t\t\t// Ignored\r\n\t\t\t\t\t\tif(!result) return callback();\r\n\r\n\t\t\t\t\t\tlet createdModule = this.applyPluginsBailResult(\"create-module\", result);\r\n\t\t\t\t\t\tif(!createdModule) {\r\n\r\n\t\t\t\t\t\t\tif(!result.request) {\r\n\t\t\t\t\t\t\t\treturn callback(new Error(\"Empty dependency (no request)\"));\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tcreatedModule = new NormalModule(\r\n\t\t\t\t\t\t\t\tresult.request,\r\n\t\t\t\t\t\t\t\tresult.userRequest,\r\n\t\t\t\t\t\t\t\tresult.rawRequest,\r\n\t\t\t\t\t\t\t\tresult.loaders,\r\n\t\t\t\t\t\t\t\tresult.resource,\r\n\t\t\t\t\t\t\t\tresult.parser\r\n\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tcreatedModule = this.applyPluginsWaterfall0(\"module\", createdModule);\r\n\r\n\t\t\t\t\t\treturn callback(null, createdModule);\r\n\t\t\t\t\t});\r\n\t\t\t\t});\r\n\t\t\t};\r\n\t\t});\r\n\t\tthis.plugin(\"resolver\", function() {\r\n\t\t\t/* beautify preserve:start */\r\n            // js-beautify consider to concat \"return\" and \"(\"\r\n            // but it сontradicts eslint rule (keyword-spacing)\r\n\t\t\treturn (data, callback) => {\r\n\t\t\t\t/* beautify preserve:end */\r\n\t\t\t\tconst contextInfo = data.contextInfo;\r\n\t\t\t\tconst context = data.context;\r\n\t\t\t\tconst request = data.request;\r\n\r\n\t\t\t\tconst noAutoLoaders = /^-?!/.test(request);\r\n\t\t\t\tconst noPrePostAutoLoaders = /^!!/.test(request);\r\n\t\t\t\tconst noPostAutoLoaders = /^-!/.test(request);\r\n\t\t\t\tlet elements = request.replace(/^-?!+/, \"\").replace(/!!+/g, \"!\").split(\"!\");\r\n\t\t\t\tlet resource = elements.pop();\r\n\t\t\t\telements = elements.map(identToLoaderRequest);\r\n\r\n\t\t\t\tasyncLib.parallel([\r\n\t\t\t\t\tcallback => this.resolveRequestArray(contextInfo, context, elements, this.resolvers.loader, callback),\r\n\t\t\t\t\tcallback => {\r\n\t\t\t\t\t\tif(resource === \"\" || resource[0] === \"?\")\r\n\t\t\t\t\t\t\treturn callback(null, {\r\n\t\t\t\t\t\t\t\tresource\r\n\t\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\tthis.resolvers.normal.resolve(contextInfo, context, resource, (err, resource, resourceResolveData) => {\r\n\t\t\t\t\t\t\tif(err) return callback(err);\r\n\t\t\t\t\t\t\tcallback(null, {\r\n\t\t\t\t\t\t\t\tresourceResolveData,\r\n\t\t\t\t\t\t\t\tresource\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\t\t\t\t], (err, results) => {\r\n\t\t\t\t\tif(err) return callback(err);\r\n\t\t\t\t\tlet loaders = results[0];\r\n\t\t\t\t\tconst resourceResolveData = results[1].resourceResolveData;\r\n\t\t\t\t\tresource = results[1].resource;\r\n\r\n\t\t\t\t\t// translate option idents\r\n\t\t\t\t\ttry {\r\n\t\t\t\t\t\tloaders.forEach(item => {\r\n\t\t\t\t\t\t\tif(typeof item.options === \"string\" && /^\\?/.test(item.options)) {\r\n\t\t\t\t\t\t\t\titem.options = this.ruleSet.findOptionsByIdent(item.options.substr(1));\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t} catch(e) {\r\n\t\t\t\t\t\treturn callback(e);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif(resource === false) {\r\n\t\t\t\t\t\t// ignored\r\n\t\t\t\t\t\treturn callback(null,\r\n\t\t\t\t\t\t\tnew RawModule(\r\n\t\t\t\t\t\t\t\t\"/* (ignored) */\",\r\n\t\t\t\t\t\t\t\t`ignored ${context} ${request}`,\r\n\t\t\t\t\t\t\t\t`${request} (ignored)`\r\n\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tconst userRequest = loaders.map(loaderToIdent).concat([resource]).join(\"!\");\r\n\r\n\t\t\t\t\tlet resourcePath = resource;\r\n\t\t\t\t\tlet resourceQuery = \"\";\r\n\t\t\t\t\tconst queryIndex = resourcePath.indexOf(\"?\");\r\n\t\t\t\t\tif(queryIndex >= 0) {\r\n\t\t\t\t\t\tresourceQuery = resourcePath.substr(queryIndex);\r\n\t\t\t\t\t\tresourcePath = resourcePath.substr(0, queryIndex);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tconst result = this.ruleSet.exec({\r\n\t\t\t\t\t\tresource: resourcePath,\r\n\t\t\t\t\t\tresourceQuery,\r\n\t\t\t\t\t\tissuer: contextInfo.issuer,\r\n\t\t\t\t\t\tcompiler: contextInfo.compiler\r\n\t\t\t\t\t});\r\n\t\t\t\t\tconst settings = {};\r\n\t\t\t\t\tconst useLoadersPost = [];\r\n\t\t\t\t\tconst useLoaders = [];\r\n\t\t\t\t\tconst useLoadersPre = [];\r\n\t\t\t\t\tresult.forEach(r => {\r\n\t\t\t\t\t\tif(r.type === \"use\") {\r\n\t\t\t\t\t\t\tif(r.enforce === \"post\" && !noPostAutoLoaders && !noPrePostAutoLoaders)\r\n\t\t\t\t\t\t\t\tuseLoadersPost.push(r.value);\r\n\t\t\t\t\t\t\telse if(r.enforce === \"pre\" && !noPrePostAutoLoaders)\r\n\t\t\t\t\t\t\t\tuseLoadersPre.push(r.value);\r\n\t\t\t\t\t\t\telse if(!r.enforce && !noAutoLoaders && !noPrePostAutoLoaders)\r\n\t\t\t\t\t\t\t\tuseLoaders.push(r.value);\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tsettings[r.type] = r.value;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\t\tasyncLib.parallel([\r\n\t\t\t\t\t\tthis.resolveRequestArray.bind(this, contextInfo, this.context, useLoadersPost, this.resolvers.loader),\r\n\t\t\t\t\t\tthis.resolveRequestArray.bind(this, contextInfo, this.context, useLoaders, this.resolvers.loader),\r\n\t\t\t\t\t\tthis.resolveRequestArray.bind(this, contextInfo, this.context, useLoadersPre, this.resolvers.loader)\r\n\t\t\t\t\t], (err, results) => {\r\n\t\t\t\t\t\tif(err) return callback(err);\r\n\t\t\t\t\t\tloaders = results[0].concat(loaders, results[1], results[2]);\r\n\t\t\t\t\t\tprocess.nextTick(() => {\r\n\t\t\t\t\t\t\tcallback(null, {\r\n\t\t\t\t\t\t\t\tcontext: context,\r\n\t\t\t\t\t\t\t\trequest: loaders.map(loaderToIdent).concat([resource]).join(\"!\"),\r\n\t\t\t\t\t\t\t\tdependencies: data.dependencies,\r\n\t\t\t\t\t\t\t\tuserRequest,\r\n\t\t\t\t\t\t\t\trawRequest: request,\r\n\t\t\t\t\t\t\t\tloaders,\r\n\t\t\t\t\t\t\t\tresource,\r\n\t\t\t\t\t\t\t\tresourceResolveData,\r\n\t\t\t\t\t\t\t\tparser: this.getParser(settings.parser)\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t});\r\n\t\t\t\t});\r\n\t\t\t};\r\n\t\t});\r\n\t}\r\n\r\n\tcreate(data, callback) {\r\n\t\tconst dependencies = data.dependencies;\r\n\t\tconst cacheEntry = dependencies[0].__NormalModuleFactoryCache;\r\n\t\tif(cacheEntry) return callback(null, cacheEntry);\r\n\t\tconst context = data.context || this.context;\r\n\t\tconst request = dependencies[0].request;\r\n\t\tconst contextInfo = data.contextInfo || {};\r\n\t\tthis.applyPluginsAsyncWaterfall(\"before-resolve\", {\r\n\t\t\tcontextInfo,\r\n\t\t\tcontext,\r\n\t\t\trequest,\r\n\t\t\tdependencies\r\n\t\t}, (err, result) => {\r\n\t\t\tif(err) return callback(err);\r\n\r\n\t\t\t// Ignored\r\n\t\t\tif(!result) return callback();\r\n\r\n\t\t\tconst factory = this.applyPluginsWaterfall0(\"factory\", null);\r\n\r\n\t\t\t// Ignored\r\n\t\t\tif(!factory) return callback();\r\n\r\n\t\t\tfactory(result, (err, module) => {\r\n\t\t\t\tif(err) return callback(err);\r\n\r\n\t\t\t\tif(module && this.cachePredicate(module)) {\r\n\t\t\t\t\tdependencies.forEach(d => d.__NormalModuleFactoryCache = module);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tcallback(null, module);\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n\r\n\tresolveRequestArray(contextInfo, context, array, resolver, callback) {\r\n\t\tif(array.length === 0) return callback(null, []);\r\n\t\tasyncLib.map(array, (item, callback) => {\r\n\t\t\tresolver.resolve(contextInfo, context, item.loader, (err, result) => {\r\n\t\t\t\tif(err && /^[^/]*$/.test(item.loader) && !/-loader$/.test(item.loader)) {\r\n\t\t\t\t\treturn resolver.resolve(contextInfo, context, item.loader + \"-loader\", err2 => {\r\n\t\t\t\t\t\tif(!err2) {\r\n\t\t\t\t\t\t\terr.message = err.message + \"\\n\" +\r\n\t\t\t\t\t\t\t\t\"BREAKING CHANGE: It's no longer allowed to omit the '-loader' suffix when using loaders.\\n\" +\r\n\t\t\t\t\t\t\t\t`                 You need to specify '${item.loader}-loader' instead of '${item.loader}',\\n` +\r\n\t\t\t\t\t\t\t\t\"                 see https://webpack.js.org/guides/migrating/#automatic-loader-module-name-extension-removed\";\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tcallback(err);\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t\tif(err) return callback(err);\r\n\r\n\t\t\t\tconst optionsOnly = item.options ? {\r\n\t\t\t\t\toptions: item.options\r\n\t\t\t\t} : undefined;\r\n\t\t\t\treturn callback(null, Object.assign({}, item, identToLoaderRequest(result), optionsOnly));\r\n\t\t\t});\r\n\t\t}, callback);\r\n\t}\r\n\r\n\tgetParser(parserOptions) {\r\n\t\tlet ident = \"null\";\r\n\t\tif(parserOptions) {\r\n\t\t\tif(parserOptions.ident)\r\n\t\t\t\tident = parserOptions.ident;\r\n\t\t\telse\r\n\t\t\t\tident = JSON.stringify(parserOptions);\r\n\t\t}\r\n\t\tconst parser = this.parserCache[ident];\r\n\t\tif(parser)\r\n\t\t\treturn parser;\r\n\t\treturn this.parserCache[ident] = this.createParser(parserOptions);\r\n\t}\r\n\r\n\tcreateParser(parserOptions) {\r\n\t\tconst parser = new Parser();\r\n\t\tthis.applyPlugins2(\"parser\", parser, parserOptions || {});\r\n\t\treturn parser;\r\n\t}\r\n}\r\n\r\nmodule.exports = NormalModuleFactory;\r\n","/home/travis/build/npmtest/node-npmtest-webpack/node_modules/webpack/lib/NormalModule.js":"/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\n\"use strict\";\r\n\r\nconst path = require(\"path\");\r\nconst NativeModule = require(\"module\");\r\nconst crypto = require(\"crypto\");\r\n\r\nconst SourceMapSource = require(\"webpack-sources\").SourceMapSource;\r\nconst OriginalSource = require(\"webpack-sources\").OriginalSource;\r\nconst RawSource = require(\"webpack-sources\").RawSource;\r\nconst ReplaceSource = require(\"webpack-sources\").ReplaceSource;\r\nconst CachedSource = require(\"webpack-sources\").CachedSource;\r\nconst LineToLineMappedSource = require(\"webpack-sources\").LineToLineMappedSource;\r\n\r\nconst WebpackError = require(\"./WebpackError\");\r\nconst Module = require(\"./Module\");\r\nconst ModuleParseError = require(\"./ModuleParseError\");\r\nconst ModuleBuildError = require(\"./ModuleBuildError\");\r\nconst ModuleError = require(\"./ModuleError\");\r\nconst ModuleWarning = require(\"./ModuleWarning\");\r\n\r\nconst runLoaders = require(\"loader-runner\").runLoaders;\r\nconst getContext = require(\"loader-runner\").getContext;\r\n\r\nfunction asString(buf) {\r\n\tif(Buffer.isBuffer(buf)) {\r\n\t\treturn buf.toString(\"utf-8\");\r\n\t}\r\n\treturn buf;\r\n}\r\n\r\nfunction contextify(context, request) {\r\n\treturn request.split(\"!\").map(function(r) {\r\n\t\tlet rp = path.relative(context, r);\r\n\t\tif(path.sep === \"\\\\\")\r\n\t\t\trp = rp.replace(/\\\\/g, \"/\");\r\n\t\tif(rp.indexOf(\"../\") !== 0)\r\n\t\t\trp = \"./\" + rp;\r\n\t\treturn rp;\r\n\t}).join(\"!\");\r\n}\r\n\r\nclass NonErrorEmittedError extends WebpackError {\r\n\tconstructor(error) {\r\n\t\tsuper();\r\n\r\n\t\tthis.name = \"NonErrorEmittedError\";\r\n\t\tthis.message = \"(Emitted value instead of an instance of Error) \" + error;\r\n\r\n\t\tError.captureStackTrace(this, this.constructor);\r\n\t}\r\n}\r\n\r\nclass NormalModule extends Module {\r\n\r\n\tconstructor(request, userRequest, rawRequest, loaders, resource, parser) {\r\n\t\tsuper();\r\n\t\tthis.request = request;\r\n\t\tthis.userRequest = userRequest;\r\n\t\tthis.rawRequest = rawRequest;\r\n\t\tthis.parser = parser;\r\n\t\tthis.resource = resource;\r\n\t\tthis.context = getContext(resource);\r\n\t\tthis.loaders = loaders;\r\n\t\tthis.fileDependencies = [];\r\n\t\tthis.contextDependencies = [];\r\n\t\tthis.warnings = [];\r\n\t\tthis.errors = [];\r\n\t\tthis.error = null;\r\n\t\tthis._source = null;\r\n\t\tthis.assets = {};\r\n\t\tthis.built = false;\r\n\t\tthis._cachedSource = null;\r\n\t}\r\n\r\n\tidentifier() {\r\n\t\treturn this.request;\r\n\t}\r\n\r\n\treadableIdentifier(requestShortener) {\r\n\t\treturn requestShortener.shorten(this.userRequest);\r\n\t}\r\n\r\n\tlibIdent(options) {\r\n\t\treturn contextify(options.context, this.userRequest);\r\n\t}\r\n\r\n\tnameForCondition() {\r\n\t\tconst idx = this.resource.indexOf(\"?\");\r\n\t\tif(idx >= 0) return this.resource.substr(0, idx);\r\n\t\treturn this.resource;\r\n\t}\r\n\r\n\tcreateSourceForAsset(name, content, sourceMap) {\r\n\t\tif(!sourceMap) {\r\n\t\t\treturn new RawSource(content);\r\n\t\t}\r\n\r\n\t\tif(typeof sourceMap === \"string\") {\r\n\t\t\treturn new OriginalSource(content, sourceMap);\r\n\t\t}\r\n\r\n\t\treturn new SourceMapSource(content, name, sourceMap);\r\n\t}\r\n\r\n\tcreateLoaderContext(resolver, options, compilation, fs) {\r\n\t\tconst loaderContext = {\r\n\t\t\tversion: 2,\r\n\t\t\temitWarning: (warning) => {\r\n\t\t\t\tif(!(warning instanceof Error))\r\n\t\t\t\t\twarning = new NonErrorEmittedError(warning);\r\n\t\t\t\tthis.warnings.push(new ModuleWarning(this, warning));\r\n\t\t\t},\r\n\t\t\temitError: (error) => {\r\n\t\t\t\tif(!(error instanceof Error))\r\n\t\t\t\t\terror = new NonErrorEmittedError(error);\r\n\t\t\t\tthis.errors.push(new ModuleError(this, error));\r\n\t\t\t},\r\n\t\t\texec: (code, filename) => {\r\n\t\t\t\tconst module = new NativeModule(filename, this);\r\n\t\t\t\tmodule.paths = NativeModule._nodeModulePaths(this.context);\r\n\t\t\t\tmodule.filename = filename;\r\n\t\t\t\tmodule._compile(code, filename);\r\n\t\t\t\treturn module.exports;\r\n\t\t\t},\r\n\t\t\tresolve(context, request, callback) {\r\n\t\t\t\tresolver.resolve({}, context, request, callback);\r\n\t\t\t},\r\n\t\t\tresolveSync(context, request) {\r\n\t\t\t\treturn resolver.resolveSync({}, context, request);\r\n\t\t\t},\r\n\t\t\temitFile: (name, content, sourceMap) => {\r\n\t\t\t\tthis.assets[name] = this.createSourceForAsset(name, content, sourceMap);\r\n\t\t\t},\r\n\t\t\toptions: options,\r\n\t\t\twebpack: true,\r\n\t\t\tsourceMap: !!this.useSourceMap,\r\n\t\t\t_module: this,\r\n\t\t\t_compilation: compilation,\r\n\t\t\t_compiler: compilation.compiler,\r\n\t\t\tfs: fs,\r\n\t\t};\r\n\r\n\t\tcompilation.applyPlugins(\"normal-module-loader\", loaderContext, this);\r\n\t\tif(options.loader)\r\n\t\t\tObject.assign(loaderContext, options.loader);\r\n\r\n\t\treturn loaderContext;\r\n\t}\r\n\r\n\tcreateSource(source, resourceBuffer, sourceMap) {\r\n\t\t// if there is no identifier return raw source\r\n\t\tif(!this.identifier) {\r\n\t\t\treturn new RawSource(source);\r\n\t\t}\r\n\r\n\t\t// from here on we assume we have an identifier\r\n\t\tconst identifier = this.identifier();\r\n\r\n\t\tif(this.lineToLine && resourceBuffer) {\r\n\t\t\treturn new LineToLineMappedSource(\r\n\t\t\t\tsource, identifier, asString(resourceBuffer));\r\n\t\t}\r\n\r\n\t\tif(this.useSourceMap && sourceMap) {\r\n\t\t\treturn new SourceMapSource(source, identifier, sourceMap);\r\n\t\t}\r\n\r\n\t\treturn new OriginalSource(source, identifier);\r\n\t}\r\n\r\n\tdoBuild(options, compilation, resolver, fs, callback) {\r\n\t\tthis.cacheable = false;\r\n\t\tconst loaderContext = this.createLoaderContext(resolver, options, compilation, fs);\r\n\r\n\t\trunLoaders({\r\n\t\t\tresource: this.resource,\r\n\t\t\tloaders: this.loaders,\r\n\t\t\tcontext: loaderContext,\r\n\t\t\treadResource: fs.readFile.bind(fs)\r\n\t\t}, (err, result) => {\r\n\t\t\tif(result) {\r\n\t\t\t\tthis.cacheable = result.cacheable;\r\n\t\t\t\tthis.fileDependencies = result.fileDependencies;\r\n\t\t\t\tthis.contextDependencies = result.contextDependencies;\r\n\t\t\t}\r\n\r\n\t\t\tif(err) {\r\n\t\t\t\tconst error = new ModuleBuildError(this, err);\r\n\t\t\t\treturn callback(error);\r\n\t\t\t}\r\n\r\n\t\t\tconst resourceBuffer = result.resourceBuffer;\r\n\t\t\tconst source = result.result[0];\r\n\t\t\tconst sourceMap = result.result[1];\r\n\r\n\t\t\tif(!Buffer.isBuffer(source) && typeof source !== \"string\") {\r\n\t\t\t\tconst error = new ModuleBuildError(this, new Error(\"Final loader didn't return a Buffer or String\"));\r\n\t\t\t\treturn callback(error);\r\n\t\t\t}\r\n\r\n\t\t\tthis._source = this.createSource(asString(source), resourceBuffer, sourceMap);\r\n\t\t\treturn callback();\r\n\t\t});\r\n\t}\r\n\r\n\tdisconnect() {\r\n\t\tthis.built = false;\r\n\t\tsuper.disconnect();\r\n\t}\r\n\r\n\tmarkModuleAsErrored(error) {\r\n\t\tthis.meta = null;\r\n\t\tthis.error = error;\r\n\t\tthis.errors.push(this.error);\r\n\t\tthis._source = new RawSource(\"throw new Error(\" + JSON.stringify(this.error.message) + \");\");\r\n\t}\r\n\r\n\tapplyNoParseRule(rule, content) {\r\n\t\t// must start with \"rule\" if rule is a string\r\n\t\tif(typeof rule === \"string\") {\r\n\t\t\treturn content.indexOf(rule) === 0;\r\n\t\t}\r\n\t\t// we assume rule is a regexp\r\n\t\treturn rule.test(content);\r\n\t}\r\n\r\n\t// check if module should not be parsed\r\n\t// returns \"true\" if the module should !not! be parsed\r\n\t// returns \"false\" if the module !must! be parsed\r\n\tshouldPreventParsing(noParseRule, request) {\r\n\t\t// if no noParseRule exists, return false\r\n\t\t// the module !must! be parsed.\r\n\t\tif(!noParseRule) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\t// we only have one rule to check\r\n\t\tif(!Array.isArray(noParseRule)) {\r\n\t\t\t// returns \"true\" if the module is !not! to be parsed\r\n\t\t\treturn this.applyNoParseRule(noParseRule, request);\r\n\t\t}\r\n\r\n\t\tfor(let i = 0; i < noParseRule.length; i++) {\r\n\t\t\tconst rule = noParseRule[i];\r\n\t\t\t// early exit on first truthy match\r\n\t\t\t// this module is !not! to be parsed\r\n\t\t\tif(this.applyNoParseRule(rule, request)) {\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t}\r\n\t\t// no match found, so this module !should! be parsed\r\n\t\treturn false;\r\n\t}\r\n\r\n\tbuild(options, compilation, resolver, fs, callback) {\r\n\t\tthis.buildTimestamp = new Date().getTime();\r\n\t\tthis.built = true;\r\n\t\tthis._source = null;\r\n\t\tthis.error = null;\r\n\t\tthis.errors.length = 0;\r\n\t\tthis.warnings.length = 0;\r\n\t\tthis.meta = {};\r\n\r\n\t\treturn this.doBuild(options, compilation, resolver, fs, (err) => {\r\n\t\t\tthis.dependencies.length = 0;\r\n\t\t\tthis.variables.length = 0;\r\n\t\t\tthis.blocks.length = 0;\r\n\t\t\tthis._cachedSource = null;\r\n\r\n\t\t\t// if we have an error mark module as failed and exit\r\n\t\t\tif(err) {\r\n\t\t\t\tthis.markModuleAsErrored(err);\r\n\t\t\t\treturn callback();\r\n\t\t\t}\r\n\r\n\t\t\t// check if this module should !not! be parsed.\r\n\t\t\t// if so, exit here;\r\n\t\t\tconst noParseRule = options.module && options.module.noParse;\r\n\t\t\tif(this.shouldPreventParsing(noParseRule, this.request)) {\r\n\t\t\t\treturn callback();\r\n\t\t\t}\r\n\r\n\t\t\ttry {\r\n\t\t\t\tthis.parser.parse(this._source.source(), {\r\n\t\t\t\t\tcurrent: this,\r\n\t\t\t\t\tmodule: this,\r\n\t\t\t\t\tcompilation: compilation,\r\n\t\t\t\t\toptions: options\r\n\t\t\t\t});\r\n\t\t\t} catch(e) {\r\n\t\t\t\tconst source = this._source.source();\r\n\t\t\t\tconst error = new ModuleParseError(this, source, e);\r\n\t\t\t\tthis.markModuleAsErrored(error);\r\n\t\t\t\treturn callback();\r\n\t\t\t}\r\n\t\t\treturn callback();\r\n\t\t});\r\n\t}\r\n\r\n\tgetHashDigest() {\r\n\t\tconst hash = crypto.createHash(\"md5\");\r\n\t\tthis.updateHash(hash);\r\n\t\treturn hash.digest(\"hex\");\r\n\t}\r\n\r\n\tsourceDependency(dependency, dependencyTemplates, source, outputOptions, requestShortener) {\r\n\t\tconst template = dependencyTemplates.get(dependency.constructor);\r\n\t\tif(!template) throw new Error(\"No template for dependency: \" + dependency.constructor.name);\r\n\t\ttemplate.apply(dependency, source, outputOptions, requestShortener, dependencyTemplates);\r\n\t}\r\n\r\n\tsourceVariables(variable, availableVars, dependencyTemplates, outputOptions, requestShortener) {\r\n\t\tconst name = variable.name;\r\n\t\tconst expr = variable.expressionSource(dependencyTemplates, outputOptions, requestShortener);\r\n\r\n\t\tif(availableVars.some(v => v.name === name && v.expression.source() === expr.source())) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\treturn {\r\n\t\t\tname: name,\r\n\t\t\texpression: expr\r\n\t\t};\r\n\t}\r\n\r\n\t/*\r\n\t * creates the start part of a IIFE around the module to inject a variable name\r\n\t * (function(...){   <- this part\r\n\t * }.call(...))\r\n\t */\r\n\tvariableInjectionFunctionWrapperStartCode(varNames) {\r\n\t\tconst args = varNames.join(\", \");\r\n\t\treturn `/* WEBPACK VAR INJECTION */(function(${args}) {`;\r\n\t}\r\n\r\n\tcontextArgument(block) {\r\n\t\tif(this === block) {\r\n\t\t\treturn this.exportsArgument || \"exports\";\r\n\t\t}\r\n\t\treturn \"this\";\r\n\t}\r\n\r\n\t/*\r\n\t * creates the end part of a IIFE around the module to inject a variable name\r\n\t * (function(...){\r\n\t * }.call(...))   <- this part\r\n\t */\r\n\tvariableInjectionFunctionWrapperEndCode(varExpressions, block) {\r\n\t\tconst firstParam = this.contextArgument(block);\r\n\t\tconst furtherParams = varExpressions.map(e => e.source()).join(\", \");\r\n\t\treturn `}.call(${firstParam}, ${furtherParams}))`;\r\n\t}\r\n\r\n\tsplitVariablesInUniqueNamedChunks(vars) {\r\n\t\tconst startState = [\r\n\t\t\t[]\r\n\t\t];\r\n\t\treturn vars.reduce((chunks, variable) => {\r\n\t\t\tconst current = chunks[chunks.length - 1];\r\n\t\t\t// check if variable with same name exists already\r\n\t\t\t// if so create a new chunk of variables.\r\n\t\t\tconst variableNameAlreadyExists = current.some(v => v.name === variable.name);\r\n\r\n\t\t\tif(variableNameAlreadyExists) {\r\n\t\t\t\t// start new chunk with current variable\r\n\t\t\t\tchunks.push([variable]);\r\n\t\t\t} else {\r\n\t\t\t\t// else add it to current chunk\r\n\t\t\t\tcurrent.push(variable);\r\n\t\t\t}\r\n\t\t\treturn chunks;\r\n\t\t}, startState);\r\n\t}\r\n\r\n\tsourceBlock(block, availableVars, dependencyTemplates, source, outputOptions, requestShortener) {\r\n\t\tblock.dependencies.forEach((dependency) => this.sourceDependency(\r\n\t\t\tdependency, dependencyTemplates, source, outputOptions, requestShortener));\r\n\r\n\t\t/**\r\n\t\t * Get the variables of all blocks that we need to inject.\r\n\t\t * These will contain the variable name and its expression.\r\n\t\t * The name will be added as a paramter in a IIFE the expression as its value.\r\n\t\t */\r\n\t\tconst vars = block.variables.map((variable) => this.sourceVariables(\r\n\t\t\t\tvariable, availableVars, dependencyTemplates, outputOptions, requestShortener))\r\n\t\t\t.filter(Boolean);\r\n\r\n\t\t/**\r\n\t\t * if we actually have variables\r\n\t\t * this is important as how #splitVariablesInUniqueNamedChunks works\r\n\t\t * it will always return an array in an array which would lead to a IIFE wrapper around\r\n\t\t * a module if we do this with an empty vars array.\r\n\t\t */\r\n\t\tif(vars.length > 0) {\r\n\t\t\t/**\r\n\t\t\t * Split all variables up into chunks of unique names.\r\n\t\t\t * e.g. imagine you have the following variable names that need to be injected:\r\n\t\t\t * [foo, bar, baz, foo, some, more]\r\n\t\t\t * we can not inject \"foo\" twice, therefore we just make two IIFEs like so:\r\n\t\t\t * (function(foo, bar, baz){\r\n\t\t\t *   (function(foo, some, more){\r\n\t\t\t *     ...\r\n\t\t\t *   }(...));\r\n\t\t\t * }(...));\r\n\t\t\t *\r\n\t\t\t * \"splitVariablesInUniqueNamedChunks\" splits the variables shown above up to this:\r\n\t\t\t * [[foo, bar, baz], [foo, some, more]]\r\n\t\t\t */\r\n\t\t\tconst injectionVariableChunks = this.splitVariablesInUniqueNamedChunks(vars);\r\n\r\n\t\t\t// create all the beginnings of IIFEs\r\n\t\t\tconst functionWrapperStarts = injectionVariableChunks.map((variableChunk) => variableChunk.map(variable => variable.name))\r\n\t\t\t\t.map(names => this.variableInjectionFunctionWrapperStartCode(names));\r\n\r\n\t\t\t// and all the ends\r\n\t\t\tconst functionWrapperEnds = injectionVariableChunks.map((variableChunk) => variableChunk.map(variable => variable.expression))\r\n\t\t\t\t.map(expressions => this.variableInjectionFunctionWrapperEndCode(expressions, block));\r\n\r\n\t\t\t// join them to one big string\r\n\t\t\tconst varStartCode = functionWrapperStarts.join(\"\");\r\n\t\t\t// reverse the ends first before joining them, as the last added must be the inner most\r\n\t\t\tconst varEndCode = functionWrapperEnds.reverse().join(\"\");\r\n\r\n\t\t\t// if we have anything, add it to the source\r\n\t\t\tif(varStartCode && varEndCode) {\r\n\t\t\t\tconst start = block.range ? block.range[0] : -10;\r\n\t\t\t\tconst end = block.range ? block.range[1] : (this._source.size() + 1);\r\n\t\t\t\tsource.insert(start + 0.5, varStartCode);\r\n\t\t\t\tsource.insert(end + 0.5, \"\\n/* WEBPACK VAR INJECTION */\" + varEndCode);\r\n\t\t\t}\r\n\t\t}\r\n\t\tblock.blocks.forEach((block) => this.sourceBlock(\r\n\t\t\tblock, availableVars.concat(vars), dependencyTemplates, source, outputOptions, requestShortener));\r\n\t}\r\n\r\n\tsource(dependencyTemplates, outputOptions, requestShortener) {\r\n\t\tconst hashDigest = this.getHashDigest();\r\n\t\tif(this._cachedSource && this._cachedSource.hash === hashDigest) {\r\n\t\t\treturn this._cachedSource.source;\r\n\t\t}\r\n\r\n\t\tif(!this._source) {\r\n\t\t\treturn new RawSource(\"throw new Error('No source available');\");\r\n\t\t}\r\n\r\n\t\tconst source = new ReplaceSource(this._source);\r\n\t\tthis._cachedSource = {\r\n\t\t\tsource: source,\r\n\t\t\thash: hashDigest\r\n\t\t};\r\n\r\n\t\tthis.sourceBlock(this, [], dependencyTemplates, source, outputOptions, requestShortener);\r\n\t\treturn new CachedSource(source);\r\n\t}\r\n\r\n\toriginalSource() {\r\n\t\treturn this._source;\r\n\t}\r\n\r\n\tgetHighestTimestamp(keys, timestampsByKey) {\r\n\t\tlet highestTimestamp = 0;\r\n\t\tfor(let i = 0; i < keys.length; i++) {\r\n\t\t\tconst key = keys[i];\r\n\t\t\tconst timestamp = timestampsByKey[key];\r\n\t\t\t// if there is no timestamp yet, early return with Infinity\r\n\t\t\tif(!timestamp) return Infinity;\r\n\t\t\thighestTimestamp = Math.max(highestTimestamp, timestamp);\r\n\t\t}\r\n\t\treturn highestTimestamp;\r\n\t}\r\n\r\n\tneedRebuild(fileTimestamps, contextTimestamps) {\r\n\t\tconst highestFileDepTimestamp = this.getHighestTimestamp(\r\n\t\t\tthis.fileDependencies, fileTimestamps);\r\n\t\t// if the hightest is Infinity, we need a rebuild\r\n\t\t// exit early here.\r\n\t\tif(highestFileDepTimestamp === Infinity) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\r\n\t\tconst highestContextDepTimestamp = this.getHighestTimestamp(\r\n\t\t\tthis.contextDependencies, contextTimestamps);\r\n\r\n\t\t// Again if the hightest is Infinity, we need a rebuild\r\n\t\t// exit early here.\r\n\t\tif(highestContextDepTimestamp === Infinity) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\r\n\t\t// else take the highest of file and context timestamps and compare\r\n\t\t// to last build timestamp\r\n\t\treturn Math.max(highestContextDepTimestamp, highestFileDepTimestamp) >= this.buildTimestamp;\r\n\t}\r\n\r\n\tsize() {\r\n\t\treturn this._source ? this._source.size() : -1;\r\n\t}\r\n\r\n\tupdateHashWithSource(hash) {\r\n\t\tif(!this._source) {\r\n\t\t\thash.update(\"null\");\r\n\t\t\treturn;\r\n\t\t}\r\n\t\thash.update(\"source\");\r\n\t\tthis._source.updateHash(hash);\r\n\t}\r\n\r\n\tupdateHashWithMeta(hash) {\r\n\t\thash.update(\"meta\");\r\n\t\thash.update(JSON.stringify(this.meta));\r\n\t}\r\n\r\n\tupdateHash(hash) {\r\n\t\tthis.updateHashWithSource(hash);\r\n\t\tthis.updateHashWithMeta(hash);\r\n\t\tsuper.updateHash(hash);\r\n\t}\r\n\r\n}\r\n\r\nmodule.exports = NormalModule;\r\n","/home/travis/build/npmtest/node-npmtest-webpack/node_modules/webpack/lib/ModuleParseError.js":"/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\n\"use strict\";\r\n\r\nconst WebpackError = require(\"./WebpackError\");\r\n\r\nclass ModuleParseError extends WebpackError {\r\n\tconstructor(module, source, err) {\r\n\t\tsuper();\r\n\r\n\t\tthis.name = \"ModuleParseError\";\r\n\t\tthis.message = \"Module parse failed: \" + module.request + \" \" + err.message;\r\n\t\tthis.message += \"\\nYou may need an appropriate loader to handle this file type.\";\r\n\t\tif(err.loc && typeof err.loc === \"object\" && typeof err.loc.line === \"number\") {\r\n\t\t\tvar lineNumber = err.loc.line;\r\n\t\t\tif(/[\\0\\u0001\\u0002\\u0003\\u0004\\u0005\\u0006\\u0007]/.test(source)) { // binary file\r\n\t\t\t\tthis.message += \"\\n(Source code omitted for this binary file)\";\r\n\t\t\t} else {\r\n\t\t\t\tsource = source.split(\"\\n\");\r\n\t\t\t\tthis.message += \"\\n| \" + source.slice(Math.max(0, lineNumber - 3), lineNumber + 2).join(\"\\n| \");\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tthis.message += \"\\n\" + err.stack;\r\n\t\t}\r\n\t\tthis.module = module;\r\n\t\tthis.error = err;\r\n\r\n\t\tError.captureStackTrace(this, this.constructor);\r\n\t}\r\n}\r\n\r\nmodule.exports = ModuleParseError;\r\n","/home/travis/build/npmtest/node-npmtest-webpack/node_modules/webpack/lib/ModuleBuildError.js":"/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\n\"use strict\";\r\n\r\nconst WebpackError = require(\"./WebpackError\");\r\nconst cutOffLoaderExecution = require(\"./ErrorHelpers\").cutOffLoaderExecution;\r\n\r\nclass ModuleBuildError extends WebpackError {\r\n\tconstructor(module, err) {\r\n\t\tsuper();\r\n\r\n\t\tthis.name = \"ModuleBuildError\";\r\n\t\tthis.message = \"Module build failed: \";\r\n\t\tif(err !== null && typeof err === \"object\") {\r\n\t\t\tif(typeof err.stack === \"string\" && err.stack) {\r\n\t\t\t\tvar stack = cutOffLoaderExecution(err.stack);\r\n\t\t\t\tif(!err.hideStack) {\r\n\t\t\t\t\tthis.message += stack;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.details = stack;\r\n\t\t\t\t\tif(typeof err.message === \"string\" && err.message) {\r\n\t\t\t\t\t\tthis.message += err.message;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tthis.message += err;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t} else if(typeof err.message === \"string\" && err.message) {\r\n\t\t\t\tthis.message += err.message;\r\n\t\t\t} else {\r\n\t\t\t\tthis.message += err;\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis.module = module;\r\n\t\tthis.error = err;\r\n\r\n\t\tError.captureStackTrace(this, this.constructor);\r\n\t}\r\n}\r\n\r\nmodule.exports = ModuleBuildError;\r\n","/home/travis/build/npmtest/node-npmtest-webpack/node_modules/webpack/lib/ErrorHelpers.js":"/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\n\"use strict\";\r\n\r\nconst loaderFlag = \"LOADER_EXECUTION\";\r\n\r\nexports.cutOffLoaderExecution = (stack) => {\r\n\tstack = stack.split(\"\\n\");\r\n\tfor(let i = 0; i < stack.length; i++)\r\n\t\tif(stack[i].indexOf(loaderFlag) >= 0)\r\n\t\t\tstack.length = i;\r\n\treturn stack.join(\"\\n\");\r\n};\r\n\r\nexports.cutOffMessage = (stack, message) => {\r\n\tconst nextLine = stack.indexOf(\"\\n\");\r\n\tif(nextLine === -1) {\r\n\t\treturn stack === message ? \"\" : stack;\r\n\t} else {\r\n\t\tconst firstLine = stack.substr(0, nextLine);\r\n\t\treturn firstLine === message ? stack.substr(nextLine + 1) : stack;\r\n\t}\r\n};\r\n\r\nexports.cleanUp = (stack, message) => {\r\n\tstack = exports.cutOffLoaderExecution(stack);\r\n\tstack = exports.cutOffMessage(stack, message);\r\n\treturn stack;\r\n};\r\n","/home/travis/build/npmtest/node-npmtest-webpack/node_modules/webpack/lib/ModuleError.js":"/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\n\"use strict\";\r\n\r\nconst WebpackError = require(\"./WebpackError\");\r\nconst cleanUp = require(\"./ErrorHelpers\").cleanUp;\r\n\r\nclass ModuleError extends WebpackError {\r\n\tconstructor(module, err) {\r\n\t\tsuper();\r\n\r\n\t\tthis.name = \"ModuleError\";\r\n\t\tthis.module = module;\r\n\t\tthis.message = err && typeof err === \"object\" && err.message ? err.message : err;\r\n\t\tthis.error = err;\r\n\t\tthis.details = err && typeof err === \"object\" && err.stack ? cleanUp(err.stack, this.message) : undefined;\r\n\r\n\t\tError.captureStackTrace(this, this.constructor);\r\n\t}\r\n}\r\n\r\nmodule.exports = ModuleError;\r\n","/home/travis/build/npmtest/node-npmtest-webpack/node_modules/webpack/lib/ModuleWarning.js":"/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\n\"use strict\";\r\n\r\nconst WebpackError = require(\"./WebpackError\");\r\nconst cleanUp = require(\"./ErrorHelpers\").cleanUp;\r\n\r\nclass ModuleWarning extends WebpackError {\r\n\tconstructor(module, warning) {\r\n\t\tsuper();\r\n\r\n\t\tthis.name = \"ModuleWarning\";\r\n\t\tthis.module = module;\r\n\t\tthis.message = warning && typeof warning === \"object\" && warning.message ? warning.message : warning;\r\n\t\tthis.warning = warning;\r\n\t\tthis.details = warning && typeof warning === \"object\" && warning.stack ? cleanUp(warning.stack, this.message) : undefined;\r\n\r\n\t\tError.captureStackTrace(this, this.constructor);\r\n\t}\r\n}\r\n\r\nmodule.exports = ModuleWarning;\r\n","/home/travis/build/npmtest/node-npmtest-webpack/node_modules/webpack/lib/RawModule.js":"/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\n\"use strict\";\r\n\r\nconst Module = require(\"./Module\");\r\nconst OriginalSource = require(\"webpack-sources\").OriginalSource;\r\nconst RawSource = require(\"webpack-sources\").RawSource;\r\n\r\nmodule.exports = class RawModule extends Module {\r\n\r\n\tconstructor(source, identifier, readableIdentifier) {\r\n\t\tsuper();\r\n\t\tthis.sourceStr = source;\r\n\t\tthis.identifierStr = identifier || this.sourceStr;\r\n\t\tthis.readableIdentifierStr = readableIdentifier || this.identifierStr;\r\n\t\tthis.cacheable = true;\r\n\t\tthis.built = false;\r\n\t}\r\n\r\n\tidentifier() {\r\n\t\treturn this.identifierStr;\r\n\t}\r\n\r\n\tsize() {\r\n\t\treturn this.sourceStr.length;\r\n\t}\r\n\r\n\treadableIdentifier(requestShortener) {\r\n\t\treturn requestShortener.shorten(this.readableIdentifierStr);\r\n\t}\r\n\r\n\tneedRebuild() {\r\n\t\treturn false;\r\n\t}\r\n\r\n\tbuild(options, compilations, resolver, fs, callback) {\r\n\t\tthis.builtTime = new Date().getTime();\r\n\t\tcallback();\r\n\t}\r\n\r\n\tsource() {\r\n\t\tif(this.useSourceMap)\r\n\t\t\treturn new OriginalSource(this.sourceStr, this.identifier());\r\n\t\telse\r\n\t\t\treturn new RawSource(this.sourceStr);\r\n\t}\r\n\r\n};\r\n","/home/travis/build/npmtest/node-npmtest-webpack/node_modules/webpack/lib/Parser.js":"/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\n\"use strict\";\r\n\r\n// Syntax: https://developer.mozilla.org/en/SpiderMonkey/Parser_API\r\n\r\nconst acorn = require(\"acorn-dynamic-import\").default;\r\nconst Tapable = require(\"tapable\");\r\nconst json5 = require(\"json5\");\r\nconst BasicEvaluatedExpression = require(\"./BasicEvaluatedExpression\");\r\n\r\nfunction joinRanges(startRange, endRange) {\r\n\tif(!endRange) return startRange;\r\n\tif(!startRange) return endRange;\r\n\treturn [startRange[0], endRange[1]];\r\n}\r\n\r\nconst POSSIBLE_AST_OPTIONS = [{\r\n\tranges: true,\r\n\tlocations: true,\r\n\tecmaVersion: 2017,\r\n\tsourceType: \"module\",\r\n\tplugins: {\r\n\t\tdynamicImport: true\r\n\t}\r\n}, {\r\n\tranges: true,\r\n\tlocations: true,\r\n\tecmaVersion: 2017,\r\n\tsourceType: \"script\",\r\n\tplugins: {\r\n\t\tdynamicImport: true\r\n\t}\r\n}];\r\n\r\nclass Parser extends Tapable {\r\n\tconstructor(options) {\r\n\t\tsuper();\r\n\t\tthis.options = options;\r\n\t\tthis.scope = undefined;\r\n\t\tthis.state = undefined;\r\n\t\tthis.comments = undefined;\r\n\t\tthis.initializeEvaluating();\r\n\t}\r\n\r\n\tinitializeEvaluating() {\r\n\t\tthis.plugin(\"evaluate Literal\", expr => {\r\n\t\t\tswitch(typeof expr.value) {\r\n\t\t\t\tcase \"number\":\r\n\t\t\t\t\treturn new BasicEvaluatedExpression().setNumber(expr.value).setRange(expr.range);\r\n\t\t\t\tcase \"string\":\r\n\t\t\t\t\treturn new BasicEvaluatedExpression().setString(expr.value).setRange(expr.range);\r\n\t\t\t\tcase \"boolean\":\r\n\t\t\t\t\treturn new BasicEvaluatedExpression().setBoolean(expr.value).setRange(expr.range);\r\n\t\t\t}\r\n\t\t\tif(expr.value === null)\r\n\t\t\t\treturn new BasicEvaluatedExpression().setNull().setRange(expr.range);\r\n\t\t\tif(expr.value instanceof RegExp)\r\n\t\t\t\treturn new BasicEvaluatedExpression().setRegExp(expr.value).setRange(expr.range);\r\n\t\t});\r\n\t\tthis.plugin(\"evaluate LogicalExpression\", function(expr) {\r\n\t\t\tlet left;\r\n\t\t\tlet leftAsBool;\r\n\t\t\tlet right;\r\n\t\t\tif(expr.operator === \"&&\") {\r\n\t\t\t\tleft = this.evaluateExpression(expr.left);\r\n\t\t\t\tleftAsBool = left && left.asBool();\r\n\t\t\t\tif(leftAsBool === false) return left.setRange(expr.range);\r\n\t\t\t\tif(leftAsBool !== true) return;\r\n\t\t\t\tright = this.evaluateExpression(expr.right);\r\n\t\t\t\treturn right.setRange(expr.range);\r\n\t\t\t} else if(expr.operator === \"||\") {\r\n\t\t\t\tleft = this.evaluateExpression(expr.left);\r\n\t\t\t\tleftAsBool = left && left.asBool();\r\n\t\t\t\tif(leftAsBool === true) return left.setRange(expr.range);\r\n\t\t\t\tif(leftAsBool !== false) return;\r\n\t\t\t\tright = this.evaluateExpression(expr.right);\r\n\t\t\t\treturn right.setRange(expr.range);\r\n\t\t\t}\r\n\t\t});\r\n\t\tthis.plugin(\"evaluate BinaryExpression\", function(expr) {\r\n\t\t\tlet left;\r\n\t\t\tlet right;\r\n\t\t\tlet res;\r\n\t\t\tif(expr.operator === \"+\") {\r\n\t\t\t\tleft = this.evaluateExpression(expr.left);\r\n\t\t\t\tright = this.evaluateExpression(expr.right);\r\n\t\t\t\tif(!left || !right) return;\r\n\t\t\t\tres = new BasicEvaluatedExpression();\r\n\t\t\t\tif(left.isString()) {\r\n\t\t\t\t\tif(right.isString()) {\r\n\t\t\t\t\t\tres.setString(left.string + right.string);\r\n\t\t\t\t\t} else if(right.isNumber()) {\r\n\t\t\t\t\t\tres.setString(left.string + right.number);\r\n\t\t\t\t\t} else if(right.isWrapped() && right.prefix && right.prefix.isString()) {\r\n\t\t\t\t\t\tres.setWrapped(\r\n\t\t\t\t\t\t\tnew BasicEvaluatedExpression()\r\n\t\t\t\t\t\t\t.setString(left.string + right.prefix.string)\r\n\t\t\t\t\t\t\t.setRange(joinRanges(left.range, right.prefix.range)),\r\n\t\t\t\t\t\t\tright.postfix);\r\n\t\t\t\t\t} else if(right.isWrapped()) {\r\n\t\t\t\t\t\tres.setWrapped(\r\n\t\t\t\t\t\t\tnew BasicEvaluatedExpression()\r\n\t\t\t\t\t\t\t.setString(left.string)\r\n\t\t\t\t\t\t\t.setRange(left.range),\r\n\t\t\t\t\t\t\tright.postfix);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tres.setWrapped(left, null);\r\n\t\t\t\t\t}\r\n\t\t\t\t} else if(left.isNumber()) {\r\n\t\t\t\t\tif(right.isString()) {\r\n\t\t\t\t\t\tres.setString(left.number + right.string);\r\n\t\t\t\t\t} else if(right.isNumber()) {\r\n\t\t\t\t\t\tres.setNumber(left.number + right.number);\r\n\t\t\t\t\t}\r\n\t\t\t\t} else if(left.isWrapped()) {\r\n\t\t\t\t\tif(left.postfix && left.postfix.isString() && right.isString()) {\r\n\t\t\t\t\t\tres.setWrapped(left.prefix,\r\n\t\t\t\t\t\t\tnew BasicEvaluatedExpression()\r\n\t\t\t\t\t\t\t.setString(left.postfix.string + right.string)\r\n\t\t\t\t\t\t\t.setRange(joinRanges(left.postfix.range, right.range))\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t} else if(left.postfix && left.postfix.isString() && right.isNumber()) {\r\n\t\t\t\t\t\tres.setWrapped(left.prefix,\r\n\t\t\t\t\t\t\tnew BasicEvaluatedExpression()\r\n\t\t\t\t\t\t\t.setString(left.postfix.string + right.number)\r\n\t\t\t\t\t\t\t.setRange(joinRanges(left.postfix.range, right.range))\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t} else if(right.isString()) {\r\n\t\t\t\t\t\tres.setWrapped(left.prefix, right);\r\n\t\t\t\t\t} else if(right.isNumber()) {\r\n\t\t\t\t\t\tres.setWrapped(left.prefix,\r\n\t\t\t\t\t\t\tnew BasicEvaluatedExpression()\r\n\t\t\t\t\t\t\t.setString(right.number + \"\")\r\n\t\t\t\t\t\t\t.setRange(right.range));\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tres.setWrapped(left.prefix, new BasicEvaluatedExpression());\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tif(right.isString()) {\r\n\t\t\t\t\t\tres.setWrapped(null, right);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tres.setRange(expr.range);\r\n\t\t\t\treturn res;\r\n\t\t\t} else if(expr.operator === \"-\") {\r\n\t\t\t\tleft = this.evaluateExpression(expr.left);\r\n\t\t\t\tright = this.evaluateExpression(expr.right);\r\n\t\t\t\tif(!left || !right) return;\r\n\t\t\t\tif(!left.isNumber() || !right.isNumber()) return;\r\n\t\t\t\tres = new BasicEvaluatedExpression();\r\n\t\t\t\tres.setNumber(left.number - right.number);\r\n\t\t\t\tres.setRange(expr.range);\r\n\t\t\t\treturn res;\r\n\t\t\t} else if(expr.operator === \"*\") {\r\n\t\t\t\tleft = this.evaluateExpression(expr.left);\r\n\t\t\t\tright = this.evaluateExpression(expr.right);\r\n\t\t\t\tif(!left || !right) return;\r\n\t\t\t\tif(!left.isNumber() || !right.isNumber()) return;\r\n\t\t\t\tres = new BasicEvaluatedExpression();\r\n\t\t\t\tres.setNumber(left.number * right.number);\r\n\t\t\t\tres.setRange(expr.range);\r\n\t\t\t\treturn res;\r\n\t\t\t} else if(expr.operator === \"/\") {\r\n\t\t\t\tleft = this.evaluateExpression(expr.left);\r\n\t\t\t\tright = this.evaluateExpression(expr.right);\r\n\t\t\t\tif(!left || !right) return;\r\n\t\t\t\tif(!left.isNumber() || !right.isNumber()) return;\r\n\t\t\t\tres = new BasicEvaluatedExpression();\r\n\t\t\t\tres.setNumber(left.number / right.number);\r\n\t\t\t\tres.setRange(expr.range);\r\n\t\t\t\treturn res;\r\n\t\t\t} else if(expr.operator === \"==\" || expr.operator === \"===\") {\r\n\t\t\t\tleft = this.evaluateExpression(expr.left);\r\n\t\t\t\tright = this.evaluateExpression(expr.right);\r\n\t\t\t\tif(!left || !right) return;\r\n\t\t\t\tres = new BasicEvaluatedExpression();\r\n\t\t\t\tres.setRange(expr.range);\r\n\t\t\t\tif(left.isString() && right.isString()) {\r\n\t\t\t\t\treturn res.setBoolean(left.string === right.string);\r\n\t\t\t\t} else if(left.isNumber() && right.isNumber()) {\r\n\t\t\t\t\treturn res.setBoolean(left.number === right.number);\r\n\t\t\t\t} else if(left.isBoolean() && right.isBoolean()) {\r\n\t\t\t\t\treturn res.setBoolean(left.bool === right.bool);\r\n\t\t\t\t}\r\n\t\t\t} else if(expr.operator === \"!=\" || expr.operator === \"!==\") {\r\n\t\t\t\tleft = this.evaluateExpression(expr.left);\r\n\t\t\t\tright = this.evaluateExpression(expr.right);\r\n\t\t\t\tif(!left || !right) return;\r\n\t\t\t\tres = new BasicEvaluatedExpression();\r\n\t\t\t\tres.setRange(expr.range);\r\n\t\t\t\tif(left.isString() && right.isString()) {\r\n\t\t\t\t\treturn res.setBoolean(left.string !== right.string);\r\n\t\t\t\t} else if(left.isNumber() && right.isNumber()) {\r\n\t\t\t\t\treturn res.setBoolean(left.number !== right.number);\r\n\t\t\t\t} else if(left.isBoolean() && right.isBoolean()) {\r\n\t\t\t\t\treturn res.setBoolean(left.bool !== right.bool);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\t\tthis.plugin(\"evaluate UnaryExpression\", function(expr) {\r\n\t\t\tif(expr.operator === \"typeof\") {\r\n\t\t\t\tlet res;\r\n\t\t\t\tlet name;\r\n\t\t\t\tif(expr.argument.type === \"Identifier\") {\r\n\t\t\t\t\tname = this.scope.renames[\"$\" + expr.argument.name] || expr.argument.name;\r\n\t\t\t\t\tif(this.scope.definitions.indexOf(name) === -1) {\r\n\t\t\t\t\t\tres = this.applyPluginsBailResult1(\"evaluate typeof \" + name, expr);\r\n\t\t\t\t\t\tif(res !== undefined) return res;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tif(expr.argument.type === \"MemberExpression\") {\r\n\t\t\t\t\tlet expression = expr.argument;\r\n\t\t\t\t\tlet exprName = [];\r\n\t\t\t\t\twhile(expression.type === \"MemberExpression\" && !expression.computed) {\r\n\t\t\t\t\t\texprName.unshift(this.scope.renames[\"$\" + expression.property.name] || expression.property.name);\r\n\t\t\t\t\t\texpression = expression.object;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif(expression.type === \"Identifier\") {\r\n\t\t\t\t\t\texprName.unshift(this.scope.renames[\"$\" + expression.name] || expression.name);\r\n\t\t\t\t\t\tif(this.scope.definitions.indexOf(name) === -1) {\r\n\t\t\t\t\t\t\texprName = exprName.join(\".\");\r\n\t\t\t\t\t\t\tres = this.applyPluginsBailResult1(\"evaluate typeof \" + exprName, expr);\r\n\t\t\t\t\t\t\tif(res !== undefined) return res;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tif(expr.argument.type === \"FunctionExpression\") {\r\n\t\t\t\t\treturn new BasicEvaluatedExpression().setString(\"function\").setRange(expr.range);\r\n\t\t\t\t}\r\n\t\t\t\tconst arg = this.evaluateExpression(expr.argument);\r\n\t\t\t\tif(arg.isString() || arg.isWrapped()) return new BasicEvaluatedExpression().setString(\"string\").setRange(expr.range);\r\n\t\t\t\telse if(arg.isNumber()) return new BasicEvaluatedExpression().setString(\"number\").setRange(expr.range);\r\n\t\t\t\telse if(arg.isBoolean()) return new BasicEvaluatedExpression().setString(\"boolean\").setRange(expr.range);\r\n\t\t\t\telse if(arg.isArray() || arg.isConstArray() || arg.isRegExp()) return new BasicEvaluatedExpression().setString(\"object\").setRange(expr.range);\r\n\t\t\t} else if(expr.operator === \"!\") {\r\n\t\t\t\tconst argument = this.evaluateExpression(expr.argument);\r\n\t\t\t\tif(!argument) return;\r\n\t\t\t\tif(argument.isBoolean()) {\r\n\t\t\t\t\treturn new BasicEvaluatedExpression().setBoolean(!argument.bool).setRange(expr.range);\r\n\t\t\t\t} else if(argument.isString()) {\r\n\t\t\t\t\treturn new BasicEvaluatedExpression().setBoolean(!argument.string).setRange(expr.range);\r\n\t\t\t\t} else if(argument.isNumber()) {\r\n\t\t\t\t\treturn new BasicEvaluatedExpression().setBoolean(!argument.number).setRange(expr.range);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\t\tthis.plugin(\"evaluate typeof undefined\", function(expr) {\r\n\t\t\treturn new BasicEvaluatedExpression().setString(\"undefined\").setRange(expr.range);\r\n\t\t});\r\n\t\tthis.plugin(\"evaluate Identifier\", function(expr) {\r\n\t\t\tconst name = this.scope.renames[\"$\" + expr.name] || expr.name;\r\n\t\t\tif(this.scope.definitions.indexOf(expr.name) === -1) {\r\n\t\t\t\tconst result = this.applyPluginsBailResult1(\"evaluate Identifier \" + name, expr);\r\n\t\t\t\tif(result) return result;\r\n\t\t\t\treturn new BasicEvaluatedExpression().setIdentifier(name).setRange(expr.range);\r\n\t\t\t} else {\r\n\t\t\t\treturn this.applyPluginsBailResult1(\"evaluate defined Identifier \" + name, expr);\r\n\t\t\t}\r\n\t\t});\r\n\t\tthis.plugin(\"evaluate MemberExpression\", function(expression) {\r\n\t\t\tlet expr = expression;\r\n\t\t\tlet exprName = [];\r\n\t\t\twhile(expr.type === \"MemberExpression\" && expr.property.type === (expr.computed ? \"Literal\" : \"Identifier\")) {\r\n\t\t\t\texprName.unshift(expr.property.name || expr.property.value);\r\n\t\t\t\texpr = expr.object;\r\n\t\t\t}\r\n\t\t\tif(expr.type === \"Identifier\") {\r\n\t\t\t\tconst name = this.scope.renames[\"$\" + expr.name] || expr.name;\r\n\t\t\t\tif(this.scope.definitions.indexOf(name) === -1) {\r\n\t\t\t\t\texprName.unshift(name);\r\n\t\t\t\t\texprName = exprName.join(\".\");\r\n\t\t\t\t\tif(this.scope.definitions.indexOf(expr.name) === -1) {\r\n\t\t\t\t\t\tconst result = this.applyPluginsBailResult1(\"evaluate Identifier \" + exprName, expression);\r\n\t\t\t\t\t\tif(result) return result;\r\n\t\t\t\t\t\treturn new BasicEvaluatedExpression().setIdentifier(exprName).setRange(expression.range);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\treturn this.applyPluginsBailResult1(\"evaluate defined Identifier \" + exprName, expression);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\t\tthis.plugin(\"evaluate CallExpression\", function(expr) {\r\n\t\t\tif(expr.callee.type !== \"MemberExpression\") return;\r\n\t\t\tif(expr.callee.property.type !== (expr.callee.computed ? \"Literal\" : \"Identifier\")) return;\r\n\t\t\tconst param = this.evaluateExpression(expr.callee.object);\r\n\t\t\tif(!param) return;\r\n\t\t\tconst property = expr.callee.property.name || expr.callee.property.value;\r\n\t\t\treturn this.applyPluginsBailResult(\"evaluate CallExpression .\" + property, expr, param);\r\n\t\t});\r\n\t\tthis.plugin(\"evaluate CallExpression .replace\", function(expr, param) {\r\n\t\t\tif(!param.isString()) return;\r\n\t\t\tif(expr.arguments.length !== 2) return;\r\n\t\t\tlet arg1 = this.evaluateExpression(expr.arguments[0]);\r\n\t\t\tlet arg2 = this.evaluateExpression(expr.arguments[1]);\r\n\t\t\tif(!arg1.isString() && !arg1.isRegExp()) return;\r\n\t\t\targ1 = arg1.regExp || arg1.string;\r\n\t\t\tif(!arg2.isString()) return;\r\n\t\t\targ2 = arg2.string;\r\n\t\t\treturn new BasicEvaluatedExpression().setString(param.string.replace(arg1, arg2)).setRange(expr.range);\r\n\t\t});\r\n\t\t[\"substr\", \"substring\"].forEach(fn => {\r\n\t\t\tthis.plugin(\"evaluate CallExpression .\" + fn, function(expr, param) {\r\n\t\t\t\tif(!param.isString()) return;\r\n\t\t\t\tlet arg1;\r\n\t\t\t\tlet result, str = param.string;\r\n\t\t\t\tswitch(expr.arguments.length) {\r\n\t\t\t\t\tcase 1:\r\n\t\t\t\t\t\targ1 = this.evaluateExpression(expr.arguments[0]);\r\n\t\t\t\t\t\tif(!arg1.isNumber()) return;\r\n\t\t\t\t\t\tresult = str[fn](arg1.number);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 2:\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\targ1 = this.evaluateExpression(expr.arguments[0]);\r\n\t\t\t\t\t\t\tconst arg2 = this.evaluateExpression(expr.arguments[1]);\r\n\t\t\t\t\t\t\tif(!arg1.isNumber()) return;\r\n\t\t\t\t\t\t\tif(!arg2.isNumber()) return;\r\n\t\t\t\t\t\t\tresult = str[fn](arg1.number, arg2.number);\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\tdefault:\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\treturn new BasicEvaluatedExpression().setString(result).setRange(expr.range);\r\n\t\t\t});\r\n\r\n\t\t\t/**\r\n\t\t\t * @param {string} kind \"cooked\" | \"raw\"\r\n\t\t\t * @param {any[]} quasis quasis\r\n\t\t\t * @param {any[]} expressions expressions\r\n\t\t\t * @return {BasicEvaluatedExpression[]} Simplified template\r\n\t\t\t */\r\n\t\t\tfunction getSimplifiedTemplateResult(kind, quasis, expressions) {\r\n\t\t\t\tconst parts = [];\r\n\r\n\t\t\t\tfor(let i = 0; i < quasis.length; i++) {\r\n\t\t\t\t\tparts.push(new BasicEvaluatedExpression().setString(quasis[i].value[kind]).setRange(quasis[i].range));\r\n\r\n\t\t\t\t\tif(i > 0) {\r\n\t\t\t\t\t\tconst prevExpr = parts[parts.length - 2],\r\n\t\t\t\t\t\t\tlastExpr = parts[parts.length - 1];\r\n\t\t\t\t\t\tconst expr = this.evaluateExpression(expressions[i - 1]);\r\n\t\t\t\t\t\tif(!(expr.isString() || expr.isNumber())) continue;\r\n\r\n\t\t\t\t\t\tprevExpr.setString(prevExpr.string + (expr.isString() ? expr.string : expr.number) + lastExpr.string);\r\n\t\t\t\t\t\tprevExpr.setRange([prevExpr.range[0], lastExpr.range[1]]);\r\n\t\t\t\t\t\tparts.pop();\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\treturn parts;\r\n\t\t\t}\r\n\r\n\t\t\tthis.plugin(\"evaluate TemplateLiteral\", function(node) {\r\n\t\t\t\tconst parts = getSimplifiedTemplateResult.call(this, \"cooked\", node.quasis, node.expressions);\r\n\t\t\t\tif(parts.length === 1) {\r\n\t\t\t\t\treturn parts[0].setRange(node.range);\r\n\t\t\t\t}\r\n\t\t\t\treturn new BasicEvaluatedExpression().setTemplateString(parts).setRange(node.range);\r\n\t\t\t});\r\n\t\t\tthis.plugin(\"evaluate TaggedTemplateExpression\", function(node) {\r\n\t\t\t\tif(this.evaluateExpression(node.tag).identifier !== \"String.raw\") return;\r\n\t\t\t\tconst parts = getSimplifiedTemplateResult.call(this, \"raw\", node.quasi.quasis, node.quasi.expressions);\r\n\t\t\t\treturn new BasicEvaluatedExpression().setTemplateString(parts).setRange(node.range);\r\n\t\t\t});\r\n\t\t});\r\n\t\tthis.plugin(\"evaluate CallExpression .split\", function(expr, param) {\r\n\t\t\tif(!param.isString()) return;\r\n\t\t\tif(expr.arguments.length !== 1) return;\r\n\t\t\tlet result;\r\n\t\t\tconst arg = this.evaluateExpression(expr.arguments[0]);\r\n\t\t\tif(arg.isString()) {\r\n\t\t\t\tresult = param.string.split(arg.string);\r\n\t\t\t} else if(arg.isRegExp()) {\r\n\t\t\t\tresult = param.string.split(arg.regExp);\r\n\t\t\t} else return;\r\n\t\t\treturn new BasicEvaluatedExpression().setArray(result).setRange(expr.range);\r\n\t\t});\r\n\t\tthis.plugin(\"evaluate ConditionalExpression\", function(expr) {\r\n\t\t\tconst condition = this.evaluateExpression(expr.test);\r\n\t\t\tconst conditionValue = condition.asBool();\r\n\t\t\tlet res;\r\n\t\t\tif(conditionValue === undefined) {\r\n\t\t\t\tconst consequent = this.evaluateExpression(expr.consequent);\r\n\t\t\t\tconst alternate = this.evaluateExpression(expr.alternate);\r\n\t\t\t\tif(!consequent || !alternate) return;\r\n\t\t\t\tres = new BasicEvaluatedExpression();\r\n\t\t\t\tif(consequent.isConditional())\r\n\t\t\t\t\tres.setOptions(consequent.options);\r\n\t\t\t\telse\r\n\t\t\t\t\tres.setOptions([consequent]);\r\n\t\t\t\tif(alternate.isConditional())\r\n\t\t\t\t\tres.addOptions(alternate.options);\r\n\t\t\t\telse\r\n\t\t\t\t\tres.addOptions([alternate]);\r\n\t\t\t} else {\r\n\t\t\t\tres = this.evaluateExpression(conditionValue ? expr.consequent : expr.alternate);\r\n\t\t\t}\r\n\t\t\tres.setRange(expr.range);\r\n\t\t\treturn res;\r\n\t\t});\r\n\t\tthis.plugin(\"evaluate ArrayExpression\", function(expr) {\r\n\t\t\tconst items = expr.elements.map(function(element) {\r\n\t\t\t\treturn element !== null && this.evaluateExpression(element);\r\n\t\t\t}, this);\r\n\t\t\tif(!items.every(Boolean)) return;\r\n\t\t\treturn new BasicEvaluatedExpression().setItems(items).setRange(expr.range);\r\n\t\t});\r\n\t}\r\n\r\n\tgetRenameIdentifier(expr) {\r\n\t\tconst result = this.evaluateExpression(expr);\r\n\t\tif(!result) return;\r\n\t\tif(result.isIdentifier()) return result.identifier;\r\n\t\treturn;\r\n\t}\r\n\r\n\twalkClass(classy) {\r\n\t\tif(classy.superClass)\r\n\t\t\tthis.walkExpression(classy.superClass);\r\n\t\tif(classy.body && classy.body.type === \"ClassBody\") {\r\n\t\t\tclassy.body.body.forEach(methodDefinition => {\r\n\t\t\t\tif(methodDefinition.type === \"MethodDefinition\")\r\n\t\t\t\t\tthis.walkMethodDefinition(methodDefinition);\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\twalkMethodDefinition(methodDefinition) {\r\n\t\tif(methodDefinition.computed && methodDefinition.key)\r\n\t\t\tthis.walkExpression(methodDefinition.key);\r\n\t\tif(methodDefinition.value)\r\n\t\t\tthis.walkExpression(methodDefinition.value);\r\n\t}\r\n\r\n\t// Prewalking iterates the scope for variable declarations\r\n\tprewalkStatements(statements) {\r\n\t\tfor(let index = 0, len = statements.length; index < len; index++) {\r\n\t\t\tconst statement = statements[index];\r\n\t\t\tthis.prewalkStatement(statement);\r\n\t\t}\r\n\t}\r\n\r\n\t// Walking iterates the statements and expressions and processes them\r\n\twalkStatements(statements) {\r\n\t\tfor(let index = 0, len = statements.length; index < len; index++) {\r\n\t\t\tconst statement = statements[index];\r\n\t\t\tthis.walkStatement(statement);\r\n\t\t}\r\n\t}\r\n\r\n\tprewalkStatement(statement) {\r\n\t\tconst handler = this[\"prewalk\" + statement.type];\r\n\t\tif(handler)\r\n\t\t\thandler.call(this, statement);\r\n\t}\r\n\r\n\twalkStatement(statement) {\r\n\t\tif(this.applyPluginsBailResult1(\"statement\", statement) !== undefined) return;\r\n\t\tconst handler = this[\"walk\" + statement.type];\r\n\t\tif(handler)\r\n\t\t\thandler.call(this, statement);\r\n\t}\r\n\r\n\t// Real Statements\r\n\tprewalkBlockStatement(statement) {\r\n\t\tthis.prewalkStatements(statement.body);\r\n\t}\r\n\r\n\twalkBlockStatement(statement) {\r\n\t\tthis.walkStatements(statement.body);\r\n\t}\r\n\r\n\twalkExpressionStatement(statement) {\r\n\t\tthis.walkExpression(statement.expression);\r\n\t}\r\n\r\n\tprewalkIfStatement(statement) {\r\n\t\tthis.prewalkStatement(statement.consequent);\r\n\t\tif(statement.alternate)\r\n\t\t\tthis.prewalkStatement(statement.alternate);\r\n\t}\r\n\r\n\twalkIfStatement(statement) {\r\n\t\tconst result = this.applyPluginsBailResult1(\"statement if\", statement);\r\n\t\tif(result === undefined) {\r\n\t\t\tthis.walkExpression(statement.test);\r\n\t\t\tthis.walkStatement(statement.consequent);\r\n\t\t\tif(statement.alternate)\r\n\t\t\t\tthis.walkStatement(statement.alternate);\r\n\t\t} else {\r\n\t\t\tif(result)\r\n\t\t\t\tthis.walkStatement(statement.consequent);\r\n\t\t\telse if(statement.alternate)\r\n\t\t\t\tthis.walkStatement(statement.alternate);\r\n\t\t}\r\n\t}\r\n\r\n\tprewalkLabeledStatement(statement) {\r\n\t\tthis.prewalkStatement(statement.body);\r\n\t}\r\n\r\n\twalkLabeledStatement(statement) {\r\n\t\tconst result = this.applyPluginsBailResult1(\"label \" + statement.label.name, statement);\r\n\t\tif(result !== true)\r\n\t\t\tthis.walkStatement(statement.body);\r\n\t}\r\n\r\n\tprewalkWithStatement(statement) {\r\n\t\tthis.prewalkStatement(statement.body);\r\n\t}\r\n\r\n\twalkWithStatement(statement) {\r\n\t\tthis.walkExpression(statement.object);\r\n\t\tthis.walkStatement(statement.body);\r\n\t}\r\n\r\n\tprewalkSwitchStatement(statement) {\r\n\t\tthis.prewalkSwitchCases(statement.cases);\r\n\t}\r\n\r\n\twalkSwitchStatement(statement) {\r\n\t\tthis.walkExpression(statement.discriminant);\r\n\t\tthis.walkSwitchCases(statement.cases);\r\n\t}\r\n\r\n\twalkTerminatingStatement(statement) {\r\n\t\tif(statement.argument)\r\n\t\t\tthis.walkExpression(statement.argument);\r\n\t}\r\n\r\n\twalkReturnStatement(statement) {\r\n\t\tthis.walkTerminatingStatement(statement);\r\n\t}\r\n\r\n\twalkThrowStatement(statement) {\r\n\t\tthis.walkTerminatingStatement(statement);\r\n\t}\r\n\r\n\tprewalkTryStatement(statement) {\r\n\t\tthis.prewalkStatement(statement.block);\r\n\t}\r\n\r\n\twalkTryStatement(statement) {\r\n\t\tif(this.scope.inTry) {\r\n\t\t\tthis.walkStatement(statement.block);\r\n\t\t} else {\r\n\t\t\tthis.scope.inTry = true;\r\n\t\t\tthis.walkStatement(statement.block);\r\n\t\t\tthis.scope.inTry = false;\r\n\t\t}\r\n\t\tif(statement.handler)\r\n\t\t\tthis.walkCatchClause(statement.handler);\r\n\t\tif(statement.finalizer)\r\n\t\t\tthis.walkStatement(statement.finalizer);\r\n\t}\r\n\r\n\tprewalkWhileStatement(statement) {\r\n\t\tthis.prewalkStatement(statement.body);\r\n\t}\r\n\r\n\twalkWhileStatement(statement) {\r\n\t\tthis.walkExpression(statement.test);\r\n\t\tthis.walkStatement(statement.body);\r\n\t}\r\n\r\n\tprewalkDoWhileStatement(statement) {\r\n\t\tthis.prewalkStatement(statement.body);\r\n\t}\r\n\r\n\twalkDoWhileStatement(statement) {\r\n\t\tthis.walkStatement(statement.body);\r\n\t\tthis.walkExpression(statement.test);\r\n\t}\r\n\r\n\tprewalkForStatement(statement) {\r\n\t\tif(statement.init) {\r\n\t\t\tif(statement.init.type === \"VariableDeclaration\")\r\n\t\t\t\tthis.prewalkStatement(statement.init);\r\n\t\t}\r\n\t\tthis.prewalkStatement(statement.body);\r\n\t}\r\n\r\n\twalkForStatement(statement) {\r\n\t\tif(statement.init) {\r\n\t\t\tif(statement.init.type === \"VariableDeclaration\")\r\n\t\t\t\tthis.walkStatement(statement.init);\r\n\t\t\telse\r\n\t\t\t\tthis.walkExpression(statement.init);\r\n\t\t}\r\n\t\tif(statement.test)\r\n\t\t\tthis.walkExpression(statement.test);\r\n\t\tif(statement.update)\r\n\t\t\tthis.walkExpression(statement.update);\r\n\t\tthis.walkStatement(statement.body);\r\n\t}\r\n\r\n\tprewalkForInStatement(statement) {\r\n\t\tif(statement.left.type === \"VariableDeclaration\")\r\n\t\t\tthis.prewalkStatement(statement.left);\r\n\t\tthis.prewalkStatement(statement.body);\r\n\t}\r\n\r\n\twalkForInStatement(statement) {\r\n\t\tif(statement.left.type === \"VariableDeclaration\")\r\n\t\t\tthis.walkStatement(statement.left);\r\n\t\telse\r\n\t\t\tthis.walkExpression(statement.left);\r\n\t\tthis.walkExpression(statement.right);\r\n\t\tthis.walkStatement(statement.body);\r\n\t}\r\n\r\n\tprewalkForOfStatement(statement) {\r\n\t\tif(statement.left.type === \"VariableDeclaration\")\r\n\t\t\tthis.prewalkStatement(statement.left);\r\n\t\tthis.prewalkStatement(statement.body);\r\n\t}\r\n\r\n\twalkForOfStatement(statement) {\r\n\t\tif(statement.left.type === \"VariableDeclaration\")\r\n\t\t\tthis.walkStatement(statement.left);\r\n\t\telse\r\n\t\t\tthis.walkExpression(statement.left);\r\n\t\tthis.walkExpression(statement.right);\r\n\t\tthis.walkStatement(statement.body);\r\n\t}\r\n\r\n\t// Declarations\r\n\tprewalkFunctionDeclaration(statement) {\r\n\t\tif(statement.id) {\r\n\t\t\tthis.scope.renames[\"$\" + statement.id.name] = undefined;\r\n\t\t\tthis.scope.definitions.push(statement.id.name);\r\n\t\t}\r\n\t}\r\n\r\n\twalkFunctionDeclaration(statement) {\r\n\t\tthis.inScope(statement.params, function() {\r\n\t\t\tif(statement.body.type === \"BlockStatement\") {\r\n\t\t\t\tthis.prewalkStatement(statement.body);\r\n\t\t\t\tthis.walkStatement(statement.body);\r\n\t\t\t} else {\r\n\t\t\t\tthis.walkExpression(statement.body);\r\n\t\t\t}\r\n\t\t}.bind(this));\r\n\t}\r\n\r\n\tprewalkImportDeclaration(statement) {\r\n\t\tconst source = statement.source.value;\r\n\t\tthis.applyPluginsBailResult(\"import\", statement, source);\r\n\t\tstatement.specifiers.forEach(function(specifier) {\r\n\t\t\tconst name = specifier.local.name;\r\n\t\t\tthis.scope.renames[\"$\" + name] = undefined;\r\n\t\t\tthis.scope.definitions.push(name);\r\n\t\t\tswitch(specifier.type) {\r\n\t\t\t\tcase \"ImportDefaultSpecifier\":\r\n\t\t\t\t\tthis.applyPluginsBailResult(\"import specifier\", statement, source, \"default\", name);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"ImportSpecifier\":\r\n\t\t\t\t\tthis.applyPluginsBailResult(\"import specifier\", statement, source, specifier.imported.name, name);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"ImportNamespaceSpecifier\":\r\n\t\t\t\t\tthis.applyPluginsBailResult(\"import specifier\", statement, source, null, name);\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}, this);\r\n\t}\r\n\r\n\tprewalkExportNamedDeclaration(statement) {\r\n\t\tlet source;\r\n\t\tif(statement.source) {\r\n\t\t\tsource = statement.source.value;\r\n\t\t\tthis.applyPluginsBailResult(\"export import\", statement, source);\r\n\t\t} else {\r\n\t\t\tthis.applyPluginsBailResult1(\"export\", statement);\r\n\t\t}\r\n\t\tif(statement.declaration) {\r\n\t\t\tif(/Expression$/.test(statement.declaration.type)) {\r\n\t\t\t\tthrow new Error(\"Doesn't occur?\");\r\n\t\t\t} else {\r\n\t\t\t\tif(!this.applyPluginsBailResult(\"export declaration\", statement, statement.declaration)) {\r\n\t\t\t\t\tconst pos = this.scope.definitions.length;\r\n\t\t\t\t\tthis.prewalkStatement(statement.declaration);\r\n\t\t\t\t\tconst newDefs = this.scope.definitions.slice(pos);\r\n\t\t\t\t\tfor(let index = newDefs.length - 1; index >= 0; index--) {\r\n\t\t\t\t\t\tconst def = newDefs[index];\r\n\t\t\t\t\t\tthis.applyPluginsBailResult(\"export specifier\", statement, def, def, index);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tif(statement.specifiers) {\r\n\t\t\tfor(let specifierIndex = 0; specifierIndex < statement.specifiers.length; specifierIndex++) {\r\n\t\t\t\tconst specifier = statement.specifiers[specifierIndex];\r\n\t\t\t\tswitch(specifier.type) {\r\n\t\t\t\t\tcase \"ExportSpecifier\":\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tconst name = specifier.exported.name;\r\n\t\t\t\t\t\t\tif(source)\r\n\t\t\t\t\t\t\t\tthis.applyPluginsBailResult(\"export import specifier\", statement, source, specifier.local.name, name, specifierIndex);\r\n\t\t\t\t\t\t\telse\r\n\t\t\t\t\t\t\t\tthis.applyPluginsBailResult(\"export specifier\", statement, specifier.local.name, name, specifierIndex);\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\twalkExportNamedDeclaration(statement) {\r\n\t\tif(statement.declaration) {\r\n\t\t\tthis.walkStatement(statement.declaration);\r\n\t\t}\r\n\t}\r\n\r\n\tprewalkExportDefaultDeclaration(statement) {\r\n\t\tif(/Declaration$/.test(statement.declaration.type)) {\r\n\t\t\tconst pos = this.scope.definitions.length;\r\n\t\t\tthis.prewalkStatement(statement.declaration);\r\n\t\t\tconst newDefs = this.scope.definitions.slice(pos);\r\n\t\t\tfor(let index = 0, len = newDefs.length; index < len; index++) {\r\n\t\t\t\tconst def = newDefs[index];\r\n\t\t\t\tthis.applyPluginsBailResult(\"export specifier\", statement, def, \"default\");\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\twalkExportDefaultDeclaration(statement) {\r\n\t\tthis.applyPluginsBailResult1(\"export\", statement);\r\n\t\tif(/Declaration$/.test(statement.declaration.type)) {\r\n\t\t\tif(!this.applyPluginsBailResult(\"export declaration\", statement, statement.declaration)) {\r\n\t\t\t\tthis.walkStatement(statement.declaration);\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tthis.walkExpression(statement.declaration);\r\n\t\t\tif(!this.applyPluginsBailResult(\"export expression\", statement, statement.declaration)) {\r\n\t\t\t\tthis.applyPluginsBailResult(\"export specifier\", statement, statement.declaration, \"default\");\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tprewalkExportAllDeclaration(statement) {\r\n\t\tconst source = statement.source.value;\r\n\t\tthis.applyPluginsBailResult(\"export import\", statement, source);\r\n\t\tthis.applyPluginsBailResult(\"export import specifier\", statement, source, null, null, 0);\r\n\t}\r\n\r\n\tprewalkVariableDeclaration(statement) {\r\n\t\tif(statement.declarations)\r\n\t\t\tthis.prewalkVariableDeclarators(statement.declarations);\r\n\t}\r\n\r\n\twalkVariableDeclaration(statement) {\r\n\t\tif(statement.declarations)\r\n\t\t\tthis.walkVariableDeclarators(statement.declarations);\r\n\t}\r\n\r\n\tprewalkClassDeclaration(statement) {\r\n\t\tif(statement.id) {\r\n\t\t\tthis.scope.renames[\"$\" + statement.id.name] = undefined;\r\n\t\t\tthis.scope.definitions.push(statement.id.name);\r\n\t\t}\r\n\t}\r\n\r\n\twalkClassDeclaration(statement) {\r\n\t\tthis.walkClass(statement);\r\n\t}\r\n\r\n\tprewalkSwitchCases(switchCases) {\r\n\t\tfor(let index = 0, len = switchCases.length; index < len; index++) {\r\n\t\t\tconst switchCase = switchCases[index];\r\n\t\t\tthis.prewalkStatements(switchCase.consequent);\r\n\t\t}\r\n\t}\r\n\r\n\twalkSwitchCases(switchCases) {\r\n\t\tfor(let index = 0, len = switchCases.length; index < len; index++) {\r\n\t\t\tconst switchCase = switchCases[index];\r\n\r\n\t\t\tif(switchCase.test) {\r\n\t\t\t\tthis.walkExpression(switchCase.test);\r\n\t\t\t}\r\n\t\t\tthis.walkStatements(switchCase.consequent);\r\n\t\t}\r\n\t}\r\n\r\n\twalkCatchClause(catchClause) {\r\n\t\tthis.inScope([catchClause.param], function() {\r\n\t\t\tthis.prewalkStatement(catchClause.body);\r\n\t\t\tthis.walkStatement(catchClause.body);\r\n\t\t}.bind(this));\r\n\t}\r\n\r\n\tprewalkVariableDeclarators(declarators) {\r\n\t\tdeclarators.forEach(declarator => {\r\n\t\t\tswitch(declarator.type) {\r\n\t\t\t\tcase \"VariableDeclarator\":\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tconst renameIdentifier = declarator.init && this.getRenameIdentifier(declarator.init);\r\n\t\t\t\t\t\tif(renameIdentifier && declarator.id.type === \"Identifier\" && this.applyPluginsBailResult1(\"can-rename \" + renameIdentifier, declarator.init)) {\r\n\t\t\t\t\t\t\t// renaming with \"var a = b;\"\r\n\t\t\t\t\t\t\tif(!this.applyPluginsBailResult1(\"rename \" + renameIdentifier, declarator.init)) {\r\n\t\t\t\t\t\t\t\tthis.scope.renames[\"$\" + declarator.id.name] = this.scope.renames[\"$\" + renameIdentifier] || renameIdentifier;\r\n\t\t\t\t\t\t\t\tconst idx = this.scope.definitions.indexOf(declarator.id.name);\r\n\t\t\t\t\t\t\t\tif(idx >= 0) this.scope.definitions.splice(idx, 1);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tthis.enterPattern(declarator.id, (name, decl) => {\r\n\t\t\t\t\t\t\t\tif(!this.applyPluginsBailResult1(\"var-\" + declarator.kind + \" \" + name, decl)) {\r\n\t\t\t\t\t\t\t\t\tif(!this.applyPluginsBailResult1(\"var \" + name, decl)) {\r\n\t\t\t\t\t\t\t\t\t\tthis.scope.renames[\"$\" + name] = undefined;\r\n\t\t\t\t\t\t\t\t\t\tthis.scope.definitions.push(name);\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\twalkVariableDeclarators(declarators) {\r\n\t\tdeclarators.forEach(declarator => {\r\n\t\t\tswitch(declarator.type) {\r\n\t\t\t\tcase \"VariableDeclarator\":\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tconst renameIdentifier = declarator.init && this.getRenameIdentifier(declarator.init);\r\n\t\t\t\t\t\tif(!renameIdentifier || declarator.id.type !== \"Identifier\" || !this.applyPluginsBailResult1(\"can-rename \" + renameIdentifier, declarator.init)) {\r\n\t\t\t\t\t\t\tthis.walkPattern(declarator.id);\r\n\t\t\t\t\t\t\tif(declarator.init)\r\n\t\t\t\t\t\t\t\tthis.walkExpression(declarator.init);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\twalkPattern(pattern) {\r\n\t\tif(pattern.type === \"Identifier\")\r\n\t\t\treturn;\r\n\t\tif(this[\"walk\" + pattern.type])\r\n\t\t\tthis[\"walk\" + pattern.type](pattern);\r\n\t}\r\n\r\n\twalkObjectPattern(pattern) {\r\n\t\tfor(let i = 0, len = pattern.properties.length; i < len; i++) {\r\n\t\t\tconst prop = pattern.properties[i];\r\n\t\t\tif(prop) {\r\n\t\t\t\tif(prop.computed)\r\n\t\t\t\t\tthis.walkExpression(prop.key);\r\n\t\t\t\tif(prop.value)\r\n\t\t\t\t\tthis.walkPattern(prop.value);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\twalkArrayPattern(pattern) {\r\n\t\tfor(let i = 0, len = pattern.elements.length; i < len; i++) {\r\n\t\t\tconst element = pattern.elements[i];\r\n\t\t\tif(element)\r\n\t\t\t\tthis.walkPattern(element);\r\n\t\t}\r\n\t}\r\n\r\n\twalkRestElement(pattern) {\r\n\t\tthis.walkPattern(pattern.argument);\r\n\t}\r\n\r\n\twalkExpressions(expressions) {\r\n\t\tfor(let expressionsIndex = 0, len = expressions.length; expressionsIndex < len; expressionsIndex++) {\r\n\t\t\tconst expression = expressions[expressionsIndex];\r\n\t\t\tif(expression)\r\n\t\t\t\tthis.walkExpression(expression);\r\n\t\t}\r\n\t}\r\n\r\n\twalkExpression(expression) {\r\n\t\tif(this[\"walk\" + expression.type])\r\n\t\t\treturn this[\"walk\" + expression.type](expression);\r\n\t}\r\n\r\n\twalkAwaitExpression(expression) {\r\n\t\tconst argument = expression.argument;\r\n\t\tif(this[\"walk\" + argument.type])\r\n\t\t\treturn this[\"walk\" + argument.type](argument);\r\n\t}\r\n\r\n\twalkArrayExpression(expression) {\r\n\t\tif(expression.elements)\r\n\t\t\tthis.walkExpressions(expression.elements);\r\n\t}\r\n\r\n\twalkSpreadElement(expression) {\r\n\t\tif(expression.argument)\r\n\t\t\tthis.walkExpression(expression.argument);\r\n\t}\r\n\r\n\twalkObjectExpression(expression) {\r\n\t\tfor(let propIndex = 0, len = expression.properties.length; propIndex < len; propIndex++) {\r\n\t\t\tconst prop = expression.properties[propIndex];\r\n\t\t\tif(prop.computed)\r\n\t\t\t\tthis.walkExpression(prop.key);\r\n\t\t\tif(prop.shorthand)\r\n\t\t\t\tthis.scope.inShorthand = true;\r\n\t\t\tthis.walkExpression(prop.value);\r\n\t\t\tif(prop.shorthand)\r\n\t\t\t\tthis.scope.inShorthand = false;\r\n\t\t}\r\n\t}\r\n\r\n\twalkFunctionExpression(expression) {\r\n\t\tthis.inScope(expression.params, function() {\r\n\t\t\tif(expression.body.type === \"BlockStatement\") {\r\n\t\t\t\tthis.prewalkStatement(expression.body);\r\n\t\t\t\tthis.walkStatement(expression.body);\r\n\t\t\t} else {\r\n\t\t\t\tthis.walkExpression(expression.body);\r\n\t\t\t}\r\n\t\t}.bind(this));\r\n\t}\r\n\r\n\twalkArrowFunctionExpression(expression) {\r\n\t\tthis.inScope(expression.params, function() {\r\n\t\t\tif(expression.body.type === \"BlockStatement\") {\r\n\t\t\t\tthis.prewalkStatement(expression.body);\r\n\t\t\t\tthis.walkStatement(expression.body);\r\n\t\t\t} else {\r\n\t\t\t\tthis.walkExpression(expression.body);\r\n\t\t\t}\r\n\t\t}.bind(this));\r\n\t}\r\n\r\n\twalkSequenceExpression(expression) {\r\n\t\tif(expression.expressions)\r\n\t\t\tthis.walkExpressions(expression.expressions);\r\n\t}\r\n\r\n\twalkUpdateExpression(expression) {\r\n\t\tthis.walkExpression(expression.argument);\r\n\t}\r\n\r\n\twalkUnaryExpression(expression) {\r\n\t\tif(expression.operator === \"typeof\") {\r\n\t\t\tlet expr = expression.argument;\r\n\t\t\tlet exprName = [];\r\n\t\t\twhile(expr.type === \"MemberExpression\" && expr.property.type === (expr.computed ? \"Literal\" : \"Identifier\")) {\r\n\t\t\t\texprName.unshift(expr.property.name || expr.property.value);\r\n\t\t\t\texpr = expr.object;\r\n\t\t\t}\r\n\t\t\tif(expr.type === \"Identifier\" && this.scope.definitions.indexOf(expr.name) === -1) {\r\n\t\t\t\texprName.unshift(this.scope.renames[\"$\" + expr.name] || expr.name);\r\n\t\t\t\texprName = exprName.join(\".\");\r\n\t\t\t\tconst result = this.applyPluginsBailResult1(\"typeof \" + exprName, expression);\r\n\t\t\t\tif(result === true)\r\n\t\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis.walkExpression(expression.argument);\r\n\t}\r\n\r\n\twalkLeftRightExpression(expression) {\r\n\t\tthis.walkExpression(expression.left);\r\n\t\tthis.walkExpression(expression.right);\r\n\t}\r\n\r\n\twalkBinaryExpression(expression) {\r\n\t\tthis.walkLeftRightExpression(expression);\r\n\t}\r\n\r\n\twalkLogicalExpression(expression) {\r\n\t\tthis.walkLeftRightExpression(expression);\r\n\t}\r\n\r\n\twalkAssignmentExpression(expression) {\r\n\t\tconst renameIdentifier = this.getRenameIdentifier(expression.right);\r\n\t\tif(expression.left.type === \"Identifier\" && renameIdentifier && this.applyPluginsBailResult1(\"can-rename \" + renameIdentifier, expression.right)) {\r\n\t\t\t// renaming \"a = b;\"\r\n\t\t\tif(!this.applyPluginsBailResult1(\"rename \" + renameIdentifier, expression.right)) {\r\n\t\t\t\tthis.scope.renames[\"$\" + expression.left.name] = renameIdentifier;\r\n\t\t\t\tconst idx = this.scope.definitions.indexOf(expression.left.name);\r\n\t\t\t\tif(idx >= 0) this.scope.definitions.splice(idx, 1);\r\n\t\t\t}\r\n\t\t} else if(expression.left.type === \"Identifier\") {\r\n\t\t\tif(!this.applyPluginsBailResult1(\"assigned \" + expression.left.name, expression)) {\r\n\t\t\t\tthis.walkExpression(expression.right);\r\n\t\t\t}\r\n\t\t\tthis.scope.renames[\"$\" + expression.left.name] = undefined;\r\n\t\t\tif(!this.applyPluginsBailResult1(\"assign \" + expression.left.name, expression)) {\r\n\t\t\t\tthis.walkExpression(expression.left);\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tthis.walkExpression(expression.right);\r\n\t\t\tthis.scope.renames[\"$\" + expression.left.name] = undefined;\r\n\t\t\tthis.walkExpression(expression.left);\r\n\t\t}\r\n\t}\r\n\r\n\twalkConditionalExpression(expression) {\r\n\t\tconst result = this.applyPluginsBailResult1(\"expression ?:\", expression);\r\n\t\tif(result === undefined) {\r\n\t\t\tthis.walkExpression(expression.test);\r\n\t\t\tthis.walkExpression(expression.consequent);\r\n\t\t\tif(expression.alternate)\r\n\t\t\t\tthis.walkExpression(expression.alternate);\r\n\t\t} else {\r\n\t\t\tif(result)\r\n\t\t\t\tthis.walkExpression(expression.consequent);\r\n\t\t\telse if(expression.alternate)\r\n\t\t\t\tthis.walkExpression(expression.alternate);\r\n\t\t}\r\n\t}\r\n\r\n\twalkNewExpression(expression) {\r\n\t\tthis.walkExpression(expression.callee);\r\n\t\tif(expression.arguments)\r\n\t\t\tthis.walkExpressions(expression.arguments);\r\n\t}\r\n\r\n\twalkYieldExpression(expression) {\r\n\t\tif(expression.argument)\r\n\t\t\tthis.walkExpression(expression.argument);\r\n\t}\r\n\r\n\twalkTemplateLiteral(expression) {\r\n\t\tif(expression.expressions)\r\n\t\t\tthis.walkExpressions(expression.expressions);\r\n\t}\r\n\r\n\twalkTaggedTemplateExpression(expression) {\r\n\t\tif(expression.tag)\r\n\t\t\tthis.walkExpression(expression.tag);\r\n\t\tif(expression.quasi && expression.quasi.expressions)\r\n\t\t\tthis.walkExpressions(expression.quasi.expressions);\r\n\t}\r\n\r\n\twalkClassExpression(expression) {\r\n\t\tthis.walkClass(expression);\r\n\t}\r\n\r\n\twalkCallExpression(expression) {\r\n\t\tlet result;\r\n\r\n\t\tfunction walkIIFE(functionExpression, options) {\r\n\t\t\tconst params = functionExpression.params;\r\n\t\t\tconst args = options.map(function(arg) {\r\n\t\t\t\tconst renameIdentifier = this.getRenameIdentifier(arg);\r\n\t\t\t\tif(renameIdentifier && this.applyPluginsBailResult1(\"can-rename \" + renameIdentifier, arg)) {\r\n\t\t\t\t\tif(!this.applyPluginsBailResult1(\"rename \" + renameIdentifier, arg))\r\n\t\t\t\t\t\treturn renameIdentifier;\r\n\t\t\t\t}\r\n\t\t\t\tthis.walkExpression(arg);\r\n\t\t\t}, this);\r\n\t\t\tthis.inScope(params.filter(function(identifier, idx) {\r\n\t\t\t\treturn !args[idx];\r\n\t\t\t}), function() {\r\n\t\t\t\tfor(let i = 0; i < args.length; i++) {\r\n\t\t\t\t\tconst param = args[i];\r\n\t\t\t\t\tif(!param) continue;\r\n\t\t\t\t\tif(!params[i] || params[i].type !== \"Identifier\") continue;\r\n\t\t\t\t\tthis.scope.renames[\"$\" + params[i].name] = param;\r\n\t\t\t\t}\r\n\t\t\t\tif(functionExpression.body.type === \"BlockStatement\") {\r\n\t\t\t\t\tthis.prewalkStatement(functionExpression.body);\r\n\t\t\t\t\tthis.walkStatement(functionExpression.body);\r\n\t\t\t\t} else\r\n\t\t\t\t\tthis.walkExpression(functionExpression.body);\r\n\t\t\t}.bind(this));\r\n\t\t}\r\n\t\tif(expression.callee.type === \"MemberExpression\" &&\r\n\t\t\texpression.callee.object.type === \"FunctionExpression\" &&\r\n\t\t\t!expression.callee.computed &&\r\n\t\t\t([\"call\", \"bind\"]).indexOf(expression.callee.property.name) >= 0 &&\r\n\t\t\texpression.arguments &&\r\n\t\t\texpression.arguments.length > 1\r\n\t\t) {\r\n\t\t\t// (function(...) { }.call/bind(?, ...))\r\n\t\t\twalkIIFE.call(this, expression.callee.object, expression.arguments.slice(1));\r\n\t\t\tthis.walkExpression(expression.arguments[0]);\r\n\t\t} else if(expression.callee.type === \"FunctionExpression\" && expression.arguments) {\r\n\t\t\t// (function(...) { }(...))\r\n\t\t\twalkIIFE.call(this, expression.callee, expression.arguments);\r\n\t\t} else if(expression.callee.type === \"Import\") {\r\n\t\t\tresult = this.applyPluginsBailResult1(\"import-call\", expression);\r\n\t\t\tif(result === true)\r\n\t\t\t\treturn;\r\n\r\n\t\t\tif(expression.arguments)\r\n\t\t\t\tthis.walkExpressions(expression.arguments);\r\n\t\t} else {\r\n\r\n\t\t\tconst callee = this.evaluateExpression(expression.callee);\r\n\t\t\tif(callee.isIdentifier()) {\r\n\t\t\t\tresult = this.applyPluginsBailResult1(\"call \" + callee.identifier, expression);\r\n\t\t\t\tif(result === true)\r\n\t\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tif(expression.callee)\r\n\t\t\t\tthis.walkExpression(expression.callee);\r\n\t\t\tif(expression.arguments)\r\n\t\t\t\tthis.walkExpressions(expression.arguments);\r\n\t\t}\r\n\t}\r\n\r\n\twalkMemberExpression(expression) {\r\n\t\tlet expr = expression;\r\n\t\tlet exprName = [];\r\n\t\twhile(expr.type === \"MemberExpression\" && expr.property.type === (expr.computed ? \"Literal\" : \"Identifier\")) {\r\n\t\t\texprName.unshift(expr.property.name || expr.property.value);\r\n\t\t\texpr = expr.object;\r\n\t\t}\r\n\t\tif(expr.type === \"Identifier\" && this.scope.definitions.indexOf(expr.name) === -1) {\r\n\t\t\texprName.unshift(this.scope.renames[\"$\" + expr.name] || expr.name);\r\n\t\t\tlet result = this.applyPluginsBailResult1(\"expression \" + exprName.join(\".\"), expression);\r\n\t\t\tif(result === true)\r\n\t\t\t\treturn;\r\n\t\t\texprName[exprName.length - 1] = \"*\";\r\n\t\t\tresult = this.applyPluginsBailResult1(\"expression \" + exprName.join(\".\"), expression);\r\n\t\t\tif(result === true)\r\n\t\t\t\treturn;\r\n\t\t}\r\n\t\tthis.walkExpression(expression.object);\r\n\t\tif(expression.computed === true)\r\n\t\t\tthis.walkExpression(expression.property);\r\n\t}\r\n\r\n\twalkIdentifier(expression) {\r\n\t\tif(this.scope.definitions.indexOf(expression.name) === -1) {\r\n\t\t\tconst result = this.applyPluginsBailResult1(\"expression \" + (this.scope.renames[\"$\" + expression.name] || expression.name), expression);\r\n\t\t\tif(result === true)\r\n\t\t\t\treturn;\r\n\t\t}\r\n\t}\r\n\r\n\tinScope(params, fn) {\r\n\t\tconst oldScope = this.scope;\r\n\t\tthis.scope = {\r\n\t\t\tinTry: false,\r\n\t\t\tinShorthand: false,\r\n\t\t\tdefinitions: oldScope.definitions.slice(),\r\n\t\t\trenames: Object.create(oldScope.renames)\r\n\t\t};\r\n\r\n\t\tfor(let paramIndex = 0, len = params.length; paramIndex < len; paramIndex++) {\r\n\t\t\tconst param = params[paramIndex];\r\n\r\n\t\t\tif(typeof param !== \"string\") {\r\n\t\t\t\tthis.enterPattern(param, param => {\r\n\t\t\t\t\tthis.scope.renames[\"$\" + param] = undefined;\r\n\t\t\t\t\tthis.scope.definitions.push(param);\r\n\t\t\t\t});\r\n\t\t\t} else {\r\n\t\t\t\tthis.scope.renames[\"$\" + param] = undefined;\r\n\t\t\t\tthis.scope.definitions.push(param);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfn();\r\n\t\tthis.scope = oldScope;\r\n\t}\r\n\r\n\tenterPattern(pattern, onIdent) {\r\n\t\tif(pattern && this[\"enter\" + pattern.type])\r\n\t\t\tthis[\"enter\" + pattern.type](pattern, onIdent);\r\n\t}\r\n\r\n\tenterIdentifier(pattern, onIdent) {\r\n\t\tonIdent(pattern.name, pattern);\r\n\t}\r\n\r\n\tenterObjectPattern(pattern, onIdent) {\r\n\t\tfor(let propIndex = 0, len = pattern.properties.length; propIndex < len; propIndex++) {\r\n\t\t\tconst prop = pattern.properties[propIndex];\r\n\t\t\tthis.enterPattern(prop.value, onIdent);\r\n\t\t}\r\n\t}\r\n\r\n\tenterArrayPattern(pattern, onIdent) {\r\n\t\tfor(let elementIndex = 0, len = pattern.elements.length; elementIndex < len; elementIndex++) {\r\n\t\t\tconst element = pattern.elements[elementIndex];\r\n\t\t\tthis.enterPattern(element, onIdent);\r\n\t\t}\r\n\t}\r\n\r\n\tenterRestElement(pattern, onIdent) {\r\n\t\tthis.enterPattern(pattern.argument, onIdent);\r\n\t}\r\n\r\n\tenterAssignmentPattern(pattern, onIdent) {\r\n\t\tthis.enterPattern(pattern.left, onIdent);\r\n\t\tthis.walkExpression(pattern.right);\r\n\t}\r\n\r\n\tevaluateExpression(expression) {\r\n\t\ttry {\r\n\t\t\tconst result = this.applyPluginsBailResult1(\"evaluate \" + expression.type, expression);\r\n\t\t\tif(result !== undefined)\r\n\t\t\t\treturn result;\r\n\t\t} catch(e) {\r\n\t\t\tconsole.warn(e);\r\n\t\t\t// ignore error\r\n\t\t}\r\n\t\treturn new BasicEvaluatedExpression().setRange(expression.range);\r\n\t}\r\n\r\n\tparseString(expression) {\r\n\t\tswitch(expression.type) {\r\n\t\t\tcase \"BinaryExpression\":\r\n\t\t\t\tif(expression.operator === \"+\")\r\n\t\t\t\t\treturn this.parseString(expression.left) + this.parseString(expression.right);\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"Literal\":\r\n\t\t\t\treturn expression.value + \"\";\r\n\t\t}\r\n\t\tthrow new Error(expression.type + \" is not supported as parameter for require\");\r\n\t}\r\n\r\n\tparseCalculatedString(expression) {\r\n\t\tswitch(expression.type) {\r\n\t\t\tcase \"BinaryExpression\":\r\n\t\t\t\tif(expression.operator === \"+\") {\r\n\t\t\t\t\tconst left = this.parseCalculatedString(expression.left);\r\n\t\t\t\t\tconst right = this.parseCalculatedString(expression.right);\r\n\t\t\t\t\tif(left.code) {\r\n\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\trange: left.range,\r\n\t\t\t\t\t\t\tvalue: left.value,\r\n\t\t\t\t\t\t\tcode: true\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t} else if(right.code) {\r\n\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\trange: [left.range[0], right.range ? right.range[1] : left.range[1]],\r\n\t\t\t\t\t\t\tvalue: left.value + right.value,\r\n\t\t\t\t\t\t\tcode: true\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\trange: [left.range[0], right.range[1]],\r\n\t\t\t\t\t\t\tvalue: left.value + right.value\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"ConditionalExpression\":\r\n\t\t\t\t{\r\n\t\t\t\t\tconst consequent = this.parseCalculatedString(expression.consequent);\r\n\t\t\t\t\tconst alternate = this.parseCalculatedString(expression.alternate);\r\n\t\t\t\t\tconst items = [];\r\n\t\t\t\t\tif(consequent.conditional)\r\n\t\t\t\t\t\tArray.prototype.push.apply(items, consequent.conditional);\r\n\t\t\t\t\telse if(!consequent.code)\r\n\t\t\t\t\t\titems.push(consequent);\r\n\t\t\t\t\telse break;\r\n\t\t\t\t\tif(alternate.conditional)\r\n\t\t\t\t\t\tArray.prototype.push.apply(items, alternate.conditional);\r\n\t\t\t\t\telse if(!alternate.code)\r\n\t\t\t\t\t\titems.push(alternate);\r\n\t\t\t\t\telse break;\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\tvalue: \"\",\r\n\t\t\t\t\t\tcode: true,\r\n\t\t\t\t\t\tconditional: items\r\n\t\t\t\t\t};\r\n\t\t\t\t}\r\n\t\t\tcase \"Literal\":\r\n\t\t\t\treturn {\r\n\t\t\t\t\trange: expression.range,\r\n\t\t\t\t\tvalue: expression.value + \"\"\r\n\t\t\t\t};\r\n\t\t}\r\n\t\treturn {\r\n\t\t\tvalue: \"\",\r\n\t\t\tcode: true\r\n\t\t};\r\n\t}\r\n\r\n\tparseStringArray(expression) {\r\n\t\tif(expression.type !== \"ArrayExpression\") {\r\n\t\t\treturn [this.parseString(expression)];\r\n\t\t}\r\n\r\n\t\tconst arr = [];\r\n\t\tif(expression.elements)\r\n\t\t\texpression.elements.forEach(function(expr) {\r\n\t\t\t\tarr.push(this.parseString(expr));\r\n\t\t\t}, this);\r\n\t\treturn arr;\r\n\t}\r\n\r\n\tparseCalculatedStringArray(expression) {\r\n\t\tif(expression.type !== \"ArrayExpression\") {\r\n\t\t\treturn [this.parseCalculatedString(expression)];\r\n\t\t}\r\n\r\n\t\tconst arr = [];\r\n\t\tif(expression.elements)\r\n\t\t\texpression.elements.forEach(function(expr) {\r\n\t\t\t\tarr.push(this.parseCalculatedString(expr));\r\n\t\t\t}, this);\r\n\t\treturn arr;\r\n\t}\r\n\r\n\tparse(source, initialState) {\r\n\t\tlet ast;\r\n\t\tconst comments = [];\r\n\t\tfor(let i = 0, len = POSSIBLE_AST_OPTIONS.length; i < len; i++) {\r\n\t\t\tif(!ast) {\r\n\t\t\t\ttry {\r\n\t\t\t\t\tcomments.length = 0;\r\n\t\t\t\t\tPOSSIBLE_AST_OPTIONS[i].onComment = comments;\r\n\t\t\t\t\tast = acorn.parse(source, POSSIBLE_AST_OPTIONS[i]);\r\n\t\t\t\t} catch(e) {\r\n\t\t\t\t\t// ignore the error\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tif(!ast) {\r\n\t\t\t// for the error\r\n\t\t\tast = acorn.parse(source, {\r\n\t\t\t\tranges: true,\r\n\t\t\t\tlocations: true,\r\n\t\t\t\tecmaVersion: 2017,\r\n\t\t\t\tsourceType: \"module\",\r\n\t\t\t\tplugins: {\r\n\t\t\t\t\tdynamicImport: true\r\n\t\t\t\t},\r\n\t\t\t\tonComment: comments\r\n\t\t\t});\r\n\t\t}\r\n\t\tif(!ast || typeof ast !== \"object\")\r\n\t\t\tthrow new Error(\"Source couldn't be parsed\");\r\n\t\tconst oldScope = this.scope;\r\n\t\tconst oldState = this.state;\r\n\t\tconst oldComments = this.comments;\r\n\t\tthis.scope = {\r\n\t\t\tinTry: false,\r\n\t\t\tdefinitions: [],\r\n\t\t\trenames: {}\r\n\t\t};\r\n\t\tconst state = this.state = initialState || {};\r\n\t\tthis.comments = comments;\r\n\t\tif(this.applyPluginsBailResult(\"program\", ast, comments) === undefined) {\r\n\t\t\tthis.prewalkStatements(ast.body);\r\n\t\t\tthis.walkStatements(ast.body);\r\n\t\t}\r\n\t\tthis.scope = oldScope;\r\n\t\tthis.state = oldState;\r\n\t\tthis.comments = oldComments;\r\n\t\treturn state;\r\n\t}\r\n\r\n\tevaluate(source) {\r\n\t\tconst ast = acorn.parse(\"(\" + source + \")\", {\r\n\t\t\tranges: true,\r\n\t\t\tlocations: true,\r\n\t\t\tecmaVersion: 2017,\r\n\t\t\tsourceType: \"module\",\r\n\t\t\tplugins: {\r\n\t\t\t\tdynamicImport: true\r\n\t\t\t}\r\n\t\t});\r\n\t\tif(!ast || typeof ast !== \"object\" || ast.type !== \"Program\")\r\n\t\t\tthrow new Error(\"evaluate: Source couldn't be parsed\");\r\n\t\tif(ast.body.length !== 1 || ast.body[0].type !== \"ExpressionStatement\")\r\n\t\t\tthrow new Error(\"evaluate: Source is not a expression\");\r\n\t\treturn this.evaluateExpression(ast.body[0].expression);\r\n\t}\r\n\r\n\tgetComments(range) {\r\n\t\treturn this.comments.filter(comment => comment.range[0] >= range[0] && comment.range[1] <= range[1]);\r\n\t}\r\n\r\n\tgetCommentOptions(range) {\r\n\t\tconst comments = this.getComments(range);\r\n\t\tif(comments.length === 0) return null;\r\n\t\tconst options = comments.map(comment => {\r\n\t\t\ttry {\r\n\t\t\t\treturn json5.parse(`{${comment.value}}`);\r\n\t\t\t} catch(e) {\r\n\t\t\t\treturn {};\r\n\t\t\t}\r\n\t\t});\r\n\t\treturn options.reduce((o, i) => Object.assign(o, i), {});\r\n\t}\r\n\r\n}\r\n\r\nmodule.exports = Parser;\r\n","/home/travis/build/npmtest/node-npmtest-webpack/node_modules/webpack/lib/BasicEvaluatedExpression.js":"/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\n\r\n\"use strict\";\r\n\r\nclass BasicEvaluatedExpression {\r\n\r\n\tconstructor() {\r\n\t\tthis.range = null;\r\n\t}\r\n\r\n\tisNull() {\r\n\t\treturn !!this.null;\r\n\t}\r\n\r\n\tisString() {\r\n\t\treturn Object.prototype.hasOwnProperty.call(this, \"string\");\r\n\t}\r\n\r\n\tisNumber() {\r\n\t\treturn Object.prototype.hasOwnProperty.call(this, \"number\");\r\n\t}\r\n\r\n\tisBoolean() {\r\n\t\treturn Object.prototype.hasOwnProperty.call(this, \"bool\");\r\n\t}\r\n\r\n\tisRegExp() {\r\n\t\treturn Object.prototype.hasOwnProperty.call(this, \"regExp\");\r\n\t}\r\n\r\n\tisConditional() {\r\n\t\treturn Object.prototype.hasOwnProperty.call(this, \"options\");\r\n\t}\r\n\r\n\tisArray() {\r\n\t\treturn Object.prototype.hasOwnProperty.call(this, \"items\");\r\n\t}\r\n\r\n\tisConstArray() {\r\n\t\treturn Object.prototype.hasOwnProperty.call(this, \"array\");\r\n\t}\r\n\r\n\tisIdentifier() {\r\n\t\treturn Object.prototype.hasOwnProperty.call(this, \"identifier\");\r\n\t}\r\n\r\n\tisWrapped() {\r\n\t\treturn Object.prototype.hasOwnProperty.call(this, \"prefix\") || Object.prototype.hasOwnProperty.call(this, \"postfix\");\r\n\t}\r\n\r\n\tisTemplateString() {\r\n\t\treturn Object.prototype.hasOwnProperty.call(this, \"quasis\");\r\n\t}\r\n\r\n\tasBool() {\r\n\t\tif(this.isBoolean()) return this.bool;\r\n\t\telse if(this.isNull()) return false;\r\n\t\telse if(this.isString()) return !!this.string;\r\n\t\telse if(this.isNumber()) return !!this.number;\r\n\t\telse if(this.isRegExp()) return true;\r\n\t\telse if(this.isArray()) return true;\r\n\t\telse if(this.isConstArray()) return true;\r\n\t\telse if(this.isWrapped()) return this.prefix && this.prefix.asBool() || this.postfix && this.postfix.asBool() ? true : undefined;\r\n\t\telse if(this.isTemplateString()) {\r\n\t\t\tif(this.quasis.length === 1) return this.quasis[0].asBool();\r\n\t\t\tfor(let i = 0; i < this.quasis.length; i++) {\r\n\t\t\t\tif(this.quasis[i].asBool()) return true;\r\n\t\t\t}\r\n\t\t\t// can't tell if string will be empty without executing\r\n\t\t}\r\n\t\treturn undefined;\r\n\t}\r\n\r\n\tsetString(str) {\r\n\t\tif(str === null)\r\n\t\t\tdelete this.string;\r\n\t\telse\r\n\t\t\tthis.string = str;\r\n\t\treturn this;\r\n\t}\r\n\r\n\tsetNull() {\r\n\t\tthis.null = true;\r\n\t\treturn this;\r\n\t}\r\n\r\n\tsetNumber(num) {\r\n\t\tif(num === null)\r\n\t\t\tdelete this.number;\r\n\t\telse\r\n\t\t\tthis.number = num;\r\n\t\treturn this;\r\n\t}\r\n\r\n\tsetBoolean(bool) {\r\n\t\tif(bool === null)\r\n\t\t\tdelete this.bool;\r\n\t\telse\r\n\t\t\tthis.bool = bool;\r\n\t\treturn this;\r\n\t}\r\n\r\n\tsetRegExp(regExp) {\r\n\t\tif(regExp === null)\r\n\t\t\tdelete this.regExp;\r\n\t\telse\r\n\t\t\tthis.regExp = regExp;\r\n\t\treturn this;\r\n\t}\r\n\r\n\tsetIdentifier(identifier) {\r\n\t\tif(identifier === null)\r\n\t\t\tdelete this.identifier;\r\n\t\telse\r\n\t\t\tthis.identifier = identifier;\r\n\t\treturn this;\r\n\t}\r\n\r\n\tsetWrapped(prefix, postfix) {\r\n\t\tthis.prefix = prefix;\r\n\t\tthis.postfix = postfix;\r\n\t\treturn this;\r\n\t}\r\n\r\n\tunsetWrapped() {\r\n\t\tdelete this.prefix;\r\n\t\tdelete this.postfix;\r\n\t\treturn this;\r\n\t}\r\n\r\n\tsetOptions(options) {\r\n\t\tif(options === null)\r\n\t\t\tdelete this.options;\r\n\t\telse\r\n\t\t\tthis.options = options;\r\n\t\treturn this;\r\n\t}\r\n\r\n\tsetItems(items) {\r\n\t\tif(items === null)\r\n\t\t\tdelete this.items;\r\n\t\telse\r\n\t\t\tthis.items = items;\r\n\t\treturn this;\r\n\t}\r\n\r\n\tsetArray(array) {\r\n\t\tif(array === null)\r\n\t\t\tdelete this.array;\r\n\t\telse\r\n\t\t\tthis.array = array;\r\n\t\treturn this;\r\n\t}\r\n\r\n\tsetTemplateString(quasis) {\r\n\t\tif(quasis === null)\r\n\t\t\tdelete this.quasis;\r\n\t\telse\r\n\t\t\tthis.quasis = quasis;\r\n\t\treturn this;\r\n\t}\r\n\r\n\taddOptions(options) {\r\n\t\tif(!this.options) this.options = [];\r\n\t\toptions.forEach(item => {\r\n\t\t\tthis.options.push(item);\r\n\t\t}, this);\r\n\t\treturn this;\r\n\t}\r\n\r\n\tsetRange(range) {\r\n\t\tthis.range = range;\r\n\t\treturn this;\r\n\t}\r\n\r\n}\r\n\r\nmodule.exports = BasicEvaluatedExpression;\r\n","/home/travis/build/npmtest/node-npmtest-webpack/node_modules/webpack/lib/RuleSet.js":"/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\n/*\r\n<rules>: <rule>\r\n<rules>: [<rule>]\r\n<rule>: {\r\n\tresource: {\r\n\t\ttest: <condition>,\r\n\t\tinclude: <condition>,\r\n\t\texclude: <condition>,\r\n\t},\r\n\tresource: <condition>, -> resource.test\r\n\ttest: <condition>, -> resource.test\r\n\tinclude: <condition>, -> resource.include\r\n\texclude: <condition>, -> resource.exclude\r\n\tresourceQuery: <condition>,\r\n\tcompiler: <condition>,\r\n\tissuer: <condition>,\r\n\tuse: \"loader\", -> use[0].loader\r\n\tloader: <>, -> use[0].loader\r\n\tloaders: <>, -> use\r\n\toptions: {}, -> use[0].options,\r\n\tquery: {}, -> options\r\n\tparser: {},\r\n\tuse: [\r\n\t\t\"loader\" -> use[x].loader\r\n\t],\r\n\tuse: [\r\n\t\t{\r\n\t\t\tloader: \"loader\",\r\n\t\t\toptions: {}\r\n\t\t}\r\n\t],\r\n\trules: [\r\n\t\t<rule>\r\n\t],\r\n\toneOf: [\r\n\t\t<rule>\r\n\t]\r\n}\r\n\r\n<condition>: /regExp/\r\n<condition>: function(arg) {}\r\n<condition>: \"starting\"\r\n<condition>: [<condition>] // or\r\n<condition>: { and: [<condition>] }\r\n<condition>: { or: [<condition>] }\r\n<condition>: { not: [<condition>] }\r\n<condition>: { test: <condition>, include: <condition>, exclude: <condition> }\r\n\r\n\r\nnormalized:\r\n\r\n{\r\n\tresource: function(),\r\n\tresourceQuery: function(),\r\n\tcompiler: function(),\r\n\tissuer: function(),\r\n\tuse: [\r\n\t\t{\r\n\t\t\tloader: string,\r\n\t\t\toptions: string,\r\n\t\t\t<any>: <any>\r\n\t\t}\r\n\t],\r\n\trules: [<rule>],\r\n\toneOf: [<rule>],\r\n\t<any>: <any>,\r\n}\r\n\r\n*/\r\n\r\n\"use strict\";\r\n\r\nmodule.exports = class RuleSet {\r\n\tconstructor(rules) {\r\n\t\tthis.references = Object.create(null);\r\n\t\tthis.rules = RuleSet.normalizeRules(rules, this.references, \"ref-\");\r\n\t}\r\n\r\n\tstatic normalizeRules(rules, refs, ident) {\r\n\t\tif(Array.isArray(rules)) {\r\n\t\t\treturn rules.map((rule, idx) => {\r\n\t\t\t\treturn RuleSet.normalizeRule(rule, refs, `${ident}-${idx}`);\r\n\t\t\t});\r\n\t\t} else if(rules) {\r\n\t\t\treturn [RuleSet.normalizeRule(rules, refs, ident)];\r\n\t\t} else {\r\n\t\t\treturn [];\r\n\t\t}\r\n\t}\r\n\r\n\tstatic normalizeRule(rule, refs, ident) {\r\n\t\tif(typeof rule === \"string\")\r\n\t\t\treturn {\r\n\t\t\t\tuse: [{\r\n\t\t\t\t\tloader: rule\r\n\t\t\t\t}]\r\n\t\t\t};\r\n\t\tif(!rule)\r\n\t\t\tthrow new Error(\"Unexcepted null when object was expected as rule\");\r\n\t\tif(typeof rule !== \"object\")\r\n\t\t\tthrow new Error(\"Unexcepted \" + typeof rule + \" when object was expected as rule (\" + rule + \")\");\r\n\r\n\t\tlet newRule = {};\r\n\t\tlet useSource;\r\n\t\tlet resourceSource;\r\n\t\tlet condition;\r\n\r\n\t\tif(rule.test || rule.include || rule.exclude) {\r\n\t\t\tcheckResourceSource(\"test + include + exclude\");\r\n\t\t\tcondition = {\r\n\t\t\t\ttest: rule.test,\r\n\t\t\t\tinclude: rule.include,\r\n\t\t\t\texclude: rule.exclude\r\n\t\t\t};\r\n\t\t\ttry {\r\n\t\t\t\tnewRule.resource = RuleSet.normalizeCondition(condition);\r\n\t\t\t} catch(error) {\r\n\t\t\t\tthrow new Error(RuleSet.buildErrorMessage(condition, error));\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif(rule.resource) {\r\n\t\t\tcheckResourceSource(\"resource\");\r\n\t\t\ttry {\r\n\t\t\t\tnewRule.resource = RuleSet.normalizeCondition(rule.resource);\r\n\t\t\t} catch(error) {\r\n\t\t\t\tthrow new Error(RuleSet.buildErrorMessage(rule.resource, error));\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif(rule.resourceQuery) {\r\n\t\t\ttry {\r\n\t\t\t\tnewRule.resourceQuery = RuleSet.normalizeCondition(rule.resourceQuery);\r\n\t\t\t} catch(error) {\r\n\t\t\t\tthrow new Error(RuleSet.buildErrorMessage(rule.resourceQuery, error));\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif(rule.compiler) {\r\n\t\t\ttry {\r\n\t\t\t\tnewRule.compiler = RuleSet.normalizeCondition(rule.compiler);\r\n\t\t\t} catch(error) {\r\n\t\t\t\tthrow new Error(RuleSet.buildErrorMessage(rule.compiler, error));\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif(rule.issuer) {\r\n\t\t\ttry {\r\n\t\t\t\tnewRule.issuer = RuleSet.normalizeCondition(rule.issuer);\r\n\t\t\t} catch(error) {\r\n\t\t\t\tthrow new Error(RuleSet.buildErrorMessage(rule.issuer, error));\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif(rule.loader && rule.loaders)\r\n\t\t\tthrow new Error(RuleSet.buildErrorMessage(rule, new Error(\"Provided loader and loaders for rule (use only one of them)\")));\r\n\r\n\t\tconst loader = rule.loaders || rule.loader;\r\n\t\tif(typeof loader === \"string\" && !rule.options && !rule.query) {\r\n\t\t\tcheckUseSource(\"loader\");\r\n\t\t\tnewRule.use = RuleSet.normalizeUse(loader.split(\"!\"), ident);\r\n\t\t} else if(typeof loader === \"string\" && (rule.options || rule.query)) {\r\n\t\t\tcheckUseSource(\"loader + options/query\");\r\n\t\t\tnewRule.use = RuleSet.normalizeUse({\r\n\t\t\t\tloader: loader,\r\n\t\t\t\toptions: rule.options,\r\n\t\t\t\tquery: rule.query\r\n\t\t\t}, ident);\r\n\t\t} else if(loader && (rule.options || rule.query)) {\r\n\t\t\tthrow new Error(RuleSet.buildErrorMessage(rule, new Error(\"options/query cannot be used with loaders (use options for each array item)\")));\r\n\t\t} else if(loader) {\r\n\t\t\tcheckUseSource(\"loaders\");\r\n\t\t\tnewRule.use = RuleSet.normalizeUse(loader, ident);\r\n\t\t} else if(rule.options || rule.query) {\r\n\t\t\tthrow new Error(RuleSet.buildErrorMessage(rule, new Error(\"options/query provided without loader (use loader + options)\")));\r\n\t\t}\r\n\r\n\t\tif(rule.use) {\r\n\t\t\tcheckUseSource(\"use\");\r\n\t\t\tnewRule.use = RuleSet.normalizeUse(rule.use, ident);\r\n\t\t}\r\n\r\n\t\tif(rule.rules)\r\n\t\t\tnewRule.rules = RuleSet.normalizeRules(rule.rules, refs, `${ident}-rules`);\r\n\r\n\t\tif(rule.oneOf)\r\n\t\t\tnewRule.oneOf = RuleSet.normalizeRules(rule.oneOf, refs, `${ident}-oneOf`);\r\n\r\n\t\tconst keys = Object.keys(rule).filter((key) => {\r\n\t\t\treturn [\"resource\", \"resourceQuery\", \"compiler\", \"test\", \"include\", \"exclude\", \"issuer\", \"loader\", \"options\", \"query\", \"loaders\", \"use\", \"rules\", \"oneOf\"].indexOf(key) < 0;\r\n\t\t});\r\n\t\tkeys.forEach((key) => {\r\n\t\t\tnewRule[key] = rule[key];\r\n\t\t});\r\n\r\n\t\tfunction checkUseSource(newSource) {\r\n\t\t\tif(useSource && useSource !== newSource)\r\n\t\t\t\tthrow new Error(RuleSet.buildErrorMessage(rule, new Error(\"Rule can only have one result source (provided \" + newSource + \" and \" + useSource + \")\")));\r\n\t\t\tuseSource = newSource;\r\n\t\t}\r\n\r\n\t\tfunction checkResourceSource(newSource) {\r\n\t\t\tif(resourceSource && resourceSource !== newSource)\r\n\t\t\t\tthrow new Error(RuleSet.buildErrorMessage(rule, new Error(\"Rule can only have one resource source (provided \" + newSource + \" and \" + resourceSource + \")\")));\r\n\t\t\tresourceSource = newSource;\r\n\t\t}\r\n\r\n\t\tif(Array.isArray(newRule.use)) {\r\n\t\t\tnewRule.use.forEach((item) => {\r\n\t\t\t\tif(item.ident) {\r\n\t\t\t\t\trefs[item.ident] = item.options;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\treturn newRule;\r\n\t}\r\n\r\n\tstatic buildErrorMessage(condition, error) {\r\n\t\tconst conditionAsText = JSON.stringify(condition, (key, value) => {\r\n\t\t\treturn value === undefined ? \"undefined\" : value;\r\n\t\t}, 2);\r\n\t\treturn error.message + \" in \" + conditionAsText;\r\n\t}\r\n\r\n\tstatic normalizeUse(use, ident) {\r\n\t\tif(Array.isArray(use)) {\r\n\t\t\treturn use\r\n\t\t\t\t.map((item, idx) => RuleSet.normalizeUse(item, `${ident}-${idx}`))\r\n\t\t\t\t.reduce((arr, items) => arr.concat(items), []);\r\n\t\t}\r\n\t\treturn [RuleSet.normalizeUseItem(use, ident)];\r\n\t}\r\n\r\n\tstatic normalizeUseItemFunction(use, data) {\r\n\t\tconst result = use(data);\r\n\t\tif(typeof result === \"string\") {\r\n\t\t\treturn RuleSet.normalizeUseItem(result);\r\n\t\t}\r\n\t\treturn result;\r\n\t}\r\n\r\n\tstatic normalizeUseItemString(useItemString) {\r\n\t\tconst idx = useItemString.indexOf(\"?\");\r\n\t\tif(idx >= 0) {\r\n\t\t\treturn {\r\n\t\t\t\tloader: useItemString.substr(0, idx),\r\n\t\t\t\toptions: useItemString.substr(idx + 1)\r\n\t\t\t};\r\n\t\t}\r\n\t\treturn {\r\n\t\t\tloader: useItemString\r\n\t\t};\r\n\t}\r\n\r\n\tstatic normalizeUseItem(item, ident) {\r\n\t\tif(typeof item === \"function\")\r\n\t\t\treturn item;\r\n\r\n\t\tif(typeof item === \"string\") {\r\n\t\t\treturn RuleSet.normalizeUseItemString(item);\r\n\t\t}\r\n\r\n\t\tlet newItem = {};\r\n\r\n\t\tif(item.options && item.query)\r\n\t\t\tthrow new Error(\"Provided options and query in use\");\r\n\r\n\t\tif(!item.loader)\r\n\t\t\tthrow new Error(\"No loader specified\");\r\n\r\n\t\tnewItem.options = item.options || item.query;\r\n\r\n\t\tif(typeof newItem.options === \"object\" && newItem.options) {\r\n\t\t\tif(newItem.options.ident)\r\n\t\t\t\tnewItem.ident = newItem.options.ident;\r\n\t\t\telse\r\n\t\t\t\tnewItem.ident = ident;\r\n\t\t}\r\n\r\n\t\tconst keys = Object.keys(item).filter(function(key) {\r\n\t\t\treturn [\"options\", \"query\"].indexOf(key) < 0;\r\n\t\t});\r\n\r\n\t\tkeys.forEach(function(key) {\r\n\t\t\tnewItem[key] = item[key];\r\n\t\t});\r\n\r\n\t\treturn newItem;\r\n\t}\r\n\r\n\tstatic normalizeCondition(condition) {\r\n\t\tif(!condition)\r\n\t\t\tthrow new Error(\"Expected condition but got falsy value\");\r\n\t\tif(typeof condition === \"string\") {\r\n\t\t\treturn str => str.indexOf(condition) === 0;\r\n\t\t}\r\n\t\tif(typeof condition === \"function\") {\r\n\t\t\treturn condition;\r\n\t\t}\r\n\t\tif(condition instanceof RegExp) {\r\n\t\t\treturn condition.test.bind(condition);\r\n\t\t}\r\n\t\tif(Array.isArray(condition)) {\r\n\t\t\tconst items = condition.map(c => RuleSet.normalizeCondition(c));\r\n\t\t\treturn orMatcher(items);\r\n\t\t}\r\n\t\tif(typeof condition !== \"object\")\r\n\t\t\tthrow Error(\"Unexcepted \" + typeof condition + \" when condition was expected (\" + condition + \")\");\r\n\r\n\t\tlet matchers = [];\r\n\t\tObject.keys(condition).forEach(key => {\r\n\t\t\tconst value = condition[key];\r\n\t\t\tswitch(key) {\r\n\t\t\t\tcase \"or\":\r\n\t\t\t\tcase \"include\":\r\n\t\t\t\tcase \"test\":\r\n\t\t\t\t\tif(value)\r\n\t\t\t\t\t\tmatchers.push(RuleSet.normalizeCondition(value));\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"and\":\r\n\t\t\t\t\tif(value) {\r\n\t\t\t\t\t\tconst items = value.map(c => RuleSet.normalizeCondition(c));\r\n\t\t\t\t\t\tmatchers.push(andMatcher(items));\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"not\":\r\n\t\t\t\tcase \"exclude\":\r\n\t\t\t\t\tif(value) {\r\n\t\t\t\t\t\tconst matcher = RuleSet.normalizeCondition(value);\r\n\t\t\t\t\t\tmatchers.push(notMatcher(matcher));\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tthrow new Error(\"Unexcepted property \" + key + \" in condition\");\r\n\t\t\t}\r\n\t\t});\r\n\t\tif(matchers.length === 0)\r\n\t\t\tthrow new Error(\"Excepted condition but got \" + condition);\r\n\t\tif(matchers.length === 1)\r\n\t\t\treturn matchers[0];\r\n\t\treturn andMatcher(matchers);\r\n\t}\r\n\r\n\texec(data) {\r\n\t\tconst result = [];\r\n\t\tthis._run(data, {\r\n\t\t\trules: this.rules\r\n\t\t}, result);\r\n\t\treturn result;\r\n\t}\r\n\r\n\t_run(data, rule, result) {\r\n\t\t// test conditions\r\n\t\tif(rule.resource && !data.resource)\r\n\t\t\treturn false;\r\n\t\tif(rule.resourceQuery && !data.resourceQuery)\r\n\t\t\treturn false;\r\n\t\tif(rule.compiler && !data.compiler)\r\n\t\t\treturn false;\r\n\t\tif(rule.issuer && !data.issuer)\r\n\t\t\treturn false;\r\n\t\tif(rule.resource && !rule.resource(data.resource))\r\n\t\t\treturn false;\r\n\t\tif(data.issuer && rule.issuer && !rule.issuer(data.issuer))\r\n\t\t\treturn false;\r\n\t\tif(data.resourceQuery && rule.resourceQuery && !rule.resourceQuery(data.resourceQuery))\r\n\t\t\treturn false;\r\n\t\tif(data.compiler && rule.compiler && !rule.compiler(data.compiler))\r\n\t\t\treturn false;\r\n\r\n\t\t// apply\r\n\t\tconst keys = Object.keys(rule).filter((key) => {\r\n\t\t\treturn [\"resource\", \"resourceQuery\", \"compiler\", \"issuer\", \"rules\", \"oneOf\", \"use\", \"enforce\"].indexOf(key) < 0;\r\n\t\t});\r\n\t\tkeys.forEach((key) => {\r\n\t\t\tresult.push({\r\n\t\t\t\ttype: key,\r\n\t\t\t\tvalue: rule[key]\r\n\t\t\t});\r\n\t\t});\r\n\r\n\t\tif(rule.use) {\r\n\t\t\trule.use.forEach((use) => {\r\n\t\t\t\tresult.push({\r\n\t\t\t\t\ttype: \"use\",\r\n\t\t\t\t\tvalue: typeof use === \"function\" ? RuleSet.normalizeUseItemFunction(use, data) : use,\r\n\t\t\t\t\tenforce: rule.enforce\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tif(rule.rules) {\r\n\t\t\tfor(let i = 0; i < rule.rules.length; i++) {\r\n\t\t\t\tthis._run(data, rule.rules[i], result);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif(rule.oneOf) {\r\n\t\t\tfor(let i = 0; i < rule.oneOf.length; i++) {\r\n\t\t\t\tif(this._run(data, rule.oneOf[i], result))\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\t}\r\n\r\n\tfindOptionsByIdent(ident) {\r\n\t\tconst options = this.references[ident];\r\n\t\tif(!options) throw new Error(\"Can't find options with ident '\" + ident + \"'\");\r\n\t\treturn options;\r\n\t}\r\n};\r\n\r\nfunction notMatcher(matcher) {\r\n\treturn function(str) {\r\n\t\treturn !matcher(str);\r\n\t};\r\n}\r\n\r\nfunction orMatcher(items) {\r\n\treturn function(str) {\r\n\t\tfor(let i = 0; i < items.length; i++) {\r\n\t\t\tif(items[i](str))\r\n\t\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t};\r\n}\r\n\r\nfunction andMatcher(items) {\r\n\treturn function(str) {\r\n\t\tfor(let i = 0; i < items.length; i++) {\r\n\t\t\tif(!items[i](str))\r\n\t\t\t\treturn false;\r\n\t\t}\r\n\t\treturn true;\r\n\t};\r\n}\r\n","/home/travis/build/npmtest/node-npmtest-webpack/node_modules/webpack/lib/ContextModuleFactory.js":"/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\nvar asyncLib = require(\"async\");\r\nvar path = require(\"path\");\r\n\r\nvar Tapable = require(\"tapable\");\r\nvar ContextModule = require(\"./ContextModule\");\r\nvar ContextElementDependency = require(\"./dependencies/ContextElementDependency\");\r\n\r\nfunction ContextModuleFactory(resolvers) {\r\n\tTapable.call(this);\r\n\tthis.resolvers = resolvers;\r\n}\r\nmodule.exports = ContextModuleFactory;\r\n\r\nContextModuleFactory.prototype = Object.create(Tapable.prototype);\r\nContextModuleFactory.prototype.constructor = ContextModuleFactory;\r\n\r\nContextModuleFactory.prototype.create = function(data, callback) {\r\n\tvar module = this;\r\n\tvar context = data.context;\r\n\tvar dependencies = data.dependencies;\r\n\tvar dependency = dependencies[0];\r\n\tthis.applyPluginsAsyncWaterfall(\"before-resolve\", {\r\n\t\tcontext: context,\r\n\t\trequest: dependency.request,\r\n\t\trecursive: dependency.recursive,\r\n\t\tregExp: dependency.regExp,\r\n\t\tasync: dependency.async,\r\n\t\tdependencies: dependencies\r\n\t}, function(err, result) {\r\n\t\tif(err) return callback(err);\r\n\r\n\t\t// Ignored\r\n\t\tif(!result) return callback();\r\n\r\n\t\tvar context = result.context;\r\n\t\tvar request = result.request;\r\n\t\tvar recursive = result.recursive;\r\n\t\tvar regExp = result.regExp;\r\n\t\tvar asyncContext = result.async;\r\n\t\tvar dependencies = result.dependencies;\r\n\r\n\t\tvar loaders, resource, loadersPrefix = \"\";\r\n\t\tvar idx = request.lastIndexOf(\"!\");\r\n\t\tif(idx >= 0) {\r\n\t\t\tloaders = request.substr(0, idx + 1);\r\n\t\t\tfor(var i = 0; i < loaders.length && loaders[i] === \"!\"; i++) {\r\n\t\t\t\tloadersPrefix += \"!\";\r\n\t\t\t}\r\n\t\t\tloaders = loaders.substr(i).replace(/!+$/, \"\").replace(/!!+/g, \"!\");\r\n\t\t\tif(loaders === \"\") loaders = [];\r\n\t\t\telse loaders = loaders.split(\"!\");\r\n\t\t\tresource = request.substr(idx + 1);\r\n\t\t} else {\r\n\t\t\tloaders = [];\r\n\t\t\tresource = request;\r\n\t\t}\r\n\r\n\t\tvar resolvers = module.resolvers;\r\n\r\n\t\tasyncLib.parallel([\r\n\t\t\tfunction(callback) {\r\n\t\t\t\tresolvers.context.resolve({}, context, resource, function(err, result) {\r\n\t\t\t\t\tif(err) return callback(err);\r\n\t\t\t\t\tcallback(null, result);\r\n\t\t\t\t});\r\n\t\t\t},\r\n\t\t\tfunction(callback) {\r\n\t\t\t\tasyncLib.map(loaders, function(loader, callback) {\r\n\t\t\t\t\tresolvers.loader.resolve({}, context, loader, function(err, result) {\r\n\t\t\t\t\t\tif(err) return callback(err);\r\n\t\t\t\t\t\tcallback(null, result);\r\n\t\t\t\t\t});\r\n\t\t\t\t}, callback);\r\n\t\t\t}\r\n\t\t], function(err, result) {\r\n\t\t\tif(err) return callback(err);\r\n\r\n\t\t\tmodule.applyPluginsAsyncWaterfall(\"after-resolve\", {\r\n\t\t\t\tloaders: loadersPrefix + result[1].join(\"!\") + (result[1].length > 0 ? \"!\" : \"\"),\r\n\t\t\t\tresource: result[0],\r\n\t\t\t\trecursive: recursive,\r\n\t\t\t\tregExp: regExp,\r\n\t\t\t\tasync: asyncContext,\r\n\t\t\t\tdependencies: dependencies,\r\n\t\t\t\tresolveDependencies: module.resolveDependencies.bind(module)\r\n\t\t\t}, function(err, result) {\r\n\t\t\t\tif(err) return callback(err);\r\n\r\n\t\t\t\t// Ignored\r\n\t\t\t\tif(!result) return callback();\r\n\r\n\t\t\t\treturn callback(null, new ContextModule(result.resolveDependencies, result.resource, result.recursive, result.regExp, result.loaders, result.async, dependency.chunkName));\r\n\t\t\t});\r\n\t\t});\r\n\t});\r\n};\r\n\r\nContextModuleFactory.prototype.resolveDependencies = function resolveDependencies(fs, resource, recursive, regExp, callback) {\r\n\tif(!regExp || !resource)\r\n\t\treturn callback(null, []);\r\n\t(function addDirectory(directory, callback) {\r\n\t\tfs.readdir(directory, function(err, files) {\r\n\t\t\tif(err) return callback(err);\r\n\t\t\tif(!files || files.length === 0) return callback(null, []);\r\n\t\t\tasyncLib.map(files.filter(function(p) {\r\n\t\t\t\treturn p.indexOf(\".\") !== 0;\r\n\t\t\t}), function(seqment, callback) {\r\n\r\n\t\t\t\tvar subResource = path.join(directory, seqment);\r\n\r\n\t\t\t\tfs.stat(subResource, function(err, stat) {\r\n\t\t\t\t\tif(err) return callback(err);\r\n\r\n\t\t\t\t\tif(stat.isDirectory()) {\r\n\r\n\t\t\t\t\t\tif(!recursive) return callback();\r\n\t\t\t\t\t\taddDirectory.call(this, subResource, callback);\r\n\r\n\t\t\t\t\t} else if(stat.isFile()) {\r\n\r\n\t\t\t\t\t\tvar obj = {\r\n\t\t\t\t\t\t\tcontext: resource,\r\n\t\t\t\t\t\t\trequest: \".\" + subResource.substr(resource.length).replace(/\\\\/g, \"/\")\r\n\t\t\t\t\t\t};\r\n\r\n\t\t\t\t\t\tthis.applyPluginsAsyncWaterfall(\"alternatives\", [obj], function(err, alternatives) {\r\n\t\t\t\t\t\t\tif(err) return callback(err);\r\n\t\t\t\t\t\t\talternatives = alternatives.filter(function(obj) {\r\n\t\t\t\t\t\t\t\treturn regExp.test(obj.request);\r\n\t\t\t\t\t\t\t}).map(function(obj) {\r\n\t\t\t\t\t\t\t\tvar dep = new ContextElementDependency(obj.request);\r\n\t\t\t\t\t\t\t\tdep.optional = true;\r\n\t\t\t\t\t\t\t\treturn dep;\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\tcallback(null, alternatives);\r\n\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t} else callback();\r\n\r\n\t\t\t\t}.bind(this));\r\n\r\n\t\t\t}.bind(this), function(err, result) {\r\n\t\t\t\tif(err) return callback(err);\r\n\r\n\t\t\t\tif(!result) return callback(null, []);\r\n\r\n\t\t\t\tcallback(null, result.filter(function(i) {\r\n\t\t\t\t\treturn !!i;\r\n\t\t\t\t}).reduce(function(a, i) {\r\n\t\t\t\t\treturn a.concat(i);\r\n\t\t\t\t}, []));\r\n\t\t\t});\r\n\t\t}.bind(this));\r\n\t}.call(this, resource, callback));\r\n};\r\n","/home/travis/build/npmtest/node-npmtest-webpack/node_modules/webpack/lib/ContextModule.js":"/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\n\"use strict\";\r\nconst path = require(\"path\");\r\nconst Module = require(\"./Module\");\r\nconst OriginalSource = require(\"webpack-sources\").OriginalSource;\r\nconst RawSource = require(\"webpack-sources\").RawSource;\r\nconst AsyncDependenciesBlock = require(\"./AsyncDependenciesBlock\");\r\n\r\nclass ContextModule extends Module {\r\n\tconstructor(resolveDependencies, context, recursive, regExp, addon, isAsync, chunkName) {\r\n\t\tsuper();\r\n\t\tthis.resolveDependencies = resolveDependencies;\r\n\t\tthis.context = context;\r\n\t\tthis.recursive = recursive;\r\n\t\tthis.regExp = regExp;\r\n\t\tthis.addon = addon;\r\n\t\tthis.async = !!isAsync;\r\n\t\tthis.cacheable = true;\r\n\t\tthis.contextDependencies = [context];\r\n\t\tthis.built = false;\r\n\t\tthis.chunkName = chunkName;\r\n\t}\r\n\r\n\tprettyRegExp(regexString) {\r\n\t\t// remove the \"/\" at the front and the beginning\r\n\t\t// \"/foo/\" -> \"foo\"\r\n\t\treturn regexString.substring(1, regexString.length - 1);\r\n\t}\r\n\r\n\tcontextify(context, request) {\r\n\t\treturn request.split(\"!\").map(subrequest => {\r\n\t\t\tlet rp = path.relative(context, subrequest);\r\n\t\t\tif(path.sep === \"\\\\\")\r\n\t\t\t\trp = rp.replace(/\\\\/g, \"/\");\r\n\t\t\tif(rp.indexOf(\"../\") !== 0)\r\n\t\t\t\trp = \"./\" + rp;\r\n\t\t\treturn rp;\r\n\t\t}).join(\"!\");\r\n\t}\r\n\r\n\tidentifier() {\r\n\t\tlet identifier = this.context;\r\n\t\tif(this.async)\r\n\t\t\tidentifier += \" async\";\r\n\t\tif(!this.recursive)\r\n\t\t\tidentifier += \" nonrecursive\";\r\n\t\tif(this.addon)\r\n\t\t\tidentifier += ` ${this.addon}`;\r\n\t\tif(this.regExp)\r\n\t\t\tidentifier += ` ${this.regExp}`;\r\n\r\n\t\treturn identifier;\r\n\t}\r\n\r\n\treadableIdentifier(requestShortener) {\r\n\t\tlet identifier = requestShortener.shorten(this.context);\r\n\t\tif(this.async)\r\n\t\t\tidentifier += \" async\";\r\n\t\tif(!this.recursive)\r\n\t\t\tidentifier += \" nonrecursive\";\r\n\t\tif(this.addon)\r\n\t\t\tidentifier += ` ${requestShortener.shorten(this.addon)}`;\r\n\t\tif(this.regExp)\r\n\t\t\tidentifier += ` ${this.prettyRegExp(this.regExp + \"\")}`;\r\n\r\n\t\treturn identifier;\r\n\t}\r\n\r\n\tlibIdent(options) {\r\n\t\tlet identifier = this.contextify(options.context, this.context);\r\n\t\tif(this.async)\r\n\t\t\tidentifier += \" async\";\r\n\t\tif(this.recursive)\r\n\t\t\tidentifier += \" recursive\";\r\n\t\tif(this.addon)\r\n\t\t\tidentifier += ` ${this.contextify(options.context, this.addon)}`;\r\n\t\tif(this.regExp)\r\n\t\t\tidentifier += ` ${this.prettyRegExp(this.regExp + \"\")}`;\r\n\r\n\t\treturn identifier;\r\n\t}\r\n\r\n\tneedRebuild(fileTimestamps, contextTimestamps) {\r\n\t\tconst ts = contextTimestamps[this.context];\r\n\t\tif(!ts) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\r\n\t\treturn ts >= this.builtTime;\r\n\t}\r\n\r\n\tunbuild() {\r\n\t\tthis.built = false;\r\n\t\tsuper.unbuild();\r\n\t}\r\n\r\n\tbuild(options, compilation, resolver, fs, callback) {\r\n\t\tthis.built = true;\r\n\t\tthis.builtTime = new Date().getTime();\r\n\t\tthis.resolveDependencies(fs, this.context, this.recursive, this.regExp, (err, dependencies) => {\r\n\t\t\tif(err) return callback(err);\r\n\r\n\t\t\tif(!dependencies) {\r\n\t\t\t\tthis.dependencies = [];\r\n\t\t\t\tcallback();\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\t// enhance dependencies\r\n\t\t\tdependencies.forEach(dep => {\r\n\t\t\t\tdep.loc = dep.userRequest;\r\n\t\t\t\tdep.request = this.addon + dep.request;\r\n\t\t\t});\r\n\r\n\t\t\t// if these we are not a async context\r\n\t\t\t// add dependencies and continue\r\n\t\t\tif(!this.async) {\r\n\t\t\t\tthis.dependencies = dependencies;\r\n\t\t\t\tcallback();\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\t// if we are async however create a new async dependency block\r\n\t\t\t// and add that block to this context\r\n\t\t\tdependencies.forEach(dep => {\r\n\t\t\t\tconst block = new AsyncDependenciesBlock(this.chunkName, dep.module, dep.loc);\r\n\t\t\t\tblock.addDependency(dep);\r\n\t\t\t\tthis.addBlock(block);\r\n\t\t\t});\r\n\t\t\tcallback();\r\n\t\t});\r\n\t}\r\n\r\n\tgetSourceWithDependencies(dependencies, id) {\r\n\t\t// if we filter first we get a new array\r\n\t\t// therefor we dont need to create a clone of dependencies explicitly\r\n\t\t// therefore the order of this is !important!\r\n\t\tconst map = dependencies\r\n\t\t\t.filter(dependency => dependency.module)\r\n\t\t\t.sort((a, b) => {\r\n\t\t\t\tif(a.userRequest === b.userRequest) {\r\n\t\t\t\t\treturn 0;\r\n\t\t\t\t}\r\n\t\t\t\treturn a.userRequest < b.userRequest ? -1 : 1;\r\n\t\t\t}).reduce(function(map, dep) {\r\n\t\t\t\tmap[dep.userRequest] = dep.module.id;\r\n\t\t\t\treturn map;\r\n\t\t\t}, Object.create(null));\r\n\t\treturn `var map = ${JSON.stringify(map, null, \"\\t\")};\r\nfunction webpackContext(req) {\r\n\treturn __webpack_require__(webpackContextResolve(req));\r\n};\r\nfunction webpackContextResolve(req) {\r\n\tvar id = map[req];\r\n\tif(!(id + 1)) // check for number or string\r\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\r\n\treturn id;\r\n};\r\nwebpackContext.keys = function webpackContextKeys() {\r\n\treturn Object.keys(map);\r\n};\r\nwebpackContext.resolve = webpackContextResolve;\r\nmodule.exports = webpackContext;\r\nwebpackContext.id = ${JSON.stringify(id)};`;\r\n\t}\r\n\r\n\tgetSourceWithBlocks(blocks, id) {\r\n\t\tlet hasMultipleOrNoChunks = false;\r\n\t\tconst map = blocks\r\n\t\t\t.filter(block => block.dependencies[0].module)\r\n\t\t\t.map((block) => ({\r\n\t\t\t\tdependency: block.dependencies[0],\r\n\t\t\t\tblock: block,\r\n\t\t\t\tuserRequest: block.dependencies[0].userRequest\r\n\t\t\t})).sort((a, b) => {\r\n\t\t\t\tif(a.userRequest === b.userRequest) return 0;\r\n\t\t\t\treturn a.userRequest < b.userRequest ? -1 : 1;\r\n\t\t\t}).reduce((map, item) => {\r\n\t\t\t\tconst chunks = item.block.chunks || [];\r\n\t\t\t\tif(chunks.length !== 1) {\r\n\t\t\t\t\thasMultipleOrNoChunks = true;\r\n\t\t\t\t}\r\n\t\t\t\tmap[item.userRequest] = [item.dependency.module.id]\r\n\t\t\t\t\t.concat(chunks.map(chunk => chunk.id));\r\n\r\n\t\t\t\treturn map;\r\n\t\t\t}, Object.create(null));\r\n\r\n\t\tconst requestPrefix = hasMultipleOrNoChunks ?\r\n\t\t\t\"Promise.all(ids.slice(1).map(__webpack_require__.e))\" :\r\n\t\t\t\"__webpack_require__.e(ids[1])\";\r\n\r\n\t\treturn `var map = ${JSON.stringify(map, null, \"\\t\")};\r\nfunction webpackAsyncContext(req) {\r\n\tvar ids = map[req];\r\n\tif(!ids)\r\n\t\treturn Promise.reject(new Error(\"Cannot find module '\" + req + \"'.\"));\r\n\treturn ${requestPrefix}.then(function() {\r\n\t\treturn __webpack_require__(ids[0]);\r\n\t});\r\n};\r\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\r\n\treturn Object.keys(map);\r\n};\r\nmodule.exports = webpackAsyncContext;\r\nwebpackAsyncContext.id = ${JSON.stringify(id)};`;\r\n\t}\r\n\r\n\tgetSourceForEmptyContext(id) {\r\n\t\treturn `function webpackEmptyContext(req) {\r\n\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\r\n}\r\nwebpackEmptyContext.keys = function() { return []; };\r\nwebpackEmptyContext.resolve = webpackEmptyContext;\r\nmodule.exports = webpackEmptyContext;\r\nwebpackEmptyContext.id = ${JSON.stringify(id)};`;\r\n\t}\r\n\r\n\tgetSourceString() {\r\n\t\tif(this.dependencies && this.dependencies.length > 0) {\r\n\t\t\treturn this.getSourceWithDependencies(this.dependencies, this.id);\r\n\t\t}\r\n\r\n\t\tif(this.blocks && this.blocks.length > 0) {\r\n\t\t\treturn this.getSourceWithBlocks(this.blocks, this.id);\r\n\t\t}\r\n\r\n\t\treturn this.getSourceForEmptyContext(this.id);\r\n\t}\r\n\r\n\tgetSource(sourceString) {\r\n\t\tif(this.useSourceMap) {\r\n\t\t\treturn new OriginalSource(sourceString, this.identifier());\r\n\t\t}\r\n\t\treturn new RawSource(sourceString);\r\n\t}\r\n\r\n\tsource() {\r\n\t\treturn this.getSource(\r\n\t\t\tthis.getSourceString()\r\n\t\t);\r\n\t}\r\n\r\n\tsize() {\r\n\t\t// base penalty\r\n\t\tconst initialSize = 160;\r\n\r\n\t\t// if we dont have dependencies we stop here.\r\n\t\treturn this.dependencies\r\n\t\t\t.reduce((size, dependency) => size + 5 + dependency.userRequest.length, initialSize);\r\n\t}\r\n}\r\n\r\nmodule.exports = ContextModule;\r\n","/home/travis/build/npmtest/node-npmtest-webpack/node_modules/webpack/lib/AsyncDependenciesBlock.js":"/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\n\"use strict\";\r\nconst DependenciesBlock = require(\"./DependenciesBlock\");\r\n\r\nmodule.exports = class AsyncDependenciesBlock extends DependenciesBlock {\r\n\tconstructor(name, module, loc) {\r\n\t\tsuper();\r\n\t\tthis.chunkName = name;\r\n\t\tthis.chunks = null;\r\n\t\tthis.module = module;\r\n\t\tthis.loc = loc;\r\n\t}\r\n\tget chunk() {\r\n\t\tthrow new Error(\"`chunk` was been renamed to `chunks` and is now an array\");\r\n\t}\r\n\tset chunk(chunk) {\r\n\t\tthrow new Error(\"`chunk` was been renamed to `chunks` and is now an array\");\r\n\t}\r\n\tupdateHash(hash) {\r\n\t\thash.update(this.chunkName || \"\");\r\n\t\thash.update(this.chunks && this.chunks.map((chunk) => {\r\n\t\t\treturn chunk.id !== null ? chunk.id : \"\";\r\n\t\t}).join(\",\") || \"\");\r\n\t\tsuper.updateHash(hash);\r\n\t}\r\n\tdisconnect() {\r\n\t\tthis.chunks = null;\r\n\t\tsuper.disconnect();\r\n\t}\r\n\tunseal() {\r\n\t\tthis.chunks = null;\r\n\t\tsuper.unseal();\r\n\t}\r\n\tsortItems() {\r\n\t\tsuper.sortItems();\r\n\t\tif(this.chunks) {\r\n\t\t\tthis.chunks.sort((a, b) => {\r\n\t\t\t\tlet i = 0;\r\n\t\t\t\twhile(true) { // eslint-disable-line no-constant-condition\r\n\t\t\t\t\tif(!a.modules[i] && !b.modules[i]) return 0;\r\n\t\t\t\t\tif(!a.modules[i]) return -1;\r\n\t\t\t\t\tif(!b.modules[i]) return 1;\r\n\t\t\t\t\tif(a.modules[i].id > b.modules[i].id) return 1;\r\n\t\t\t\t\tif(a.modules[i].id < b.modules[i].id) return -1;\r\n\t\t\t\t\ti++;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n};\r\n","/home/travis/build/npmtest/node-npmtest-webpack/node_modules/webpack/lib/dependencies/ContextElementDependency.js":"/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\n\"use strict\";\r\nconst ModuleDependency = require(\"./ModuleDependency\");\r\n\r\nclass ContextElementDependency extends ModuleDependency {\r\n\tconstructor(request, userRequest) {\r\n\t\tsuper(request);\r\n\t\tif(userRequest) {\r\n\t\t\tthis.userRequest = userRequest;\r\n\t\t}\r\n\t}\r\n\r\n\tget type() {\r\n\t\treturn \"context element\";\r\n\t}\r\n}\r\n\r\nmodule.exports = ContextElementDependency;\r\n","/home/travis/build/npmtest/node-npmtest-webpack/node_modules/webpack/lib/dependencies/ModuleDependency.js":"/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\n\"use strict\";\r\nconst Dependency = require(\"../Dependency\");\r\n\r\nclass ModuleDependency extends Dependency {\r\n\tconstructor(request) {\r\n\t\tsuper();\r\n\t\tthis.request = request;\r\n\t\tthis.userRequest = request;\r\n\t}\r\n\r\n\tisEqualResource(other) {\r\n\t\tif(!(other instanceof ModuleDependency))\r\n\t\t\treturn false;\r\n\r\n\t\treturn this.request === other.request;\r\n\t}\r\n}\r\n\r\nmodule.exports = ModuleDependency;\r\n","/home/travis/build/npmtest/node-npmtest-webpack/node_modules/webpack/lib/MultiCompiler.js":"/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\nvar Tapable = require(\"tapable\");\r\nvar asyncLib = require(\"async\");\r\nvar MultiWatching = require(\"./MultiWatching\");\r\nvar MultiStats = require(\"./MultiStats\");\r\n\r\nfunction MultiCompiler(compilers) {\r\n\tTapable.call(this);\r\n\tif(!Array.isArray(compilers)) {\r\n\t\tcompilers = Object.keys(compilers).map(function(name) {\r\n\t\t\tcompilers[name].name = name;\r\n\t\t\treturn compilers[name];\r\n\t\t});\r\n\t}\r\n\tthis.compilers = compilers;\r\n\r\n\tfunction delegateProperty(name) {\r\n\t\tObject.defineProperty(this, name, {\r\n\t\t\tconfigurable: false,\r\n\t\t\tget: function() {\r\n\t\t\t\tthrow new Error(\"Cannot read \" + name + \" of a MultiCompiler\");\r\n\t\t\t},\r\n\t\t\tset: function(value) {\r\n\t\t\t\tthis.compilers.forEach(function(compiler) {\r\n\t\t\t\t\tcompiler[name] = value;\r\n\t\t\t\t});\r\n\t\t\t}.bind(this)\r\n\t\t});\r\n\t}\r\n\tdelegateProperty.call(this, \"outputFileSystem\");\r\n\tdelegateProperty.call(this, \"inputFileSystem\");\r\n\r\n\tObject.defineProperty(this, \"outputPath\", {\r\n\t\tconfigurable: false,\r\n\t\tget: function() {\r\n\t\t\tvar commonPath = compilers[0].outputPath;\r\n\t\t\tfor(var i = 1; i < compilers.length; i++) {\r\n\t\t\t\twhile(compilers[i].outputPath.indexOf(commonPath) !== 0 && /[\\/\\\\]/.test(commonPath)) {\r\n\t\t\t\t\tcommonPath = commonPath.replace(/[\\/\\\\][^\\/\\\\]*$/, \"\");\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif(!commonPath && compilers[0].outputPath[0] === \"/\") return \"/\";\r\n\t\t\treturn commonPath;\r\n\t\t}\r\n\t});\r\n\r\n\tvar doneCompilers = 0;\r\n\tvar compilerStats = [];\r\n\tthis.compilers.forEach(function(compiler, idx) {\r\n\t\tvar compilerDone = false;\r\n\t\tcompiler.plugin(\"done\", function(stats) {\r\n\t\t\tif(!compilerDone) {\r\n\t\t\t\tcompilerDone = true;\r\n\t\t\t\tdoneCompilers++;\r\n\t\t\t}\r\n\t\t\tcompilerStats[idx] = stats;\r\n\t\t\tif(doneCompilers === this.compilers.length) {\r\n\t\t\t\tthis.applyPlugins(\"done\", new MultiStats(compilerStats));\r\n\t\t\t}\r\n\t\t}.bind(this));\r\n\t\tcompiler.plugin(\"invalid\", function() {\r\n\t\t\tif(compilerDone) {\r\n\t\t\t\tcompilerDone = false;\r\n\t\t\t\tdoneCompilers--;\r\n\t\t\t}\r\n\t\t\tthis.applyPlugins(\"invalid\");\r\n\t\t}.bind(this));\r\n\t}, this);\r\n}\r\nmodule.exports = MultiCompiler;\r\n\r\nMultiCompiler.prototype = Object.create(Tapable.prototype);\r\nMultiCompiler.prototype.constructor = MultiCompiler;\r\n\r\nfunction runWithDependencies(compilers, fn, callback) {\r\n\tvar fulfilledNames = {};\r\n\tvar remainingCompilers = compilers;\r\n\r\n\tfunction isDependencyFulfilled(d) {\r\n\t\treturn fulfilledNames[d];\r\n\t}\r\n\r\n\tfunction getReadyCompilers() {\r\n\t\tvar readyCompilers = [];\r\n\t\tvar list = remainingCompilers;\r\n\t\tremainingCompilers = [];\r\n\t\tfor(var i = 0; i < list.length; i++) {\r\n\t\t\tvar c = list[i];\r\n\t\t\tvar ready = !c.dependencies || c.dependencies.every(isDependencyFulfilled);\r\n\t\t\tif(ready)\r\n\t\t\t\treadyCompilers.push(c);\r\n\t\t\telse\r\n\t\t\t\tremainingCompilers.push(c);\r\n\t\t}\r\n\t\treturn readyCompilers;\r\n\t}\r\n\r\n\tfunction runCompilers(callback) {\r\n\t\tif(remainingCompilers.length === 0) return callback();\r\n\t\tasyncLib.map(getReadyCompilers(), function(compiler, callback) {\r\n\t\t\tfn(compiler, function(err) {\r\n\t\t\t\tif(err) return callback(err);\r\n\t\t\t\tfulfilledNames[compiler.name] = true;\r\n\t\t\t\trunCompilers(callback);\r\n\t\t\t});\r\n\t\t}, callback);\r\n\t}\r\n\trunCompilers(callback);\r\n}\r\n\r\nMultiCompiler.prototype.watch = function(watchOptions, handler) {\r\n\tvar watchings = [];\r\n\tvar allStats = this.compilers.map(function() {\r\n\t\treturn null;\r\n\t});\r\n\tvar compilerStatus = this.compilers.map(function() {\r\n\t\treturn false;\r\n\t});\r\n\trunWithDependencies(this.compilers, function(compiler, callback) {\r\n\t\tvar compilerIdx = this.compilers.indexOf(compiler);\r\n\t\tvar firstRun = true;\r\n\t\tvar watching = compiler.watch(Array.isArray(watchOptions) ? watchOptions[compilerIdx] : watchOptions, function(err, stats) {\r\n\t\t\tif(err)\r\n\t\t\t\thandler(err);\r\n\t\t\tif(stats) {\r\n\t\t\t\tallStats[compilerIdx] = stats;\r\n\t\t\t\tcompilerStatus[compilerIdx] = \"new\";\r\n\t\t\t\tif(compilerStatus.every(Boolean)) {\r\n\t\t\t\t\tvar freshStats = allStats.filter(function(s, idx) {\r\n\t\t\t\t\t\treturn compilerStatus[idx] === \"new\";\r\n\t\t\t\t\t});\r\n\t\t\t\t\tcompilerStatus.fill(true);\r\n\t\t\t\t\tvar multiStats = new MultiStats(freshStats);\r\n\t\t\t\t\thandler(null, multiStats);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif(firstRun && !err) {\r\n\t\t\t\tfirstRun = false;\r\n\t\t\t\tcallback();\r\n\t\t\t}\r\n\t\t});\r\n\t\twatchings.push(watching);\r\n\t}.bind(this), function() {\r\n\t\t// ignore\r\n\t});\r\n\r\n\treturn new MultiWatching(watchings, this);\r\n};\r\n\r\nMultiCompiler.prototype.run = function(callback) {\r\n\tvar allStats = this.compilers.map(function() {\r\n\t\treturn null;\r\n\t});\r\n\r\n\trunWithDependencies(this.compilers, function(compiler, callback) {\r\n\t\tvar compilerIdx = this.compilers.indexOf(compiler);\r\n\t\tcompiler.run(function(err, stats) {\r\n\t\t\tif(err) return callback(err);\r\n\t\t\tallStats[compilerIdx] = stats;\r\n\t\t\tcallback();\r\n\t\t});\r\n\t}.bind(this), function(err) {\r\n\t\tif(err) return callback(err);\r\n\t\tcallback(null, new MultiStats(allStats));\r\n\t});\r\n};\r\n\r\nMultiCompiler.prototype.purgeInputFileSystem = function() {\r\n\tthis.compilers.forEach(function(compiler) {\r\n\t\tif(compiler.inputFileSystem && compiler.inputFileSystem.purge)\r\n\t\t\tcompiler.inputFileSystem.purge();\r\n\t});\r\n};\r\n","/home/travis/build/npmtest/node-npmtest-webpack/node_modules/webpack/lib/MultiWatching.js":"/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\n\"use strict\";\r\n\r\nconst asyncLib = require(\"async\");\r\n\r\nclass MultiWatching {\r\n\tconstructor(watchings, compiler) {\r\n\t\tthis.watchings = watchings;\r\n\t\tthis.compiler = compiler;\r\n\t}\r\n\r\n\tinvalidate() {\r\n\t\tthis.watchings.forEach((watching) => watching.invalidate());\r\n\t}\r\n\r\n\tclose(callback) {\r\n\t\tif(callback === undefined) callback = () => { /*do nothing*/ };\r\n\r\n\t\tasyncLib.forEach(this.watchings, (watching, finishedCallback) => {\r\n\t\t\twatching.close(finishedCallback);\r\n\t\t}, err => {\r\n\t\t\tthis.compiler.applyPlugins(\"watch-close\");\r\n\t\t\tcallback(err);\r\n\t\t});\r\n\r\n\t}\r\n}\r\n\r\nmodule.exports = MultiWatching;\r\n","/home/travis/build/npmtest/node-npmtest-webpack/node_modules/webpack/lib/MultiStats.js":"/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\n\"use strict\";\r\n\r\nconst Stats = require(\"./Stats\");\r\n\r\nconst optionOrFallback = (optionValue, fallbackValue) => optionValue !== undefined ? optionValue : fallbackValue;\r\n\r\nclass MultiStats {\r\n\tconstructor(stats) {\r\n\t\tthis.stats = stats;\r\n\t\tthis.hash = stats.map(stat => stat.hash).join(\"\");\r\n\t}\r\n\r\n\thasErrors() {\r\n\t\treturn this.stats.map((stat) => stat.hasErrors()).reduce((a, b) => a || b, false);\r\n\t}\r\n\r\n\thasWarnings() {\r\n\t\treturn this.stats.map((stat) => stat.hasWarnings()).reduce((a, b) => a || b, false);\r\n\t}\r\n\r\n\ttoJson(options, forToString) {\r\n\t\tif(typeof options === \"boolean\" || typeof options === \"string\") {\r\n\t\t\toptions = Stats.presetToOptions(options);\r\n\t\t} else if(!options) {\r\n\t\t\toptions = {};\r\n\t\t}\r\n\t\tconst jsons = this.stats.map((stat, idx) => {\r\n\t\t\tconst childOptions = Stats.getChildOptions(options, idx);\r\n\t\t\tconst obj = stat.toJson(childOptions, forToString);\r\n\t\t\tobj.name = stat.compilation && stat.compilation.name;\r\n\t\t\treturn obj;\r\n\t\t});\r\n\t\tconst showVersion = typeof options.version === \"undefined\" ? jsons.every(j => j.version) : options.version !== false;\r\n\t\tconst showHash = typeof options.hash === \"undefined\" ? jsons.every(j => j.hash) : options.hash !== false;\r\n\t\tjsons.forEach(j => {\r\n\t\t\tif(showVersion)\r\n\t\t\t\tdelete j.version;\r\n\t\t});\r\n\t\tconst obj = {\r\n\t\t\terrors: jsons.reduce((arr, j) => {\r\n\t\t\t\treturn arr.concat(j.errors.map(msg => {\r\n\t\t\t\t\treturn `(${j.name}) ${msg}`;\r\n\t\t\t\t}));\r\n\t\t\t}, []),\r\n\t\t\twarnings: jsons.reduce((arr, j) => {\r\n\t\t\t\treturn arr.concat(j.warnings.map(msg => {\r\n\t\t\t\t\treturn `(${j.name}) ${msg}`;\r\n\t\t\t\t}));\r\n\t\t\t}, [])\r\n\t\t};\r\n\t\tif(showVersion)\r\n\t\t\tobj.version = require(\"../package.json\").version;\r\n\t\tif(showHash)\r\n\t\t\tobj.hash = this.hash;\r\n\t\tif(options.children !== false)\r\n\t\t\tobj.children = jsons;\r\n\t\treturn obj;\r\n\t}\r\n\r\n\ttoString(options) {\r\n\t\tif(typeof options === \"boolean\" || typeof options === \"string\") {\r\n\t\t\toptions = Stats.presetToOptions(options);\r\n\t\t} else if(!options) {\r\n\t\t\toptions = {};\r\n\t\t}\r\n\r\n\t\tconst useColors = optionOrFallback(options.colors, false);\r\n\r\n\t\tconst obj = this.toJson(options, true);\r\n\r\n\t\treturn Stats.jsonToString(obj, useColors);\r\n\t}\r\n}\r\n\r\nmodule.exports = MultiStats;\r\n","/home/travis/build/npmtest/node-npmtest-webpack/node_modules/webpack/lib/node/NodeEnvironmentPlugin.js":"/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\n\"use strict\";\r\n\r\nconst NodeWatchFileSystem = require(\"./NodeWatchFileSystem\");\r\nconst NodeOutputFileSystem = require(\"./NodeOutputFileSystem\");\r\nconst NodeJsInputFileSystem = require(\"enhanced-resolve/lib/NodeJsInputFileSystem\");\r\nconst CachedInputFileSystem = require(\"enhanced-resolve/lib/CachedInputFileSystem\");\r\n\r\nclass NodeEnvironmentPlugin {\r\n\tapply(compiler) {\r\n\t\tcompiler.inputFileSystem = new CachedInputFileSystem(new NodeJsInputFileSystem(), 60000);\r\n\t\tconst inputFileSystem = compiler.inputFileSystem;\r\n\t\tcompiler.outputFileSystem = new NodeOutputFileSystem();\r\n\t\tcompiler.watchFileSystem = new NodeWatchFileSystem(compiler.inputFileSystem);\r\n\t\tcompiler.plugin(\"before-run\", (compiler, callback) => {\r\n\t\t\tif(compiler.inputFileSystem === inputFileSystem)\r\n\t\t\t\tinputFileSystem.purge();\r\n\t\t\tcallback();\r\n\t\t});\r\n\t}\r\n}\r\nmodule.exports = NodeEnvironmentPlugin;\r\n","/home/travis/build/npmtest/node-npmtest-webpack/node_modules/webpack/lib/node/NodeWatchFileSystem.js":"/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\n\"use strict\";\r\n\r\nconst Watchpack = require(\"watchpack\");\r\n\r\nclass NodeWatchFileSystem {\r\n\tconstructor(inputFileSystem) {\r\n\t\tthis.inputFileSystem = inputFileSystem;\r\n\t\tthis.watcherOptions = {\r\n\t\t\taggregateTimeout: 0\r\n\t\t};\r\n\t\tthis.watcher = new Watchpack(this.watcherOptions);\r\n\t}\r\n\r\n\twatch(files, dirs, missing, startTime, options, callback, callbackUndelayed) {\r\n\t\tif(!Array.isArray(files))\r\n\t\t\tthrow new Error(\"Invalid arguments: 'files'\");\r\n\t\tif(!Array.isArray(dirs))\r\n\t\t\tthrow new Error(\"Invalid arguments: 'dirs'\");\r\n\t\tif(!Array.isArray(missing))\r\n\t\t\tthrow new Error(\"Invalid arguments: 'missing'\");\r\n\t\tif(typeof callback !== \"function\")\r\n\t\t\tthrow new Error(\"Invalid arguments: 'callback'\");\r\n\t\tif(typeof startTime !== \"number\" && startTime)\r\n\t\t\tthrow new Error(\"Invalid arguments: 'startTime'\");\r\n\t\tif(typeof options !== \"object\")\r\n\t\t\tthrow new Error(\"Invalid arguments: 'options'\");\r\n\t\tif(typeof callbackUndelayed !== \"function\" && callbackUndelayed)\r\n\t\t\tthrow new Error(\"Invalid arguments: 'callbackUndelayed'\");\r\n\t\tconst oldWatcher = this.watcher;\r\n\t\tthis.watcher = new Watchpack(options);\r\n\r\n\t\tif(callbackUndelayed)\r\n\t\t\tthis.watcher.once(\"change\", callbackUndelayed);\r\n\r\n\t\tthis.watcher.once(\"aggregated\", (changes, removals) => {\r\n\t\t\tchanges = changes.concat(removals);\r\n\t\t\tif(this.inputFileSystem && this.inputFileSystem.purge) {\r\n\t\t\t\tthis.inputFileSystem.purge(changes);\r\n\t\t\t}\r\n\t\t\tconst times = this.watcher.getTimes();\r\n\t\t\tcallback(null,\r\n\t\t\t\tchanges.filter(file => files.indexOf(file) >= 0).sort(),\r\n\t\t\t\tchanges.filter(file => dirs.indexOf(file) >= 0).sort(),\r\n\t\t\t\tchanges.filter(file => missing.indexOf(file) >= 0).sort(), times, times);\r\n\t\t});\r\n\r\n\t\tthis.watcher.watch(files.concat(missing), dirs, startTime);\r\n\r\n\t\tif(oldWatcher) {\r\n\t\t\toldWatcher.close();\r\n\t\t}\r\n\t\treturn {\r\n\t\t\tclose: () => {\r\n\t\t\t\tif(this.watcher) {\r\n\t\t\t\t\tthis.watcher.close();\r\n\t\t\t\t\tthis.watcher = null;\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tpause: () => {\r\n\t\t\t\tif(this.watcher) {\r\n\t\t\t\t\tthis.watcher.pause();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t};\r\n\t}\r\n}\r\n\r\nmodule.exports = NodeWatchFileSystem;\r\n","/home/travis/build/npmtest/node-npmtest-webpack/node_modules/webpack/lib/node/NodeOutputFileSystem.js":"/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\n\"use strict\";\r\n\r\nconst fs = require(\"fs\");\r\nconst path = require(\"path\");\r\nconst mkdirp = require(\"mkdirp\");\r\n\r\nclass NodeOutputFileSystem {\r\n\tconstructor() {\r\n\t\tthis.mkdirp = mkdirp;\r\n\t\tthis.mkdir = fs.mkdir.bind(fs);\r\n\t\tthis.rmdir = fs.rmdir.bind(fs);\r\n\t\tthis.unlink = fs.unlink.bind(fs);\r\n\t\tthis.writeFile = fs.writeFile.bind(fs);\r\n\t\tthis.join = path.join.bind(path);\r\n\t}\r\n}\r\n\r\nmodule.exports = NodeOutputFileSystem;\r\n","/home/travis/build/npmtest/node-npmtest-webpack/node_modules/webpack/lib/WebpackOptionsApply.js":"/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\n\"use strict\";\r\n\r\nconst OptionsApply = require(\"./OptionsApply\");\r\n\r\nconst LoaderTargetPlugin = require(\"./LoaderTargetPlugin\");\r\nconst FunctionModulePlugin = require(\"./FunctionModulePlugin\");\r\nconst EvalDevToolModulePlugin = require(\"./EvalDevToolModulePlugin\");\r\nconst SourceMapDevToolPlugin = require(\"./SourceMapDevToolPlugin\");\r\nconst EvalSourceMapDevToolPlugin = require(\"./EvalSourceMapDevToolPlugin\");\r\n\r\nconst EntryOptionPlugin = require(\"./EntryOptionPlugin\");\r\nconst RecordIdsPlugin = require(\"./RecordIdsPlugin\");\r\n\r\nconst APIPlugin = require(\"./APIPlugin\");\r\nconst ConstPlugin = require(\"./ConstPlugin\");\r\nconst RequireJsStuffPlugin = require(\"./RequireJsStuffPlugin\");\r\nconst NodeStuffPlugin = require(\"./NodeStuffPlugin\");\r\nconst CompatibilityPlugin = require(\"./CompatibilityPlugin\");\r\n\r\nconst TemplatedPathPlugin = require(\"./TemplatedPathPlugin\");\r\nconst WarnCaseSensitiveModulesPlugin = require(\"./WarnCaseSensitiveModulesPlugin\");\r\nconst UseStrictPlugin = require(\"./UseStrictPlugin\");\r\n\r\nconst LoaderPlugin = require(\"./dependencies/LoaderPlugin\");\r\nconst CommonJsPlugin = require(\"./dependencies/CommonJsPlugin\");\r\nconst HarmonyModulesPlugin = require(\"./dependencies/HarmonyModulesPlugin\");\r\nconst SystemPlugin = require(\"./dependencies/SystemPlugin\");\r\nconst ImportPlugin = require(\"./dependencies/ImportPlugin\");\r\nconst AMDPlugin = require(\"./dependencies/AMDPlugin\");\r\nconst RequireContextPlugin = require(\"./dependencies/RequireContextPlugin\");\r\nconst RequireEnsurePlugin = require(\"./dependencies/RequireEnsurePlugin\");\r\nconst RequireIncludePlugin = require(\"./dependencies/RequireIncludePlugin\");\r\n\r\nconst EnsureChunkConditionsPlugin = require(\"./optimize/EnsureChunkConditionsPlugin\");\r\nconst RemoveParentModulesPlugin = require(\"./optimize/RemoveParentModulesPlugin\");\r\nconst RemoveEmptyChunksPlugin = require(\"./optimize/RemoveEmptyChunksPlugin\");\r\nconst MergeDuplicateChunksPlugin = require(\"./optimize/MergeDuplicateChunksPlugin\");\r\nconst FlagIncludedChunksPlugin = require(\"./optimize/FlagIncludedChunksPlugin\");\r\nconst OccurrenceOrderPlugin = require(\"./optimize/OccurrenceOrderPlugin\");\r\nconst FlagDependencyUsagePlugin = require(\"./FlagDependencyUsagePlugin\");\r\nconst FlagDependencyExportsPlugin = require(\"./FlagDependencyExportsPlugin\");\r\nconst SizeLimitsPlugin = require(\"./performance/SizeLimitsPlugin\");\r\n\r\nconst ResolverFactory = require(\"enhanced-resolve\").ResolverFactory;\r\n\r\nclass WebpackOptionsApply extends OptionsApply {\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t}\r\n\r\n\tprocess(options, compiler) {\r\n\t\tlet ExternalsPlugin;\r\n\t\tcompiler.outputPath = options.output.path;\r\n\t\tcompiler.recordsInputPath = options.recordsInputPath || options.recordsPath;\r\n\t\tcompiler.recordsOutputPath = options.recordsOutputPath || options.recordsPath;\r\n\t\tcompiler.name = options.name;\r\n\t\tcompiler.dependencies = options.dependencies;\r\n\t\tif(typeof options.target === \"string\") {\r\n\t\t\tlet JsonpTemplatePlugin;\r\n\t\t\tlet NodeSourcePlugin;\r\n\t\t\tlet NodeTargetPlugin;\r\n\t\t\tlet NodeTemplatePlugin;\r\n\r\n\t\t\tswitch(options.target) {\r\n\t\t\t\tcase \"web\":\r\n\t\t\t\t\tJsonpTemplatePlugin = require(\"./JsonpTemplatePlugin\");\r\n\t\t\t\t\tNodeSourcePlugin = require(\"./node/NodeSourcePlugin\");\r\n\t\t\t\t\tcompiler.apply(\r\n\t\t\t\t\t\tnew JsonpTemplatePlugin(options.output),\r\n\t\t\t\t\t\tnew FunctionModulePlugin(options.output),\r\n\t\t\t\t\t\tnew NodeSourcePlugin(options.node),\r\n\t\t\t\t\t\tnew LoaderTargetPlugin(\"web\")\r\n\t\t\t\t\t);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"webworker\":\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tlet WebWorkerTemplatePlugin = require(\"./webworker/WebWorkerTemplatePlugin\");\r\n\t\t\t\t\t\tNodeSourcePlugin = require(\"./node/NodeSourcePlugin\");\r\n\t\t\t\t\t\tcompiler.apply(\r\n\t\t\t\t\t\t\tnew WebWorkerTemplatePlugin(),\r\n\t\t\t\t\t\t\tnew FunctionModulePlugin(options.output),\r\n\t\t\t\t\t\t\tnew NodeSourcePlugin(options.node),\r\n\t\t\t\t\t\t\tnew LoaderTargetPlugin(\"webworker\")\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\tcase \"node\":\r\n\t\t\t\tcase \"async-node\":\r\n\t\t\t\t\tNodeTemplatePlugin = require(\"./node/NodeTemplatePlugin\");\r\n\t\t\t\t\tNodeTargetPlugin = require(\"./node/NodeTargetPlugin\");\r\n\t\t\t\t\tcompiler.apply(\r\n\t\t\t\t\t\tnew NodeTemplatePlugin({\r\n\t\t\t\t\t\t\tasyncChunkLoading: options.target === \"async-node\"\r\n\t\t\t\t\t\t}),\r\n\t\t\t\t\t\tnew FunctionModulePlugin(options.output),\r\n\t\t\t\t\t\tnew NodeTargetPlugin(),\r\n\t\t\t\t\t\tnew LoaderTargetPlugin(\"node\")\r\n\t\t\t\t\t);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"node-webkit\":\r\n\t\t\t\t\tJsonpTemplatePlugin = require(\"./JsonpTemplatePlugin\");\r\n\t\t\t\t\tNodeTargetPlugin = require(\"./node/NodeTargetPlugin\");\r\n\t\t\t\t\tExternalsPlugin = require(\"./ExternalsPlugin\");\r\n\t\t\t\t\tcompiler.apply(\r\n\t\t\t\t\t\tnew JsonpTemplatePlugin(options.output),\r\n\t\t\t\t\t\tnew FunctionModulePlugin(options.output),\r\n\t\t\t\t\t\tnew NodeTargetPlugin(),\r\n\t\t\t\t\t\tnew ExternalsPlugin(\"commonjs\", \"nw.gui\"),\r\n\t\t\t\t\t\tnew LoaderTargetPlugin(\"node-webkit\")\r\n\t\t\t\t\t);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"atom\":\r\n\t\t\t\tcase \"electron\":\r\n\t\t\t\tcase \"electron-main\":\r\n\t\t\t\t\tNodeTemplatePlugin = require(\"./node/NodeTemplatePlugin\");\r\n\t\t\t\t\tNodeTargetPlugin = require(\"./node/NodeTargetPlugin\");\r\n\t\t\t\t\tExternalsPlugin = require(\"./ExternalsPlugin\");\r\n\t\t\t\t\tcompiler.apply(\r\n\t\t\t\t\t\tnew NodeTemplatePlugin({\r\n\t\t\t\t\t\t\tasyncChunkLoading: true\r\n\t\t\t\t\t\t}),\r\n\t\t\t\t\t\tnew FunctionModulePlugin(options.output),\r\n\t\t\t\t\t\tnew NodeTargetPlugin(),\r\n\t\t\t\t\t\tnew ExternalsPlugin(\"commonjs\", [\r\n\t\t\t\t\t\t\t\"app\",\r\n\t\t\t\t\t\t\t\"auto-updater\",\r\n\t\t\t\t\t\t\t\"browser-window\",\r\n\t\t\t\t\t\t\t\"content-tracing\",\r\n\t\t\t\t\t\t\t\"dialog\",\r\n\t\t\t\t\t\t\t\"electron\",\r\n\t\t\t\t\t\t\t\"global-shortcut\",\r\n\t\t\t\t\t\t\t\"ipc\",\r\n\t\t\t\t\t\t\t\"ipc-main\",\r\n\t\t\t\t\t\t\t\"menu\",\r\n\t\t\t\t\t\t\t\"menu-item\",\r\n\t\t\t\t\t\t\t\"power-monitor\",\r\n\t\t\t\t\t\t\t\"power-save-blocker\",\r\n\t\t\t\t\t\t\t\"protocol\",\r\n\t\t\t\t\t\t\t\"session\",\r\n\t\t\t\t\t\t\t\"web-contents\",\r\n\t\t\t\t\t\t\t\"tray\",\r\n\t\t\t\t\t\t\t\"clipboard\",\r\n\t\t\t\t\t\t\t\"crash-reporter\",\r\n\t\t\t\t\t\t\t\"native-image\",\r\n\t\t\t\t\t\t\t\"screen\",\r\n\t\t\t\t\t\t\t\"shell\"\r\n\t\t\t\t\t\t]),\r\n\t\t\t\t\t\tnew LoaderTargetPlugin(options.target)\r\n\t\t\t\t\t);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"electron-renderer\":\r\n\t\t\t\t\tJsonpTemplatePlugin = require(\"./JsonpTemplatePlugin\");\r\n\t\t\t\t\tNodeTargetPlugin = require(\"./node/NodeTargetPlugin\");\r\n\t\t\t\t\tExternalsPlugin = require(\"./ExternalsPlugin\");\r\n\t\t\t\t\tcompiler.apply(\r\n\t\t\t\t\t\tnew JsonpTemplatePlugin(options.output),\r\n\t\t\t\t\t\tnew FunctionModulePlugin(options.output),\r\n\t\t\t\t\t\tnew NodeTargetPlugin(),\r\n\t\t\t\t\t\tnew ExternalsPlugin(\"commonjs\", [\r\n\t\t\t\t\t\t\t\"desktop-capturer\",\r\n\t\t\t\t\t\t\t\"electron\",\r\n\t\t\t\t\t\t\t\"ipc\",\r\n\t\t\t\t\t\t\t\"ipc-renderer\",\r\n\t\t\t\t\t\t\t\"remote\",\r\n\t\t\t\t\t\t\t\"web-frame\",\r\n\t\t\t\t\t\t\t\"clipboard\",\r\n\t\t\t\t\t\t\t\"crash-reporter\",\r\n\t\t\t\t\t\t\t\"native-image\",\r\n\t\t\t\t\t\t\t\"screen\",\r\n\t\t\t\t\t\t\t\"shell\"\r\n\t\t\t\t\t\t]),\r\n\t\t\t\t\t\tnew LoaderTargetPlugin(options.target)\r\n\t\t\t\t\t);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tthrow new Error(\"Unsupported target '\" + options.target + \"'.\");\r\n\t\t\t}\r\n\t\t} else if(options.target !== false) {\r\n\t\t\toptions.target(compiler);\r\n\t\t} else {\r\n\t\t\tthrow new Error(\"Unsupported target '\" + options.target + \"'.\");\r\n\t\t}\r\n\r\n\t\tif(options.output.library || options.output.libraryTarget !== \"var\") {\r\n\t\t\tlet LibraryTemplatePlugin = require(\"./LibraryTemplatePlugin\");\r\n\t\t\tcompiler.apply(new LibraryTemplatePlugin(options.output.library, options.output.libraryTarget, options.output.umdNamedDefine, options.output.auxiliaryComment || \"\"));\r\n\t\t}\r\n\t\tif(options.externals) {\r\n\t\t\tExternalsPlugin = require(\"./ExternalsPlugin\");\r\n\t\t\tcompiler.apply(new ExternalsPlugin(options.output.libraryTarget, options.externals));\r\n\t\t}\r\n\t\tlet noSources;\r\n\t\tlet legacy;\r\n\t\tlet modern;\r\n\t\tlet comment;\r\n\t\tif(options.devtool && (options.devtool.indexOf(\"sourcemap\") >= 0 || options.devtool.indexOf(\"source-map\") >= 0)) {\r\n\t\t\tconst hidden = options.devtool.indexOf(\"hidden\") >= 0;\r\n\t\t\tconst inline = options.devtool.indexOf(\"inline\") >= 0;\r\n\t\t\tconst evalWrapped = options.devtool.indexOf(\"eval\") >= 0;\r\n\t\t\tconst cheap = options.devtool.indexOf(\"cheap\") >= 0;\r\n\t\t\tconst moduleMaps = options.devtool.indexOf(\"module\") >= 0;\r\n\t\t\tnoSources = options.devtool.indexOf(\"nosources\") >= 0;\r\n\t\t\tlegacy = options.devtool.indexOf(\"@\") >= 0;\r\n\t\t\tmodern = options.devtool.indexOf(\"#\") >= 0;\r\n\t\t\tcomment = legacy && modern ? \"\\n/*\\n//@ sourceMappingURL=[url]\\n//# sourceMappingURL=[url]\\n*/\" :\r\n\t\t\t\tlegacy ? \"\\n/*\\n//@ sourceMappingURL=[url]\\n*/\" :\r\n\t\t\t\tmodern ? \"\\n//# sourceMappingURL=[url]\" :\r\n\t\t\t\tnull;\r\n\t\t\tlet Plugin = evalWrapped ? EvalSourceMapDevToolPlugin : SourceMapDevToolPlugin;\r\n\t\t\tcompiler.apply(new Plugin({\r\n\t\t\t\tfilename: inline ? null : options.output.sourceMapFilename,\r\n\t\t\t\tmoduleFilenameTemplate: options.output.devtoolModuleFilenameTemplate,\r\n\t\t\t\tfallbackModuleFilenameTemplate: options.output.devtoolFallbackModuleFilenameTemplate,\r\n\t\t\t\tappend: hidden ? false : comment,\r\n\t\t\t\tmodule: moduleMaps ? true : cheap ? false : true,\r\n\t\t\t\tcolumns: cheap ? false : true,\r\n\t\t\t\tlineToLine: options.output.devtoolLineToLine,\r\n\t\t\t\tnoSources: noSources,\r\n\t\t\t}));\r\n\t\t} else if(options.devtool && options.devtool.indexOf(\"eval\") >= 0) {\r\n\t\t\tlegacy = options.devtool.indexOf(\"@\") >= 0;\r\n\t\t\tmodern = options.devtool.indexOf(\"#\") >= 0;\r\n\t\t\tcomment = legacy && modern ? \"\\n//@ sourceURL=[url]\\n//# sourceURL=[url]\" :\r\n\t\t\t\tlegacy ? \"\\n//@ sourceURL=[url]\" :\r\n\t\t\t\tmodern ? \"\\n//# sourceURL=[url]\" :\r\n\t\t\t\tnull;\r\n\t\t\tcompiler.apply(new EvalDevToolModulePlugin(comment, options.output.devtoolModuleFilenameTemplate));\r\n\t\t}\r\n\r\n\t\tcompiler.apply(new EntryOptionPlugin());\r\n\t\tcompiler.applyPluginsBailResult(\"entry-option\", options.context, options.entry);\r\n\r\n\t\tcompiler.apply(\r\n\t\t\tnew CompatibilityPlugin(),\r\n\t\t\tnew HarmonyModulesPlugin(options.module),\r\n\t\t\tnew AMDPlugin(options.module, options.amd || {}),\r\n\t\t\tnew CommonJsPlugin(options.module),\r\n\t\t\tnew LoaderPlugin(),\r\n\t\t\tnew NodeStuffPlugin(options.node),\r\n\t\t\tnew RequireJsStuffPlugin(),\r\n\t\t\tnew APIPlugin(),\r\n\t\t\tnew ConstPlugin(),\r\n\t\t\tnew UseStrictPlugin(),\r\n\t\t\tnew RequireIncludePlugin(),\r\n\t\t\tnew RequireEnsurePlugin(),\r\n\t\t\tnew RequireContextPlugin(options.resolve.modules, options.resolve.extensions),\r\n\t\t\tnew ImportPlugin(options.module),\r\n\t\t\tnew SystemPlugin(options.module)\r\n\t\t);\r\n\r\n\t\tcompiler.apply(\r\n\t\t\tnew EnsureChunkConditionsPlugin(),\r\n\t\t\tnew RemoveParentModulesPlugin(),\r\n\t\t\tnew RemoveEmptyChunksPlugin(),\r\n\t\t\tnew MergeDuplicateChunksPlugin(),\r\n\t\t\tnew FlagIncludedChunksPlugin(),\r\n\t\t\tnew OccurrenceOrderPlugin(true),\r\n\t\t\tnew FlagDependencyExportsPlugin(),\r\n\t\t\tnew FlagDependencyUsagePlugin()\r\n\t\t);\r\n\r\n\t\tif(options.performance) {\r\n\t\t\tcompiler.apply(new SizeLimitsPlugin(options.performance));\r\n\t\t}\r\n\r\n\t\tcompiler.apply(new TemplatedPathPlugin());\r\n\r\n\t\tcompiler.apply(new RecordIdsPlugin());\r\n\r\n\t\tcompiler.apply(new WarnCaseSensitiveModulesPlugin());\r\n\r\n\t\tif(options.cache) {\r\n\t\t\tlet CachePlugin = require(\"./CachePlugin\");\r\n\t\t\tcompiler.apply(new CachePlugin(typeof options.cache === \"object\" ? options.cache : null));\r\n\t\t}\r\n\r\n\t\tcompiler.applyPlugins(\"after-plugins\", compiler);\r\n\t\tif(!compiler.inputFileSystem) throw new Error(\"No input filesystem provided\");\r\n\t\tcompiler.resolvers.normal = ResolverFactory.createResolver(Object.assign({\r\n\t\t\tfileSystem: compiler.inputFileSystem\r\n\t\t}, options.resolve));\r\n\t\tcompiler.resolvers.context = ResolverFactory.createResolver(Object.assign({\r\n\t\t\tfileSystem: compiler.inputFileSystem,\r\n\t\t\tresolveToContext: true\r\n\t\t}, options.resolve));\r\n\t\tcompiler.resolvers.loader = ResolverFactory.createResolver(Object.assign({\r\n\t\t\tfileSystem: compiler.inputFileSystem\r\n\t\t}, options.resolveLoader));\r\n\t\tcompiler.applyPlugins(\"after-resolvers\", compiler);\r\n\t\treturn options;\r\n\t}\r\n}\r\n\r\nmodule.exports = WebpackOptionsApply;\r\n","/home/travis/build/npmtest/node-npmtest-webpack/node_modules/webpack/lib/OptionsApply.js":"/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\n\"use strict\";\r\n\r\nclass OptionsApply {\r\n\tprocess(options, compiler) {}\r\n}\r\nmodule.exports = OptionsApply;\r\n","/home/travis/build/npmtest/node-npmtest-webpack/node_modules/webpack/lib/LoaderTargetPlugin.js":"/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\n\"use strict\";\r\n\r\nclass LoaderTargetPlugin {\r\n\tconstructor(target) {\r\n\t\tthis.target = target;\r\n\t}\r\n\r\n\tapply(compiler) {\r\n\t\tcompiler.plugin(\"compilation\", (compilation) => {\r\n\t\t\tcompilation.plugin(\"normal-module-loader\", (loaderContext) => loaderContext.target = this.target);\r\n\t\t});\r\n\t}\r\n}\r\n\r\nmodule.exports = LoaderTargetPlugin;\r\n","/home/travis/build/npmtest/node-npmtest-webpack/node_modules/webpack/lib/FunctionModulePlugin.js":"/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\n\"use strict\";\r\n\r\nconst FunctionModuleTemplatePlugin = require(\"./FunctionModuleTemplatePlugin\");\r\nconst RequestShortener = require(\"./RequestShortener\");\r\n\r\nclass FunctionModulePlugin {\r\n\tconstructor(options, requestShortener) {\r\n\t\tthis.options = options;\r\n\t\tthis.requestShortener = requestShortener;\r\n\t}\r\n\r\n\tapply(compiler) {\r\n\t\tcompiler.plugin(\"compilation\", (compilation) => {\r\n\t\t\tcompilation.moduleTemplate.requestShortener = this.requestShortener || new RequestShortener(compiler.context);\r\n\t\t\tcompilation.moduleTemplate.apply(new FunctionModuleTemplatePlugin());\r\n\t\t});\r\n\t}\r\n}\r\n\r\nmodule.exports = FunctionModulePlugin;\r\n","/home/travis/build/npmtest/node-npmtest-webpack/node_modules/webpack/lib/FunctionModuleTemplatePlugin.js":"/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\n\"use strict\";\r\n\r\nconst ConcatSource = require(\"webpack-sources\").ConcatSource;\r\n\r\nclass FunctionModuleTemplatePlugin {\r\n\tapply(moduleTemplate) {\r\n\t\tmoduleTemplate.plugin(\"render\", function(moduleSource, module) {\r\n\t\t\tconst source = new ConcatSource();\r\n\t\t\tconst defaultArguments = [module.moduleArgument || \"module\", module.exportsArgument || \"exports\"];\r\n\t\t\tif((module.arguments && module.arguments.length !== 0) || module.hasDependencies(d => d.requireWebpackRequire !== false)) {\r\n\t\t\t\tdefaultArguments.push(\"__webpack_require__\");\r\n\t\t\t}\r\n\t\t\tsource.add(\"/***/ (function(\" + defaultArguments.concat(module.arguments || []).join(\", \") + \") {\\n\\n\");\r\n\t\t\tif(module.strict) source.add(\"\\\"use strict\\\";\\n\");\r\n\t\t\tsource.add(moduleSource);\r\n\t\t\tsource.add(\"\\n\\n/***/ })\");\r\n\t\t\treturn source;\r\n\t\t});\r\n\r\n\t\tmoduleTemplate.plugin(\"package\", function(moduleSource, module) {\r\n\t\t\tif(this.outputOptions.pathinfo) {\r\n\t\t\t\tconst source = new ConcatSource();\r\n\t\t\t\tconst req = module.readableIdentifier(this.requestShortener);\r\n\t\t\t\tif(Array.isArray(module.providedExports))\r\n\t\t\t\t\tsource.add(\"/* exports provided: \" + module.providedExports.join(\", \") + \" */\\n\");\r\n\t\t\t\telse if(module.providedExports)\r\n\t\t\t\t\tsource.add(\"/* unknown exports provided */\\n\");\r\n\t\t\t\tif(Array.isArray(module.usedExports))\r\n\t\t\t\t\tsource.add(\"/* exports used: \" + module.usedExports.join(\", \") + \" */\\n\");\r\n\t\t\t\telse if(module.usedExports)\r\n\t\t\t\t\tsource.add(\"/* all exports used */\\n\");\r\n\t\t\t\tsource.add(\"/*!****\" + req.replace(/./g, \"*\") + \"****!*\\\\\\n\");\r\n\t\t\t\tsource.add(\"  !*** \" + req.replace(/\\*\\//g, \"*_/\") + \" ***!\\n\");\r\n\t\t\t\tsource.add(\"  \\\\****\" + req.replace(/./g, \"*\") + \"****/\\n\");\r\n\t\t\t\tsource.add(moduleSource);\r\n\t\t\t\treturn source;\r\n\t\t\t}\r\n\t\t\treturn moduleSource;\r\n\t\t});\r\n\r\n\t\tmoduleTemplate.plugin(\"hash\", function(hash) {\r\n\t\t\thash.update(\"FunctionModuleTemplatePlugin\");\r\n\t\t\thash.update(\"2\");\r\n\t\t});\r\n\t}\r\n}\r\nmodule.exports = FunctionModuleTemplatePlugin;\r\n","/home/travis/build/npmtest/node-npmtest-webpack/node_modules/webpack/lib/EvalDevToolModulePlugin.js":"/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\n\"use strict\";\r\n\r\nconst EvalDevToolModuleTemplatePlugin = require(\"./EvalDevToolModuleTemplatePlugin\");\r\n\r\nclass EvalDevToolModulePlugin {\r\n\tconstructor(sourceUrlComment, moduleFilenameTemplate) {\r\n\t\tthis.sourceUrlComment = sourceUrlComment;\r\n\t\tthis.moduleFilenameTemplate = moduleFilenameTemplate;\r\n\t}\r\n\r\n\tapply(compiler) {\r\n\t\tcompiler.plugin(\"compilation\", (compilation) => {\r\n\t\t\tcompilation.moduleTemplate.apply(new EvalDevToolModuleTemplatePlugin(this.sourceUrlComment, this.moduleFilenameTemplate));\r\n\t\t});\r\n\t}\r\n}\r\n\r\nmodule.exports = EvalDevToolModulePlugin;\r\n","/home/travis/build/npmtest/node-npmtest-webpack/node_modules/webpack/lib/EvalDevToolModuleTemplatePlugin.js":"/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\n\"use strict\";\r\n\r\nconst RawSource = require(\"webpack-sources\").RawSource;\r\nconst ModuleFilenameHelpers = require(\"./ModuleFilenameHelpers\");\r\n\r\nclass EvalDevToolModuleTemplatePlugin {\r\n\tconstructor(sourceUrlComment, moduleFilenameTemplate) {\r\n\t\tthis.sourceUrlComment = sourceUrlComment || \"\\n//# sourceURL=[url]\";\r\n\t\tthis.moduleFilenameTemplate = moduleFilenameTemplate || \"webpack:///[resourcePath]?[loaders]\";\r\n\t}\r\n\r\n\tapply(moduleTemplate) {\r\n\t\tmoduleTemplate.plugin(\"module\", (source, module) => {\r\n\t\t\tconst content = source.source();\r\n\t\t\tconst str = ModuleFilenameHelpers.createFilename(module, this.moduleFilenameTemplate, moduleTemplate.requestShortener);\r\n\t\t\tconst footer = [\"\\n\",\r\n\t\t\t\tModuleFilenameHelpers.createFooter(module, moduleTemplate.requestShortener),\r\n\t\t\t\tthis.sourceUrlComment.replace(/\\[url\\]/g, encodeURI(str).replace(/%2F/g, \"/\").replace(/%20/g, \"_\").replace(/%5E/g, \"^\").replace(/%5C/g, \"\\\\\").replace(/^\\//, \"\"))\r\n\t\t\t].join(\"\\n\");\r\n\t\t\treturn new RawSource(`eval(${JSON.stringify(content + footer)});`);\r\n\t\t});\r\n\t\tmoduleTemplate.plugin(\"hash\", hash => {\r\n\t\t\thash.update(\"EvalDevToolModuleTemplatePlugin\");\r\n\t\t\thash.update(\"2\");\r\n\t\t});\r\n\t}\r\n}\r\n\r\nmodule.exports = EvalDevToolModuleTemplatePlugin;\r\n","/home/travis/build/npmtest/node-npmtest-webpack/node_modules/webpack/lib/ModuleFilenameHelpers.js":"/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\n\"use strict\";\r\n\r\nconst ModuleFilenameHelpers = exports;\r\n\r\nModuleFilenameHelpers.ALL_LOADERS_RESOURCE = \"[all-loaders][resource]\";\r\nModuleFilenameHelpers.REGEXP_ALL_LOADERS_RESOURCE = /\\[all-?loaders\\]\\[resource\\]/gi;\r\nModuleFilenameHelpers.LOADERS_RESOURCE = \"[loaders][resource]\";\r\nModuleFilenameHelpers.REGEXP_LOADERS_RESOURCE = /\\[loaders\\]\\[resource\\]/gi;\r\nModuleFilenameHelpers.RESOURCE = \"[resource]\";\r\nModuleFilenameHelpers.REGEXP_RESOURCE = /\\[resource\\]/gi;\r\nModuleFilenameHelpers.ABSOLUTE_RESOURCE_PATH = \"[absolute-resource-path]\";\r\nModuleFilenameHelpers.REGEXP_ABSOLUTE_RESOURCE_PATH = /\\[abs(olute)?-?resource-?path\\]/gi;\r\nModuleFilenameHelpers.RESOURCE_PATH = \"[resource-path]\";\r\nModuleFilenameHelpers.REGEXP_RESOURCE_PATH = /\\[resource-?path\\]/gi;\r\nModuleFilenameHelpers.ALL_LOADERS = \"[all-loaders]\";\r\nModuleFilenameHelpers.REGEXP_ALL_LOADERS = /\\[all-?loaders\\]/gi;\r\nModuleFilenameHelpers.LOADERS = \"[loaders]\";\r\nModuleFilenameHelpers.REGEXP_LOADERS = /\\[loaders\\]/gi;\r\nModuleFilenameHelpers.QUERY = \"[query]\";\r\nModuleFilenameHelpers.REGEXP_QUERY = /\\[query\\]/gi;\r\nModuleFilenameHelpers.ID = \"[id]\";\r\nModuleFilenameHelpers.REGEXP_ID = /\\[id\\]/gi;\r\nModuleFilenameHelpers.HASH = \"[hash]\";\r\nModuleFilenameHelpers.REGEXP_HASH = /\\[hash\\]/gi;\r\n\r\nfunction getAfter(str, token) {\r\n\tconst idx = str.indexOf(token);\r\n\treturn idx < 0 ? \"\" : str.substr(idx);\r\n}\r\n\r\nfunction getBefore(str, token) {\r\n\tconst idx = str.lastIndexOf(token);\r\n\treturn idx < 0 ? \"\" : str.substr(0, idx);\r\n}\r\n\r\nfunction getHash(str) {\r\n\tconst hash = require(\"crypto\").createHash(\"md5\");\r\n\thash.update(str);\r\n\treturn hash.digest(\"hex\").substr(0, 4);\r\n}\r\n\r\nfunction asRegExp(test) {\r\n\tif(typeof test === \"string\") test = new RegExp(\"^\" + test.replace(/[-[\\]{}()*+?.,\\\\^$|#\\s]/g, \"\\\\$&\"));\r\n\treturn test;\r\n}\r\n\r\nModuleFilenameHelpers.createFilename = function createFilename(module, moduleFilenameTemplate, requestShortener) {\r\n\tlet absoluteResourcePath;\r\n\tlet hash;\r\n\tlet identifier;\r\n\tlet moduleId;\r\n\tlet shortIdentifier;\r\n\tif(module === undefined) module = \"\";\r\n\tif(typeof module === \"string\") {\r\n\t\tshortIdentifier = requestShortener.shorten(module);\r\n\t\tidentifier = shortIdentifier;\r\n\t\tmoduleId = \"\";\r\n\t\tabsoluteResourcePath = module.split(\"!\").pop();\r\n\t\thash = getHash(identifier);\r\n\t} else {\r\n\t\tshortIdentifier = module.readableIdentifier(requestShortener);\r\n\t\tidentifier = requestShortener.shorten(module.identifier());\r\n\t\tmoduleId = module.id;\r\n\t\tabsoluteResourcePath = module.identifier().split(\"!\").pop();\r\n\t\thash = getHash(identifier);\r\n\t}\r\n\tconst resource = shortIdentifier.split(\"!\").pop();\r\n\tconst loaders = getBefore(shortIdentifier, \"!\");\r\n\tconst allLoaders = getBefore(identifier, \"!\");\r\n\tconst query = getAfter(resource, \"?\");\r\n\tconst resourcePath = resource.substr(0, resource.length - query.length);\r\n\tif(typeof moduleFilenameTemplate === \"function\") {\r\n\t\treturn moduleFilenameTemplate({\r\n\t\t\tidentifier: identifier,\r\n\t\t\tshortIdentifier: shortIdentifier,\r\n\t\t\tresource: resource,\r\n\t\t\tresourcePath: resourcePath,\r\n\t\t\tabsoluteResourcePath: absoluteResourcePath,\r\n\t\t\tallLoaders: allLoaders,\r\n\t\t\tquery: query,\r\n\t\t\tmoduleId: moduleId,\r\n\t\t\thash: hash\r\n\t\t});\r\n\t}\r\n\treturn moduleFilenameTemplate\r\n\t\t.replace(ModuleFilenameHelpers.REGEXP_ALL_LOADERS_RESOURCE, identifier)\r\n\t\t.replace(ModuleFilenameHelpers.REGEXP_LOADERS_RESOURCE, shortIdentifier)\r\n\t\t.replace(ModuleFilenameHelpers.REGEXP_RESOURCE, resource)\r\n\t\t.replace(ModuleFilenameHelpers.REGEXP_RESOURCE_PATH, resourcePath)\r\n\t\t.replace(ModuleFilenameHelpers.REGEXP_ABSOLUTE_RESOURCE_PATH, absoluteResourcePath)\r\n\t\t.replace(ModuleFilenameHelpers.REGEXP_ALL_LOADERS, allLoaders)\r\n\t\t.replace(ModuleFilenameHelpers.REGEXP_LOADERS, loaders)\r\n\t\t.replace(ModuleFilenameHelpers.REGEXP_QUERY, query)\r\n\t\t.replace(ModuleFilenameHelpers.REGEXP_ID, moduleId)\r\n\t\t.replace(ModuleFilenameHelpers.REGEXP_HASH, hash);\r\n};\r\n\r\nModuleFilenameHelpers.createFooter = function createFooter(module, requestShortener) {\r\n\tif(!module) module = \"\";\r\n\tif(typeof module === \"string\") {\r\n\t\treturn [\r\n\t\t\t\"// WEBPACK FOOTER //\",\r\n\t\t\t`// ${requestShortener.shorten(module)}`\r\n\t\t].join(\"\\n\");\r\n\t} else {\r\n\t\treturn [\r\n\t\t\t\"//////////////////\",\r\n\t\t\t\"// WEBPACK FOOTER\",\r\n\t\t\t`// ${module.readableIdentifier(requestShortener)}`,\r\n\t\t\t`// module id = ${module.id}`,\r\n\t\t\t`// module chunks = ${module.chunks.map(c => c.id).join(\" \")}`\r\n\t\t].join(\"\\n\");\r\n\t}\r\n};\r\n\r\nModuleFilenameHelpers.replaceDuplicates = function replaceDuplicates(array, fn, comparator) {\r\n\tconst countMap = Object.create(null);\r\n\tconst posMap = Object.create(null);\r\n\tarray.forEach((item, idx) => {\r\n\t\tcountMap[item] = (countMap[item] || []);\r\n\t\tcountMap[item].push(idx);\r\n\t\tposMap[item] = 0;\r\n\t});\r\n\tif(comparator) {\r\n\t\tObject.keys(countMap).forEach(item => {\r\n\t\t\tcountMap[item].sort(comparator);\r\n\t\t});\r\n\t}\r\n\treturn array.map((item, i) => {\r\n\t\tif(countMap[item].length > 1) {\r\n\t\t\tif(comparator && countMap[item][0] === i)\r\n\t\t\t\treturn item;\r\n\t\t\treturn fn(item, i, posMap[item]++);\r\n\t\t} else return item;\r\n\t});\r\n};\r\n\r\nModuleFilenameHelpers.matchPart = function matchPart(str, test) {\r\n\tif(!test) return true;\r\n\ttest = asRegExp(test);\r\n\tif(Array.isArray(test)) {\r\n\t\treturn test.map(asRegExp).filter(function(regExp) {\r\n\t\t\treturn regExp.test(str);\r\n\t\t}).length > 0;\r\n\t} else {\r\n\t\treturn test.test(str);\r\n\t}\r\n};\r\n\r\nModuleFilenameHelpers.matchObject = function matchObject(obj, str) {\r\n\tif(obj.test)\r\n\t\tif(!ModuleFilenameHelpers.matchPart(str, obj.test)) return false;\r\n\tif(obj.include)\r\n\t\tif(!ModuleFilenameHelpers.matchPart(str, obj.include)) return false;\r\n\tif(obj.exclude)\r\n\t\tif(ModuleFilenameHelpers.matchPart(str, obj.exclude)) return false;\r\n\treturn true;\r\n};\r\n","/home/travis/build/npmtest/node-npmtest-webpack/node_modules/webpack/lib/SourceMapDevToolPlugin.js":"/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\n\"use strict\";\r\n\r\nconst path = require(\"path\");\r\nconst RequestShortener = require(\"./RequestShortener\");\r\nconst ConcatSource = require(\"webpack-sources\").ConcatSource;\r\nconst RawSource = require(\"webpack-sources\").RawSource;\r\nconst ModuleFilenameHelpers = require(\"./ModuleFilenameHelpers\");\r\nconst SourceMapDevToolModuleOptionsPlugin = require(\"./SourceMapDevToolModuleOptionsPlugin\");\r\n\r\nconst basename = (name) => {\r\n\tif(name.indexOf(\"/\") < 0) return name;\r\n\treturn name.substr(name.lastIndexOf(\"/\") + 1);\r\n};\r\n\r\nclass SourceMapDevToolPlugin {\r\n\tconstructor(options) {\r\n\t\tif(arguments.length > 1)\r\n\t\t\tthrow new Error(\"SourceMapDevToolPlugin only takes one argument (pass an options object)\");\r\n\t\t// TODO: remove in webpack 3\r\n\t\tif(typeof options === \"string\") {\r\n\t\t\toptions = {\r\n\t\t\t\tsourceMapFilename: options\r\n\t\t\t};\r\n\t\t}\r\n\t\tif(!options) options = {};\r\n\t\tthis.sourceMapFilename = options.filename;\r\n\t\tthis.sourceMappingURLComment = options.append === false ? false : options.append || \"\\n//# sourceMappingURL=[url]\";\r\n\t\tthis.moduleFilenameTemplate = options.moduleFilenameTemplate || \"webpack:///[resourcePath]\";\r\n\t\tthis.fallbackModuleFilenameTemplate = options.fallbackModuleFilenameTemplate || \"webpack:///[resourcePath]?[hash]\";\r\n\t\tthis.options = options;\r\n\t}\r\n\r\n\tapply(compiler) {\r\n\t\tconst sourceMapFilename = this.sourceMapFilename;\r\n\t\tconst sourceMappingURLComment = this.sourceMappingURLComment;\r\n\t\tconst moduleFilenameTemplate = this.moduleFilenameTemplate;\r\n\t\tconst fallbackModuleFilenameTemplate = this.fallbackModuleFilenameTemplate;\r\n\t\tconst requestShortener = new RequestShortener(compiler.context);\r\n\t\tconst options = this.options;\r\n\t\toptions.test = options.test || /\\.(js|css)($|\\?)/i;\r\n\t\tcompiler.plugin(\"compilation\", compilation => {\r\n\t\t\tnew SourceMapDevToolModuleOptionsPlugin(options).apply(compilation);\r\n\t\t\tcompilation.plugin(\"after-optimize-chunk-assets\", function(chunks) {\r\n\t\t\t\tlet allModules = [];\r\n\t\t\t\tlet allModuleFilenames = [];\r\n\t\t\t\tconst tasks = [];\r\n\t\t\t\tchunks.forEach(function(chunk) {\r\n\t\t\t\t\tchunk.files.filter(ModuleFilenameHelpers.matchObject.bind(undefined, options)).map(function(file) {\r\n\t\t\t\t\t\tconst asset = compilation.assets[file];\r\n\t\t\t\t\t\tif(asset.__SourceMapDevToolFile === file && asset.__SourceMapDevToolData) {\r\n\t\t\t\t\t\t\tconst data = asset.__SourceMapDevToolData;\r\n\t\t\t\t\t\t\tfor(const cachedFile in data) {\r\n\t\t\t\t\t\t\t\tcompilation.assets[cachedFile] = data[cachedFile];\r\n\t\t\t\t\t\t\t\tif(cachedFile !== file)\r\n\t\t\t\t\t\t\t\t\tchunk.files.push(cachedFile);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tlet source, sourceMap;\r\n\t\t\t\t\t\tif(asset.sourceAndMap) {\r\n\t\t\t\t\t\t\tconst sourceAndMap = asset.sourceAndMap(options);\r\n\t\t\t\t\t\t\tsourceMap = sourceAndMap.map;\r\n\t\t\t\t\t\t\tsource = sourceAndMap.source;\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tsourceMap = asset.map(options);\r\n\t\t\t\t\t\t\tsource = asset.source();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif(sourceMap) {\r\n\t\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\t\tchunk,\r\n\t\t\t\t\t\t\t\tfile,\r\n\t\t\t\t\t\t\t\tasset,\r\n\t\t\t\t\t\t\t\tsource,\r\n\t\t\t\t\t\t\t\tsourceMap\r\n\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}).filter(Boolean).map(task => {\r\n\t\t\t\t\t\tconst modules = task.sourceMap.sources.map(source => {\r\n\t\t\t\t\t\t\tconst module = compilation.findModule(source);\r\n\t\t\t\t\t\t\treturn module || source;\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t\tconst moduleFilenames = modules.map(module => ModuleFilenameHelpers.createFilename(module, moduleFilenameTemplate, requestShortener));\r\n\t\t\t\t\t\ttask.modules = modules;\r\n\t\t\t\t\t\ttask.moduleFilenames = moduleFilenames;\r\n\t\t\t\t\t\treturn task;\r\n\t\t\t\t\t}).forEach(task => {\r\n\t\t\t\t\t\tallModules = allModules.concat(task.modules);\r\n\t\t\t\t\t\tallModuleFilenames = allModuleFilenames.concat(task.moduleFilenames);\r\n\t\t\t\t\t\ttasks.push(task);\r\n\t\t\t\t\t});\r\n\t\t\t\t});\r\n\t\t\t\tallModuleFilenames = ModuleFilenameHelpers.replaceDuplicates(allModuleFilenames, (filename, i) => ModuleFilenameHelpers.createFilename(allModules[i], fallbackModuleFilenameTemplate, requestShortener), (ai, bi) => {\r\n\t\t\t\t\tlet a = allModules[ai];\r\n\t\t\t\t\tlet b = allModules[bi];\r\n\t\t\t\t\ta = !a ? \"\" : typeof a === \"string\" ? a : a.identifier();\r\n\t\t\t\t\tb = !b ? \"\" : typeof b === \"string\" ? b : b.identifier();\r\n\t\t\t\t\treturn a.length - b.length;\r\n\t\t\t\t});\r\n\t\t\t\tallModuleFilenames = ModuleFilenameHelpers.replaceDuplicates(allModuleFilenames, (filename, i, n) => {\r\n\t\t\t\t\tfor(let j = 0; j < n; j++)\r\n\t\t\t\t\t\tfilename += \"*\";\r\n\t\t\t\t\treturn filename;\r\n\t\t\t\t});\r\n\t\t\t\ttasks.forEach(task => {\r\n\t\t\t\t\ttask.moduleFilenames = allModuleFilenames.slice(0, task.moduleFilenames.length);\r\n\t\t\t\t\tallModuleFilenames = allModuleFilenames.slice(task.moduleFilenames.length);\r\n\t\t\t\t});\r\n\t\t\t\ttasks.forEach(function(task) {\r\n\t\t\t\t\tconst chunk = task.chunk;\r\n\t\t\t\t\tconst file = task.file;\r\n\t\t\t\t\tconst asset = task.asset;\r\n\t\t\t\t\tconst sourceMap = task.sourceMap;\r\n\t\t\t\t\tconst source = task.source;\r\n\t\t\t\t\tconst moduleFilenames = task.moduleFilenames;\r\n\t\t\t\t\tconst modules = task.modules;\r\n\t\t\t\t\tsourceMap.sources = moduleFilenames;\r\n\t\t\t\t\tif(sourceMap.sourcesContent && !options.noSources) {\r\n\t\t\t\t\t\tsourceMap.sourcesContent = sourceMap.sourcesContent.map((content, i) => `${content}\\n\\n\\n${ModuleFilenameHelpers.createFooter(modules[i], requestShortener)}`);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tsourceMap.sourcesContent = undefined;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tsourceMap.sourceRoot = options.sourceRoot || \"\";\r\n\t\t\t\t\tsourceMap.file = file;\r\n\t\t\t\t\tasset.__SourceMapDevToolFile = file;\r\n\t\t\t\t\tasset.__SourceMapDevToolData = {};\r\n\t\t\t\t\tlet currentSourceMappingURLComment = sourceMappingURLComment;\r\n\t\t\t\t\tif(currentSourceMappingURLComment !== false && /\\.css($|\\?)/i.test(file)) {\r\n\t\t\t\t\t\tcurrentSourceMappingURLComment = currentSourceMappingURLComment.replace(/^\\n\\/\\/(.*)$/, \"\\n/*$1*/\");\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif(sourceMapFilename) {\r\n\t\t\t\t\t\tlet filename = file;\r\n\t\t\t\t\t\tlet query = \"\";\r\n\t\t\t\t\t\tconst idx = filename.indexOf(\"?\");\r\n\t\t\t\t\t\tif(idx >= 0) {\r\n\t\t\t\t\t\t\tquery = filename.substr(idx);\r\n\t\t\t\t\t\t\tfilename = filename.substr(0, idx);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tconst sourceMapFile = compilation.getPath(sourceMapFilename, {\r\n\t\t\t\t\t\t\tchunk,\r\n\t\t\t\t\t\t\tfilename,\r\n\t\t\t\t\t\t\tquery,\r\n\t\t\t\t\t\t\tbasename: basename(filename)\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t\tconst sourceMapUrl = path.relative(path.dirname(file), sourceMapFile).replace(/\\\\/g, \"/\");\r\n\t\t\t\t\t\tif(currentSourceMappingURLComment !== false) {\r\n\t\t\t\t\t\t\tasset.__SourceMapDevToolData[file] = compilation.assets[file] = new ConcatSource(new RawSource(source), currentSourceMappingURLComment.replace(/\\[url\\]/g, sourceMapUrl));\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tasset.__SourceMapDevToolData[sourceMapFile] = compilation.assets[sourceMapFile] = new RawSource(JSON.stringify(sourceMap));\r\n\t\t\t\t\t\tchunk.files.push(sourceMapFile);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tasset.__SourceMapDevToolData[file] = compilation.assets[file] = new ConcatSource(new RawSource(source), currentSourceMappingURLComment\r\n\t\t\t\t\t\t\t.replace(/\\[map\\]/g, () => JSON.stringify(sourceMap))\r\n\t\t\t\t\t\t\t.replace(/\\[url\\]/g, () => `data:application/json;charset=utf-8;base64,${new Buffer(JSON.stringify(sourceMap), \"utf-8\").toString(\"base64\")}`) // eslint-disable-line\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n}\r\n\r\nmodule.exports = SourceMapDevToolPlugin;\r\n","/home/travis/build/npmtest/node-npmtest-webpack/node_modules/webpack/lib/SourceMapDevToolModuleOptionsPlugin.js":"/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\n\"use strict\";\r\n\r\nconst ModuleFilenameHelpers = require(\"./ModuleFilenameHelpers\");\r\n\r\nclass SourceMapDevToolModuleOptionsPlugin {\r\n\tconstructor(options) {\r\n\t\tthis.options = options;\r\n\t}\r\n\r\n\tapply(compilation) {\r\n\t\tconst options = this.options;\r\n\t\tif(options.module !== false) {\r\n\t\t\tcompilation.plugin(\"build-module\", module => {\r\n\t\t\t\tmodule.useSourceMap = true;\r\n\t\t\t});\r\n\t\t}\r\n\t\tif(options.lineToLine === true) {\r\n\t\t\tcompilation.plugin(\"build-module\", module => {\r\n\t\t\t\tmodule.lineToLine = true;\r\n\t\t\t});\r\n\t\t} else if(options.lineToLine) {\r\n\t\t\tcompilation.plugin(\"build-module\", module => {\r\n\t\t\t\tif(!module.resource) return;\r\n\t\t\t\tlet resourcePath = module.resource;\r\n\t\t\t\tconst idx = resourcePath.indexOf(\"?\");\r\n\t\t\t\tif(idx >= 0) resourcePath = resourcePath.substr(0, idx);\r\n\t\t\t\tmodule.lineToLine = ModuleFilenameHelpers.matchObject(options.lineToLine, resourcePath);\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n}\r\n\r\nmodule.exports = SourceMapDevToolModuleOptionsPlugin;\r\n","/home/travis/build/npmtest/node-npmtest-webpack/node_modules/webpack/lib/EvalSourceMapDevToolPlugin.js":"/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\n\"use strict\";\r\n\r\nconst EvalSourceMapDevToolModuleTemplatePlugin = require(\"./EvalSourceMapDevToolModuleTemplatePlugin\");\r\nconst SourceMapDevToolModuleOptionsPlugin = require(\"./SourceMapDevToolModuleOptionsPlugin\");\r\n\r\nclass EvalSourceMapDevToolPlugin {\r\n\tconstructor(options) {\r\n\t\tif(arguments.length > 1)\r\n\t\t\tthrow new Error(\"EvalSourceMapDevToolPlugin only takes one argument (pass an options object)\");\r\n\t\tif(typeof options === \"string\") {\r\n\t\t\toptions = {\r\n\t\t\t\tappend: options\r\n\t\t\t};\r\n\t\t}\r\n\t\tif(!options) options = {};\r\n\t\tthis.options = options;\r\n\t}\r\n\r\n\tapply(compiler) {\r\n\t\tconst options = this.options;\r\n\t\tcompiler.plugin(\"compilation\", (compilation) => {\r\n\t\t\tnew SourceMapDevToolModuleOptionsPlugin(options).apply(compilation);\r\n\t\t\tcompilation.moduleTemplate.apply(new EvalSourceMapDevToolModuleTemplatePlugin(compilation, options));\r\n\t\t});\r\n\t}\r\n}\r\n\r\nmodule.exports = EvalSourceMapDevToolPlugin;\r\n","/home/travis/build/npmtest/node-npmtest-webpack/node_modules/webpack/lib/EvalSourceMapDevToolModuleTemplatePlugin.js":"/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\n\"use strict\";\r\n\r\nconst RawSource = require(\"webpack-sources\").RawSource;\r\nconst ModuleFilenameHelpers = require(\"./ModuleFilenameHelpers\");\r\n\r\nclass EvalSourceMapDevToolModuleTemplatePlugin {\r\n\tconstructor(compilation, options) {\r\n\t\tthis.compilation = compilation;\r\n\t\tthis.sourceMapComment = options.append || \"//# sourceMappingURL=[url]\";\r\n\t\tthis.moduleFilenameTemplate = options.moduleFilenameTemplate || \"webpack:///[resource-path]?[hash]\";\r\n\t\tthis.options = options;\r\n\t}\r\n\r\n\tapply(moduleTemplate) {\r\n\t\tconst self = this;\r\n\t\tconst options = this.options;\r\n\t\tmoduleTemplate.plugin(\"module\", function(source, module) {\r\n\t\t\tif(source.__EvalSourceMapDevToolData)\r\n\t\t\t\treturn source.__EvalSourceMapDevToolData;\r\n\t\t\tlet sourceMap;\r\n\t\t\tlet content;\r\n\t\t\tif(source.sourceAndMap) {\r\n\t\t\t\tconst sourceAndMap = source.sourceAndMap(options);\r\n\t\t\t\tsourceMap = sourceAndMap.map;\r\n\t\t\t\tcontent = sourceAndMap.source;\r\n\t\t\t} else {\r\n\t\t\t\tsourceMap = source.map(options);\r\n\t\t\t\tcontent = source.source();\r\n\t\t\t}\r\n\t\t\tif(!sourceMap) {\r\n\t\t\t\treturn source;\r\n\t\t\t}\r\n\r\n\t\t\t// Clone (flat) the sourcemap to ensure that the mutations below do not persist.\r\n\t\t\tsourceMap = Object.keys(sourceMap).reduce(function(obj, key) {\r\n\t\t\t\tobj[key] = sourceMap[key];\r\n\t\t\t\treturn obj;\r\n\t\t\t}, {});\r\n\t\t\tconst modules = sourceMap.sources.map(function(source) {\r\n\t\t\t\tconst module = self.compilation.findModule(source);\r\n\t\t\t\treturn module || source;\r\n\t\t\t});\r\n\t\t\tlet moduleFilenames = modules.map(function(module) {\r\n\t\t\t\treturn ModuleFilenameHelpers.createFilename(module, self.moduleFilenameTemplate, this.requestShortener);\r\n\t\t\t}, this);\r\n\t\t\tmoduleFilenames = ModuleFilenameHelpers.replaceDuplicates(moduleFilenames, function(filename, i, n) {\r\n\t\t\t\tfor(let j = 0; j < n; j++)\r\n\t\t\t\t\tfilename += \"*\";\r\n\t\t\t\treturn filename;\r\n\t\t\t});\r\n\t\t\tsourceMap.sources = moduleFilenames;\r\n\t\t\tif(sourceMap.sourcesContent) {\r\n\t\t\t\tsourceMap.sourcesContent = sourceMap.sourcesContent.map(function(content, i) {\r\n\t\t\t\t\treturn `${content}\\n\\n\\n${ModuleFilenameHelpers.createFooter(modules[i], this.requestShortener)}`;\r\n\t\t\t\t}, this);\r\n\t\t\t}\r\n\t\t\tsourceMap.sourceRoot = options.sourceRoot || \"\";\r\n\t\t\tsourceMap.file = `${module.id}.js`;\r\n\r\n\t\t\tconst footer = self.sourceMapComment.replace(/\\[url\\]/g, `data:application/json;charset=utf-8;base64,${new Buffer(JSON.stringify(sourceMap), \"utf8\").toString(\"base64\")}`); //eslint-disable-line\r\n\t\t\tsource.__EvalSourceMapDevToolData = new RawSource(`eval(${JSON.stringify(content + footer)});`);\r\n\t\t\treturn source.__EvalSourceMapDevToolData;\r\n\t\t});\r\n\t\tmoduleTemplate.plugin(\"hash\", function(hash) {\r\n\t\t\thash.update(\"eval-source-map\");\r\n\t\t\thash.update(\"1\");\r\n\t\t});\r\n\t}\r\n}\r\nmodule.exports = EvalSourceMapDevToolModuleTemplatePlugin;\r\n","/home/travis/build/npmtest/node-npmtest-webpack/node_modules/webpack/lib/EntryOptionPlugin.js":"/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n\t*/\r\n\"use strict\";\r\n\r\nconst SingleEntryPlugin = require(\"./SingleEntryPlugin\");\r\nconst MultiEntryPlugin = require(\"./MultiEntryPlugin\");\r\nconst DynamicEntryPlugin = require(\"./DynamicEntryPlugin\");\r\n\r\nmodule.exports = class EntryOptionPlugin {\r\n\tapply(compiler) {\r\n\t\tcompiler.plugin(\"entry-option\", (context, entry) => {\r\n\t\t\tfunction itemToPlugin(item, name) {\r\n\t\t\t\tif(Array.isArray(item)) {\r\n\t\t\t\t\treturn new MultiEntryPlugin(context, item, name);\r\n\t\t\t\t} else {\r\n\t\t\t\t\treturn new SingleEntryPlugin(context, item, name);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif(typeof entry === \"string\" || Array.isArray(entry)) {\r\n\t\t\t\tcompiler.apply(itemToPlugin(entry, \"main\"));\r\n\t\t\t} else if(typeof entry === \"object\") {\r\n\t\t\t\tObject.keys(entry).forEach(name => compiler.apply(itemToPlugin(entry[name], name)));\r\n\t\t\t} else if(typeof entry === \"function\") {\r\n\t\t\t\tcompiler.apply(new DynamicEntryPlugin(context, entry));\r\n\t\t\t}\r\n\t\t\treturn true;\r\n\t\t});\r\n\t}\r\n};\r\n","/home/travis/build/npmtest/node-npmtest-webpack/node_modules/webpack/lib/SingleEntryPlugin.js":"/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\n\"use strict\";\r\nconst SingleEntryDependency = require(\"./dependencies/SingleEntryDependency\");\r\n\r\nclass SingleEntryPlugin {\r\n\tconstructor(context, entry, name) {\r\n\t\tthis.context = context;\r\n\t\tthis.entry = entry;\r\n\t\tthis.name = name;\r\n\t}\r\n\r\n\tapply(compiler) {\r\n\t\tcompiler.plugin(\"compilation\", (compilation, params) => {\r\n\t\t\tconst normalModuleFactory = params.normalModuleFactory;\r\n\r\n\t\t\tcompilation.dependencyFactories.set(SingleEntryDependency, normalModuleFactory);\r\n\t\t});\r\n\r\n\t\tcompiler.plugin(\"make\", (compilation, callback) => {\r\n\t\t\tconst dep = SingleEntryPlugin.createDependency(this.entry, this.name);\r\n\t\t\tcompilation.addEntry(this.context, dep, this.name, callback);\r\n\t\t});\r\n\t}\r\n\r\n\tstatic createDependency(entry, name) {\r\n\t\tconst dep = new SingleEntryDependency(entry);\r\n\t\tdep.loc = name;\r\n\t\treturn dep;\r\n\t}\r\n}\r\n\r\nmodule.exports = SingleEntryPlugin;\r\n","/home/travis/build/npmtest/node-npmtest-webpack/node_modules/webpack/lib/dependencies/SingleEntryDependency.js":"/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\n\"use strict\";\r\nconst ModuleDependency = require(\"./ModuleDependency\");\r\n\r\nclass SingleEntryDependency extends ModuleDependency {\r\n\tconstructor(request) {\r\n\t\tsuper(request);\r\n\t}\r\n\r\n\tget type() {\r\n\t\treturn \"single entry\";\r\n\t}\r\n}\r\n\r\nmodule.exports = SingleEntryDependency;\r\n","/home/travis/build/npmtest/node-npmtest-webpack/node_modules/webpack/lib/MultiEntryPlugin.js":"/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\n\"use strict\";\r\n\r\nconst MultiEntryDependency = require(\"./dependencies/MultiEntryDependency\");\r\nconst SingleEntryDependency = require(\"./dependencies/SingleEntryDependency\");\r\nconst MultiModuleFactory = require(\"./MultiModuleFactory\");\r\n\r\nmodule.exports = class MultiEntryPlugin {\r\n\tconstructor(context, entries, name) {\r\n\t\tthis.context = context;\r\n\t\tthis.entries = entries;\r\n\t\tthis.name = name;\r\n\t}\r\n\r\n\tapply(compiler) {\r\n\t\tcompiler.plugin(\"compilation\", (compilation, params) => {\r\n\t\t\tconst multiModuleFactory = new MultiModuleFactory();\r\n\t\t\tconst normalModuleFactory = params.normalModuleFactory;\r\n\r\n\t\t\tcompilation.dependencyFactories.set(MultiEntryDependency, multiModuleFactory);\r\n\t\t\tcompilation.dependencyFactories.set(SingleEntryDependency, normalModuleFactory);\r\n\t\t});\r\n\t\tcompiler.plugin(\"make\", (compilation, callback) => {\r\n\t\t\tconst dep = MultiEntryPlugin.createDependency(this.entries, this.name);\r\n\t\t\tcompilation.addEntry(this.context, dep, this.name, callback);\r\n\t\t});\r\n\t}\r\n\r\n\tstatic createDependency(entries, name) {\r\n\t\treturn new MultiEntryDependency(entries.map((e, idx) => {\r\n\t\t\tconst dep = new SingleEntryDependency(e);\r\n\t\t\tdep.loc = name + \":\" + (100000 + idx);\r\n\t\t\treturn dep;\r\n\t\t}), name);\r\n\t}\r\n};\r\n","/home/travis/build/npmtest/node-npmtest-webpack/node_modules/webpack/lib/dependencies/MultiEntryDependency.js":"/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\n\"use strict\";\r\nconst Dependency = require(\"../Dependency\");\r\n\r\nclass MultiEntryDependency extends Dependency {\r\n\tconstructor(dependencies, name) {\r\n\t\tsuper();\r\n\t\tthis.dependencies = dependencies;\r\n\t\tthis.name = name;\r\n\t}\r\n\r\n\tget type() {\r\n\t\treturn \"multi entry\";\r\n\t}\r\n}\r\n\r\nmodule.exports = MultiEntryDependency;\r\n","/home/travis/build/npmtest/node-npmtest-webpack/node_modules/webpack/lib/MultiModuleFactory.js":"/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\n\"use strict\";\r\n\r\nconst Tapable = require(\"tapable\");\r\nconst MultiModule = require(\"./MultiModule\");\r\n\r\nmodule.exports = class MultiModuleFactory extends Tapable {\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t}\r\n\r\n\tcreate(data, callback) {\r\n\t\tconst dependency = data.dependencies[0];\r\n\t\tcallback(null, new MultiModule(data.context, dependency.dependencies, dependency.name));\r\n\t}\r\n};\r\n","/home/travis/build/npmtest/node-npmtest-webpack/node_modules/webpack/lib/MultiModule.js":"/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\n\"use strict\";\r\n\r\nconst Module = require(\"./Module\");\r\nconst RawSource = require(\"webpack-sources\").RawSource;\r\n\r\nclass MultiModule extends Module {\r\n\r\n\tconstructor(context, dependencies, name) {\r\n\t\tsuper();\r\n\t\tthis.context = context;\r\n\t\tthis.dependencies = dependencies;\r\n\t\tthis.name = name;\r\n\t\tthis.built = false;\r\n\t\tthis.cacheable = true;\r\n\t}\r\n\r\n\tidentifier() {\r\n\t\treturn `multi ${this.dependencies.map((d) => d.request).join(\" \")}`;\r\n\t}\r\n\r\n\treadableIdentifier(requestShortener) {\r\n\t\treturn `multi ${this.dependencies.map((d) => requestShortener.shorten(d.request)).join(\" \")}`;\r\n\t}\r\n\r\n\tdisconnect() {\r\n\t\tthis.built = false;\r\n\t\tsuper.disconnect();\r\n\t}\r\n\r\n\tbuild(options, compilation, resolver, fs, callback) {\r\n\t\tthis.built = true;\r\n\t\treturn callback();\r\n\t}\r\n\r\n\tneedRebuild() {\r\n\t\treturn false;\r\n\t}\r\n\r\n\tsize() {\r\n\t\treturn 16 + this.dependencies.length * 12;\r\n\t}\r\n\r\n\tupdateHash(hash) {\r\n\t\thash.update(\"multi module\");\r\n\t\thash.update(this.name || \"\");\r\n\t\tsuper.updateHash(hash);\r\n\t}\r\n\r\n\tsource(dependencyTemplates, outputOptions) {\r\n\t\tconst str = [];\r\n\t\tthis.dependencies.forEach(function(dep, idx) {\r\n\t\t\tif(dep.module) {\r\n\t\t\t\tif(idx === this.dependencies.length - 1)\r\n\t\t\t\t\tstr.push(\"module.exports = \");\r\n\t\t\t\tstr.push(\"__webpack_require__(\");\r\n\t\t\t\tif(outputOptions.pathinfo)\r\n\t\t\t\t\tstr.push(`/*! ${dep.request} */`);\r\n\t\t\t\tstr.push(`${JSON.stringify(dep.module.id)}`);\r\n\t\t\t\tstr.push(\")\");\r\n\t\t\t} else {\r\n\t\t\t\tstr.push(\"(function webpackMissingModule() { throw new Error(\");\r\n\t\t\t\tstr.push(JSON.stringify(`Cannot find module \"${dep.request}\"`));\r\n\t\t\t\tstr.push(\"); }())\");\r\n\t\t\t}\r\n\t\t\tstr.push(\";\\n\");\r\n\t\t}, this);\r\n\t\treturn new RawSource(str.join(\"\"));\r\n\t}\r\n}\r\n\r\nmodule.exports = MultiModule;\r\n","/home/travis/build/npmtest/node-npmtest-webpack/node_modules/webpack/lib/DynamicEntryPlugin.js":"/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Naoyuki Kanezawa @nkzawa\r\n*/\r\n\"use strict\";\r\n\r\nconst MultiEntryDependency = require(\"./dependencies/MultiEntryDependency\");\r\nconst SingleEntryDependency = require(\"./dependencies/SingleEntryDependency\");\r\nconst MultiModuleFactory = require(\"./MultiModuleFactory\");\r\nconst MultiEntryPlugin = require(\"./MultiEntryPlugin\");\r\nconst SingleEntryPlugin = require(\"./SingleEntryPlugin\");\r\n\r\nclass DynamicEntryPlugin {\r\n\tconstructor(context, entry) {\r\n\t\tthis.context = context;\r\n\t\tthis.entry = entry;\r\n\t}\r\n\r\n\tapply(compiler) {\r\n\t\tcompiler.plugin(\"compilation\", (compilation, params) => {\r\n\t\t\tconst multiModuleFactory = new MultiModuleFactory();\r\n\t\t\tconst normalModuleFactory = params.normalModuleFactory;\r\n\r\n\t\t\tcompilation.dependencyFactories.set(MultiEntryDependency, multiModuleFactory);\r\n\t\t\tcompilation.dependencyFactories.set(SingleEntryDependency, normalModuleFactory);\r\n\t\t});\r\n\r\n\t\tcompiler.plugin(\"make\", (compilation, callback) => {\r\n\t\t\tconst addEntry = (entry, name) => {\r\n\t\t\t\tconst dep = DynamicEntryPlugin.createDependency(entry, name);\r\n\t\t\t\treturn new Promise((resolve, reject) => {\r\n\t\t\t\t\tcompilation.addEntry(this.context, dep, name, (err) => {\r\n\t\t\t\t\t\tif(err) return reject(err);\r\n\t\t\t\t\t\tresolve();\r\n\t\t\t\t\t});\r\n\t\t\t\t});\r\n\t\t\t};\r\n\r\n\t\t\tPromise.resolve(this.entry()).then((entry) => {\r\n\t\t\t\tif(typeof entry === \"string\" || Array.isArray(entry)) {\r\n\t\t\t\t\taddEntry(entry, \"main\").then(() => callback(), callback);\r\n\t\t\t\t} else if(typeof entry === \"object\") {\r\n\t\t\t\t\tPromise.all(Object.keys(entry).map((name) => {\r\n\t\t\t\t\t\treturn addEntry(entry[name], name);\r\n\t\t\t\t\t})).then(() => callback(), callback);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n}\r\n\r\nmodule.exports = DynamicEntryPlugin;\r\n\r\nDynamicEntryPlugin.createDependency = function(entry, name) {\r\n\tif(Array.isArray(entry))\r\n\t\treturn MultiEntryPlugin.createDependency(entry, name);\r\n\telse\r\n\t\treturn SingleEntryPlugin.createDependency(entry, name);\r\n};\r\n","/home/travis/build/npmtest/node-npmtest-webpack/node_modules/webpack/lib/RecordIdsPlugin.js":"/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\n\"use strict\";\r\n\r\nconst identifierUtils = require(\"./util/identifier\");\r\n\r\nclass RecordIdsPlugin {\r\n\r\n\tapply(compiler) {\r\n\t\tcompiler.plugin(\"compilation\", compilation => {\r\n\t\t\tcompilation.plugin(\"record-modules\", (modules, records) => {\r\n\t\t\t\tif(!records.modules) records.modules = {};\r\n\t\t\t\tif(!records.modules.byIdentifier) records.modules.byIdentifier = {};\r\n\t\t\t\tif(!records.modules.usedIds) records.modules.usedIds = {};\r\n\t\t\t\tmodules.forEach(function(module) {\r\n\t\t\t\t\tif(!module.portableId) module.portableId = identifierUtils.makePathsRelative(compiler.context, module.identifier());\r\n\t\t\t\t\tconst identifier = module.portableId;\r\n\t\t\t\t\trecords.modules.byIdentifier[identifier] = module.id;\r\n\t\t\t\t\trecords.modules.usedIds[module.id] = module.id;\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t\tcompilation.plugin(\"revive-modules\", (modules, records) => {\r\n\t\t\t\tif(!records.modules) return;\r\n\t\t\t\tif(records.modules.byIdentifier) {\r\n\t\t\t\t\tconst usedIds = {};\r\n\t\t\t\t\tmodules.forEach(function(module) {\r\n\t\t\t\t\t\tif(module.id !== null) return;\r\n\t\t\t\t\t\tif(!module.portableId) module.portableId = identifierUtils.makePathsRelative(compiler.context, module.identifier());\r\n\t\t\t\t\t\tconst identifier = module.portableId;\r\n\t\t\t\t\t\tconst id = records.modules.byIdentifier[identifier];\r\n\t\t\t\t\t\tif(id === undefined) return;\r\n\t\t\t\t\t\tif(usedIds[id]) return;\r\n\t\t\t\t\t\tusedIds[id] = true;\r\n\t\t\t\t\t\tmodule.id = id;\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t\tcompilation.usedModuleIds = records.modules.usedIds;\r\n\t\t\t});\r\n\r\n\t\t\tfunction getDepBlockIdent(chunk, block) {\r\n\t\t\t\tconst ident = [];\r\n\t\t\t\tif(block.chunks.length > 1)\r\n\t\t\t\t\tident.push(block.chunks.indexOf(chunk));\r\n\t\t\t\twhile(block.parent) {\r\n\t\t\t\t\tconst p = block.parent;\r\n\t\t\t\t\tconst idx = p.blocks.indexOf(block);\r\n\t\t\t\t\tconst l = p.blocks.length - 1;\r\n\t\t\t\t\tident.unshift(`${idx}/${l}`);\r\n\t\t\t\t\tblock = block.parent;\r\n\t\t\t\t}\r\n\t\t\t\tif(!block.identifier) return null;\r\n\t\t\t\tident.unshift(identifierUtils.makePathsRelative(compiler.context, block.identifier()));\r\n\t\t\t\treturn ident.join(\":\");\r\n\t\t\t}\r\n\t\t\tcompilation.plugin(\"record-chunks\", (chunks, records) => {\r\n\t\t\t\trecords.nextFreeChunkId = compilation.nextFreeChunkId;\r\n\t\t\t\tif(!records.chunks) records.chunks = {};\r\n\t\t\t\tif(!records.chunks.byName) records.chunks.byName = {};\r\n\t\t\t\tif(!records.chunks.byBlocks) records.chunks.byBlocks = {};\r\n\t\t\t\trecords.chunks.usedIds = {};\r\n\t\t\t\tchunks.forEach(chunk => {\r\n\t\t\t\t\tconst name = chunk.name;\r\n\t\t\t\t\tconst blockIdents = chunk.blocks.map(getDepBlockIdent.bind(null, chunk)).filter(Boolean);\r\n\t\t\t\t\tif(name) records.chunks.byName[name] = chunk.id;\r\n\t\t\t\t\tblockIdents.forEach((blockIdent) => {\r\n\t\t\t\t\t\trecords.chunks.byBlocks[blockIdent] = chunk.id;\r\n\t\t\t\t\t});\r\n\t\t\t\t\trecords.chunks.usedIds[chunk.id] = chunk.id;\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t\tcompilation.plugin(\"revive-chunks\", (chunks, records) => {\r\n\t\t\t\tif(!records.chunks) return;\r\n\t\t\t\tconst usedIds = {};\r\n\t\t\t\tif(records.chunks.byName) {\r\n\t\t\t\t\tchunks.forEach(function(chunk) {\r\n\t\t\t\t\t\tif(chunk.id !== null) return;\r\n\t\t\t\t\t\tif(!chunk.name) return;\r\n\t\t\t\t\t\tconst id = records.chunks.byName[chunk.name];\r\n\t\t\t\t\t\tif(id === undefined) return;\r\n\t\t\t\t\t\tif(usedIds[id]) return;\r\n\t\t\t\t\t\tusedIds[id] = true;\r\n\t\t\t\t\t\tchunk.id = id;\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t\tif(records.chunks.byBlocks) {\r\n\t\t\t\t\tconst argumentedChunks = chunks.filter(chunk => chunk.id === null).map(chunk => ({\r\n\t\t\t\t\t\tchunk,\r\n\t\t\t\t\t\tblockIdents: chunk.blocks.map(getDepBlockIdent.bind(null, chunk)).filter(Boolean)\r\n\t\t\t\t\t})).filter(arg => arg.blockIdents.length > 0);\r\n\t\t\t\t\tlet blockIdentsCount = {};\r\n\t\t\t\t\targumentedChunks.forEach((arg, idx) => {\r\n\t\t\t\t\t\targ.blockIdents.forEach(blockIdent => {\r\n\t\t\t\t\t\t\tconst id = records.chunks.byBlocks[blockIdent];\r\n\t\t\t\t\t\t\tif(typeof id !== \"number\") return;\r\n\t\t\t\t\t\t\tconst accessor = `${id}:${idx}`;\r\n\t\t\t\t\t\t\tblockIdentsCount[accessor] = (blockIdentsCount[accessor] || 0) + 1;\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t});\r\n\t\t\t\t\tblockIdentsCount = Object.keys(blockIdentsCount).map(accessor => [blockIdentsCount[accessor]].concat(accessor.split(\":\").map(Number))).sort((a, b) => b[0] - a[0]);\r\n\t\t\t\t\tblockIdentsCount.forEach(function(arg) {\r\n\t\t\t\t\t\tconst id = arg[1];\r\n\t\t\t\t\t\tif(usedIds[id]) return;\r\n\t\t\t\t\t\tconst idx = arg[2];\r\n\t\t\t\t\t\tconst chunk = argumentedChunks[idx].chunk;\r\n\t\t\t\t\t\tif(chunk.id !== null) return;\r\n\t\t\t\t\t\tusedIds[id] = true;\r\n\t\t\t\t\t\tchunk.id = id;\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t\tcompilation.usedChunkIds = records.chunks.usedIds;\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n}\r\nmodule.exports = RecordIdsPlugin;\r\n","/home/travis/build/npmtest/node-npmtest-webpack/node_modules/webpack/lib/util/identifier.js":"\"use strict\";\r\nconst path = require(\"path\");\r\n\r\nconst looksLikeAbsolutePath = (maybeAbsolutePath) => {\r\n\treturn /^(?:[a-z]:\\\\|\\/)/i.test(maybeAbsolutePath);\r\n};\r\n\r\nconst normalizePathSeparator = (p) => p.replace(/\\\\/g, \"/\");\r\n\r\nexports.makePathsRelative = (context, identifier) => {\r\n\treturn identifier\r\n\t\t.split(/([|! ])/)\r\n\t\t.map(str => looksLikeAbsolutePath(str) ?\r\n\t\t\tnormalizePathSeparator(path.relative(context, str)) : str)\r\n\t\t.join(\"\");\r\n};\r\n","/home/travis/build/npmtest/node-npmtest-webpack/node_modules/webpack/lib/APIPlugin.js":"/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\n\"use strict\";\r\n\r\nconst ConstDependency = require(\"./dependencies/ConstDependency\");\r\nconst ParserHelpers = require(\"./ParserHelpers\");\r\n\r\nconst NullFactory = require(\"./NullFactory\");\r\n\r\nconst REPLACEMENTS = {\r\n\t__webpack_require__: \"__webpack_require__\", // eslint-disable-line camelcase\r\n\t__webpack_public_path__: \"__webpack_require__.p\", // eslint-disable-line camelcase\r\n\t__webpack_modules__: \"__webpack_require__.m\", // eslint-disable-line camelcase\r\n\t__webpack_chunk_load__: \"__webpack_require__.e\", // eslint-disable-line camelcase\r\n\t__non_webpack_require__: \"require\", // eslint-disable-line camelcase\r\n\t__webpack_nonce__: \"__webpack_require__.nc\", // eslint-disable-line camelcase\r\n\t\"require.onError\": \"__webpack_require__.oe\" // eslint-disable-line camelcase\r\n};\r\nconst REPLACEMENT_TYPES = {\r\n\t__webpack_public_path__: \"string\", // eslint-disable-line camelcase\r\n\t__webpack_require__: \"function\", // eslint-disable-line camelcase\r\n\t__webpack_modules__: \"object\", // eslint-disable-line camelcase\r\n\t__webpack_chunk_load__: \"function\", // eslint-disable-line camelcase\r\n\t__webpack_nonce__: \"string\" // eslint-disable-line camelcase\r\n};\r\n\r\nclass APIPlugin {\r\n\tapply(compiler) {\r\n\t\tcompiler.plugin(\"compilation\", (compilation, params) => {\r\n\t\t\tcompilation.dependencyFactories.set(ConstDependency, new NullFactory());\r\n\t\t\tcompilation.dependencyTemplates.set(ConstDependency, new ConstDependency.Template());\r\n\r\n\t\t\tparams.normalModuleFactory.plugin(\"parser\", parser => {\r\n\t\t\t\tObject.keys(REPLACEMENTS).forEach(key => {\r\n\t\t\t\t\tparser.plugin(`expression ${key}`, ParserHelpers.toConstantDependency(REPLACEMENTS[key]));\r\n\t\t\t\t\tparser.plugin(`evaluate typeof ${key}`, ParserHelpers.evaluateToString(REPLACEMENT_TYPES[key]));\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n}\r\n\r\nmodule.exports = APIPlugin;\r\n","/home/travis/build/npmtest/node-npmtest-webpack/node_modules/webpack/lib/dependencies/ConstDependency.js":"/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\n\"use strict\";\r\nconst NullDependency = require(\"./NullDependency\");\r\n\r\nclass ConstDependency extends NullDependency {\r\n\tconstructor(expression, range) {\r\n\t\tsuper();\r\n\t\tthis.expression = expression;\r\n\t\tthis.range = range;\r\n\t}\r\n\r\n\tupdateHash(hash) {\r\n\t\thash.update(this.range + \"\");\r\n\t\thash.update(this.expression + \"\");\r\n\t}\r\n}\r\n\r\nConstDependency.Template = class ConstDependencyTemplate {\r\n\tapply(dep, source) {\r\n\t\tif(typeof dep.range === \"number\") {\r\n\t\t\tsource.insert(dep.range, dep.expression);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tsource.replace(dep.range[0], dep.range[1] - 1, dep.expression);\r\n\t}\r\n};\r\n\r\nmodule.exports = ConstDependency;\r\n","/home/travis/build/npmtest/node-npmtest-webpack/node_modules/webpack/lib/dependencies/NullDependency.js":"/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\n\"use strict\";\r\nconst Dependency = require(\"../Dependency\");\r\n\r\nclass NullDependency extends Dependency {\r\n\tget type() {\r\n\t\treturn \"null\";\r\n\t}\r\n\r\n\tisEqualResource() {\r\n\t\treturn false;\r\n\t}\r\n\r\n\tupdateHash() {}\r\n}\r\n\r\nNullDependency.Template = class NullDependencyTemplate {\r\n\tapply() {}\r\n};\r\n\r\nmodule.exports = NullDependency;\r\n","/home/travis/build/npmtest/node-npmtest-webpack/node_modules/webpack/lib/ParserHelpers.js":"/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\n\"use strict\";\r\nconst path = require(\"path\");\r\n\r\nconst BasicEvaluatedExpression = require(\"./BasicEvaluatedExpression\");\r\nconst ConstDependency = require(\"./dependencies/ConstDependency\");\r\nconst UnsupportedFeatureWarning = require(\"./UnsupportedFeatureWarning\");\r\n\r\nconst ParserHelpers = exports;\r\n\r\nParserHelpers.addParsedVariableToModule = function(parser, name, expression) {\r\n\tif(!parser.state.current.addVariable) return false;\r\n\tvar deps = [];\r\n\tparser.parse(expression, {\r\n\t\tcurrent: {\r\n\t\t\taddDependency: function(dep) {\r\n\t\t\t\tdep.userRequest = name;\r\n\t\t\t\tdeps.push(dep);\r\n\t\t\t}\r\n\t\t},\r\n\t\tmodule: parser.state.module\r\n\t});\r\n\tparser.state.current.addVariable(name, expression, deps);\r\n\treturn true;\r\n};\r\n\r\nParserHelpers.requireFileAsExpression = function(context, pathToModule) {\r\n\tvar moduleJsPath = path.relative(context, pathToModule);\r\n\tif(!/^[A-Z]:/i.test(moduleJsPath)) {\r\n\t\tmoduleJsPath = \"./\" + moduleJsPath.replace(/\\\\/g, \"/\");\r\n\t}\r\n\treturn \"require(\" + JSON.stringify(moduleJsPath) + \")\";\r\n};\r\n\r\nParserHelpers.toConstantDependency = function(value) {\r\n\treturn function constDependency(expr) {\r\n\t\tvar dep = new ConstDependency(value, expr.range);\r\n\t\tdep.loc = expr.loc;\r\n\t\tthis.state.current.addDependency(dep);\r\n\t\treturn true;\r\n\t};\r\n};\r\n\r\nParserHelpers.evaluateToString = function(value) {\r\n\treturn function stringExpression(expr) {\r\n\t\treturn new BasicEvaluatedExpression().setString(value).setRange(expr.range);\r\n\t};\r\n};\r\n\r\nParserHelpers.evaluateToBoolean = function(value) {\r\n\treturn function booleanExpression(expr) {\r\n\t\treturn new BasicEvaluatedExpression().setBoolean(value).setRange(expr.range);\r\n\t};\r\n};\r\n\r\nParserHelpers.expressionIsUnsupported = function(message) {\r\n\treturn function unsupportedExpression(expr) {\r\n\t\tvar dep = new ConstDependency(\"(void 0)\", expr.range);\r\n\t\tdep.loc = expr.loc;\r\n\t\tthis.state.current.addDependency(dep);\r\n\t\tif(!this.state.module) return;\r\n\t\tthis.state.module.warnings.push(new UnsupportedFeatureWarning(this.state.module, message));\r\n\t\treturn true;\r\n\t};\r\n};\r\n\r\nParserHelpers.skipTraversal = function skipTraversal() {\r\n\treturn true;\r\n};\r\n\r\nParserHelpers.approve = function approve() {\r\n\treturn true;\r\n};\r\n","/home/travis/build/npmtest/node-npmtest-webpack/node_modules/webpack/lib/UnsupportedFeatureWarning.js":"/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\n\"use strict\";\r\n\r\nconst WebpackError = require(\"./WebpackError\");\r\n\r\nclass UnsupportedFeatureWarning extends WebpackError {\r\n\tconstructor(module, message) {\r\n\t\tsuper();\r\n\r\n\t\tthis.name = \"UnsupportedFeatureWarning\";\r\n\t\tthis.message = message;\r\n\t\tthis.origin = this.module = module;\r\n\r\n\t\tError.captureStackTrace(this, this.constructor);\r\n\t}\r\n}\r\n\r\nmodule.exports = UnsupportedFeatureWarning;\r\n","/home/travis/build/npmtest/node-npmtest-webpack/node_modules/webpack/lib/NullFactory.js":"/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\n\"use strict\";\r\n\r\nclass NullFactory {\r\n\tcreate(data, callback) {\r\n\t\treturn callback();\r\n\t}\r\n}\r\nmodule.exports = NullFactory;\r\n","/home/travis/build/npmtest/node-npmtest-webpack/node_modules/webpack/lib/ConstPlugin.js":"/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\n\"use strict\";\r\nconst ConstDependency = require(\"./dependencies/ConstDependency\");\r\nconst NullFactory = require(\"./NullFactory\");\r\nconst ParserHelpers = require(\"./ParserHelpers\");\r\n\r\nconst getQuery = (request) => {\r\n\tconst i = request.indexOf(\"?\");\r\n\treturn request.indexOf(\"?\") < 0 ? \"\" : request.substr(i);\r\n};\r\n\r\nclass ConstPlugin {\r\n\tapply(compiler) {\r\n\t\tcompiler.plugin(\"compilation\", (compilation, params) => {\r\n\t\t\tcompilation.dependencyFactories.set(ConstDependency, new NullFactory());\r\n\t\t\tcompilation.dependencyTemplates.set(ConstDependency, new ConstDependency.Template());\r\n\r\n\t\t\tparams.normalModuleFactory.plugin(\"parser\", parser => {\r\n\t\t\t\tparser.plugin(\"statement if\", function(statement) {\r\n\t\t\t\t\tconst param = this.evaluateExpression(statement.test);\r\n\t\t\t\t\tconst bool = param.asBool();\r\n\t\t\t\t\tif(typeof bool === \"boolean\") {\r\n\t\t\t\t\t\tif(statement.test.type !== \"Literal\") {\r\n\t\t\t\t\t\t\tconst dep = new ConstDependency(`${bool}`, param.range);\r\n\t\t\t\t\t\t\tdep.loc = statement.loc;\r\n\t\t\t\t\t\t\tthis.state.current.addDependency(dep);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\treturn bool;\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t\tparser.plugin(\"expression ?:\", function(expression) {\r\n\t\t\t\t\tconst param = this.evaluateExpression(expression.test);\r\n\t\t\t\t\tconst bool = param.asBool();\r\n\t\t\t\t\tif(typeof bool === \"boolean\") {\r\n\t\t\t\t\t\tif(expression.test.type !== \"Literal\") {\r\n\t\t\t\t\t\t\tconst dep = new ConstDependency(` ${bool}`, param.range);\r\n\t\t\t\t\t\t\tdep.loc = expression.loc;\r\n\t\t\t\t\t\t\tthis.state.current.addDependency(dep);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\treturn bool;\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t\tparser.plugin(\"evaluate Identifier __resourceQuery\", function(expr) {\r\n\t\t\t\t\tif(!this.state.module) return;\r\n\t\t\t\t\treturn ParserHelpers.evaluateToString(getQuery(this.state.module.resource))(expr);\r\n\t\t\t\t});\r\n\t\t\t\tparser.plugin(\"expression __resourceQuery\", function() {\r\n\t\t\t\t\tif(!this.state.module) return;\r\n\t\t\t\t\tthis.state.current.addVariable(\"__resourceQuery\", JSON.stringify(getQuery(this.state.module.resource)));\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n}\r\n\r\nmodule.exports = ConstPlugin;\r\n","/home/travis/build/npmtest/node-npmtest-webpack/node_modules/webpack/lib/RequireJsStuffPlugin.js":"/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\n\"use strict\";\r\n\r\nconst ParserHelpers = require(\"./ParserHelpers\");\r\nconst ConstDependency = require(\"./dependencies/ConstDependency\");\r\nconst NullFactory = require(\"./NullFactory\");\r\n\r\nmodule.exports = class RequireJsStuffPlugin {\r\n\r\n\tapply(compiler) {\r\n\t\tcompiler.plugin(\"compilation\", function(compilation, params) {\r\n\t\t\tcompilation.dependencyFactories.set(ConstDependency, new NullFactory());\r\n\t\t\tcompilation.dependencyTemplates.set(ConstDependency, new ConstDependency.Template());\r\n\t\t\tparams.normalModuleFactory.plugin(\"parser\", function(parser, parserOptions) {\r\n\r\n\t\t\t\tif(typeof parserOptions.requireJs !== \"undefined\" && !parserOptions.requireJs)\r\n\t\t\t\t\treturn;\r\n\r\n\t\t\t\tparser.plugin(\"call require.config\", ParserHelpers.toConstantDependency(\"undefined\"));\r\n\t\t\t\tparser.plugin(\"call requirejs.config\", ParserHelpers.toConstantDependency(\"undefined\"));\r\n\r\n\t\t\t\tparser.plugin(\"expression require.version\", ParserHelpers.toConstantDependency(JSON.stringify(\"0.0.0\")));\r\n\t\t\t\tparser.plugin(\"expression requirejs.onError\", ParserHelpers.toConstantDependency(JSON.stringify(\"__webpack_require__.oe\")));\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n\r\n};\r\n","/home/travis/build/npmtest/node-npmtest-webpack/node_modules/webpack/lib/NodeStuffPlugin.js":"/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\n\"use strict\";\r\n\r\nconst path = require(\"path\");\r\nconst ParserHelpers = require(\"./ParserHelpers\");\r\nconst ConstDependency = require(\"./dependencies/ConstDependency\");\r\n\r\nconst NullFactory = require(\"./NullFactory\");\r\n\r\nclass NodeStuffPlugin {\r\n\tconstructor(options) {\r\n\t\tthis.options = options;\r\n\t}\r\n\r\n\tapply(compiler) {\r\n\t\tconst options = this.options;\r\n\t\tcompiler.plugin(\"compilation\", (compilation, params) => {\r\n\t\t\tcompilation.dependencyFactories.set(ConstDependency, new NullFactory());\r\n\t\t\tcompilation.dependencyTemplates.set(ConstDependency, new ConstDependency.Template());\r\n\r\n\t\t\tparams.normalModuleFactory.plugin(\"parser\", (parser, parserOptions) => {\r\n\r\n\t\t\t\tif(parserOptions.node === false)\r\n\t\t\t\t\treturn;\r\n\r\n\t\t\t\tlet localOptions = options;\r\n\t\t\t\tif(parserOptions.node)\r\n\t\t\t\t\tlocalOptions = Object.assign({}, localOptions, parserOptions.node);\r\n\r\n\t\t\t\tfunction setConstant(expressionName, value) {\r\n\t\t\t\t\tparser.plugin(`expression ${expressionName}`, function() {\r\n\t\t\t\t\t\tthis.state.current.addVariable(expressionName, JSON.stringify(value));\r\n\t\t\t\t\t\treturn true;\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\r\n\t\t\t\tfunction setModuleConstant(expressionName, fn) {\r\n\t\t\t\t\tparser.plugin(`expression ${expressionName}`, function() {\r\n\t\t\t\t\t\tthis.state.current.addVariable(expressionName, JSON.stringify(fn(this.state.module)));\r\n\t\t\t\t\t\treturn true;\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t\tconst context = compiler.context;\r\n\t\t\t\tif(localOptions.__filename === \"mock\") {\r\n\t\t\t\t\tsetConstant(\"__filename\", \"/index.js\");\r\n\t\t\t\t} else if(localOptions.__filename) {\r\n\t\t\t\t\tsetModuleConstant(\"__filename\", module => path.relative(context, module.resource));\r\n\t\t\t\t}\r\n\t\t\t\tparser.plugin(\"evaluate Identifier __filename\", function(expr) {\r\n\t\t\t\t\tif(!this.state.module) return;\r\n\t\t\t\t\tconst resource = this.state.module.resource;\r\n\t\t\t\t\tconst i = resource.indexOf(\"?\");\r\n\t\t\t\t\treturn ParserHelpers.evaluateToString(i < 0 ? resource : resource.substr(0, i))(expr);\r\n\t\t\t\t});\r\n\t\t\t\tif(localOptions.__dirname === \"mock\") {\r\n\t\t\t\t\tsetConstant(\"__dirname\", \"/\");\r\n\t\t\t\t} else if(localOptions.__dirname) {\r\n\t\t\t\t\tsetModuleConstant(\"__dirname\", module => path.relative(context, module.context));\r\n\t\t\t\t}\r\n\t\t\t\tparser.plugin(\"evaluate Identifier __dirname\", function(expr) {\r\n\t\t\t\t\tif(!this.state.module) return;\r\n\t\t\t\t\treturn ParserHelpers.evaluateToString(this.state.module.context)(expr);\r\n\t\t\t\t});\r\n\t\t\t\tparser.plugin(\"expression require.main\", ParserHelpers.toConstantDependency(\"__webpack_require__.c[__webpack_require__.s]\"));\r\n\t\t\t\tparser.plugin(\r\n\t\t\t\t\t\"expression require.extensions\",\r\n\t\t\t\t\tParserHelpers.expressionIsUnsupported(\"require.extensions is not supported by webpack. Use a loader instead.\")\r\n\t\t\t\t);\r\n\t\t\t\tparser.plugin(\"expression module.loaded\", ParserHelpers.toConstantDependency(\"module.l\"));\r\n\t\t\t\tparser.plugin(\"expression module.id\", ParserHelpers.toConstantDependency(\"module.i\"));\r\n\t\t\t\tparser.plugin(\"expression module.exports\", function() {\r\n\t\t\t\t\tconst module = this.state.module;\r\n\t\t\t\t\tconst isHarmony = module.meta && module.meta.harmonyModule;\r\n\t\t\t\t\tif(!isHarmony)\r\n\t\t\t\t\t\treturn true;\r\n\t\t\t\t});\r\n\t\t\t\tparser.plugin(\"evaluate Identifier module.hot\", ParserHelpers.evaluateToBoolean(false));\r\n\t\t\t\tparser.plugin(\"expression module\", function() {\r\n\t\t\t\t\tconst module = this.state.module;\r\n\t\t\t\t\tconst isHarmony = module.meta && module.meta.harmonyModule;\r\n\t\t\t\t\tlet moduleJsPath = path.join(__dirname, \"..\", \"buildin\", isHarmony ? \"harmony-module.js\" : \"module.js\");\r\n\t\t\t\t\tif(module.context) {\r\n\t\t\t\t\t\tmoduleJsPath = path.relative(this.state.module.context, moduleJsPath);\r\n\t\t\t\t\t\tif(!/^[A-Z]:/i.test(moduleJsPath)) {\r\n\t\t\t\t\t\t\tmoduleJsPath = `./${moduleJsPath.replace(/\\\\/g, \"/\")}`;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn ParserHelpers.addParsedVariableToModule(this, \"module\", `require(${JSON.stringify(moduleJsPath)})(module)`);\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n}\r\nmodule.exports = NodeStuffPlugin;\r\n","/home/travis/build/npmtest/node-npmtest-webpack/node_modules/webpack/lib/CompatibilityPlugin.js":"/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\n\"use strict\";\r\n\r\nconst ConstDependency = require(\"./dependencies/ConstDependency\");\r\n\r\nconst NullFactory = require(\"./NullFactory\");\r\n\r\nconst jsonLoaderPath = require.resolve(\"json-loader\");\r\nconst matchJson = /\\.json$/i;\r\n\r\nclass CompatibilityPlugin {\r\n\r\n\tapply(compiler) {\r\n\t\tcompiler.plugin(\"compilation\", (compilation, params) => {\r\n\t\t\tcompilation.dependencyFactories.set(ConstDependency, new NullFactory());\r\n\t\t\tcompilation.dependencyTemplates.set(ConstDependency, new ConstDependency.Template());\r\n\r\n\t\t\tparams.normalModuleFactory.plugin(\"parser\", (parser, parserOptions) => {\r\n\r\n\t\t\t\tif(typeof parserOptions.browserify !== \"undefined\" && !parserOptions.browserify)\r\n\t\t\t\t\treturn;\r\n\r\n\t\t\t\tparser.plugin(\"call require\", (expr) => {\r\n\t\t\t\t\t// support for browserify style require delegator: \"require(o, !0)\"\r\n\t\t\t\t\tif(expr.arguments.length !== 2) return;\r\n\t\t\t\t\tconst second = parser.evaluateExpression(expr.arguments[1]);\r\n\t\t\t\t\tif(!second.isBoolean()) return;\r\n\t\t\t\t\tif(second.asBool() !== true) return;\r\n\t\t\t\t\tconst dep = new ConstDependency(\"require\", expr.callee.range);\r\n\t\t\t\t\tdep.loc = expr.loc;\r\n\t\t\t\t\tif(parser.state.current.dependencies.length > 1) {\r\n\t\t\t\t\t\tconst last = parser.state.current.dependencies[parser.state.current.dependencies.length - 1];\r\n\t\t\t\t\t\tif(last.critical && last.request === \".\" && last.userRequest === \".\" && last.recursive)\r\n\t\t\t\t\t\t\tparser.state.current.dependencies.pop();\r\n\t\t\t\t\t}\r\n\t\t\t\t\tparser.state.current.addDependency(dep);\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t});\r\n\t\t\t});\r\n\r\n\t\t\tparams.normalModuleFactory.plugin(\"after-resolve\", (data, done) => {\r\n\t\t\t\t// if this is a json file and there are no loaders active, we use the json-loader in order to avoid parse errors\r\n\t\t\t\t// @see https://github.com/webpack/webpack/issues/3363\r\n\t\t\t\tif(matchJson.test(data.request) && data.loaders.length === 0) {\r\n\t\t\t\t\tdata.loaders.push({\r\n\t\t\t\t\t\tloader: jsonLoaderPath\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t\tdone(null, data);\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n}\r\nmodule.exports = CompatibilityPlugin;\r\n","/home/travis/build/npmtest/node-npmtest-webpack/node_modules/webpack/lib/TemplatedPathPlugin.js":"/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Jason Anderson @diurnalist\r\n*/\r\n\"use strict\";\r\n\r\nconst REGEXP_HASH = /\\[hash(?::(\\d+))?\\]/gi,\r\n\tREGEXP_CHUNKHASH = /\\[chunkhash(?::(\\d+))?\\]/gi,\r\n\tREGEXP_NAME = /\\[name\\]/gi,\r\n\tREGEXP_ID = /\\[id\\]/gi,\r\n\tREGEXP_FILE = /\\[file\\]/gi,\r\n\tREGEXP_QUERY = /\\[query\\]/gi,\r\n\tREGEXP_FILEBASE = /\\[filebase\\]/gi;\r\n\r\n// Using global RegExp for .test is dangerous\r\n// We use a normal RegExp instead of .test\r\nconst REGEXP_HASH_FOR_TEST = new RegExp(REGEXP_HASH.source, \"i\"),\r\n\tREGEXP_CHUNKHASH_FOR_TEST = new RegExp(REGEXP_CHUNKHASH.source, \"i\"),\r\n\tREGEXP_NAME_FOR_TEST = new RegExp(REGEXP_NAME.source, \"i\");\r\n\r\n// TODO: remove in webpack 3\r\n// Backwards compatibility; expose regexes on Template object\r\nconst Template = require(\"./Template\");\r\nTemplate.REGEXP_HASH = REGEXP_HASH;\r\nTemplate.REGEXP_CHUNKHASH = REGEXP_CHUNKHASH;\r\nTemplate.REGEXP_NAME = REGEXP_NAME;\r\nTemplate.REGEXP_ID = REGEXP_ID;\r\nTemplate.REGEXP_FILE = REGEXP_FILE;\r\nTemplate.REGEXP_QUERY = REGEXP_QUERY;\r\nTemplate.REGEXP_FILEBASE = REGEXP_FILEBASE;\r\n\r\nconst withHashLength = (replacer, handlerFn) => {\r\n\treturn function(_, hashLength) {\r\n\t\tconst length = hashLength && parseInt(hashLength, 10);\r\n\t\tif(length && handlerFn) {\r\n\t\t\treturn handlerFn(length);\r\n\t\t}\r\n\t\tconst hash = replacer.apply(this, arguments);\r\n\t\treturn length ? hash.slice(0, length) : hash;\r\n\t};\r\n};\r\n\r\nconst getReplacer = (value, allowEmpty) => {\r\n\treturn function(match) {\r\n\t\t// last argument in replacer is the entire input string\r\n\t\tconst input = arguments[arguments.length - 1];\r\n\t\tif(value === null || value === undefined) {\r\n\t\t\tif(!allowEmpty) throw new Error(`Path variable ${match} not implemented in this context: ${input}`);\r\n\t\t\treturn \"\";\r\n\t\t} else {\r\n\t\t\treturn `${value}`;\r\n\t\t}\r\n\t};\r\n};\r\n\r\nconst replacePathVariables = (path, data) => {\r\n\tconst chunk = data.chunk;\r\n\tconst chunkId = chunk && chunk.id;\r\n\tconst chunkName = chunk && (chunk.name || chunk.id);\r\n\tconst chunkHash = chunk && (chunk.renderedHash || chunk.hash);\r\n\tconst chunkHashWithLength = chunk && chunk.hashWithLength;\r\n\r\n\tif(data.noChunkHash && REGEXP_CHUNKHASH_FOR_TEST.test(path)) {\r\n\t\tthrow new Error(`Cannot use [chunkhash] for chunk in '${path}' (use [hash] instead)`);\r\n\t}\r\n\r\n\treturn path\r\n\t\t.replace(REGEXP_HASH, withHashLength(getReplacer(data.hash), data.hashWithLength))\r\n\t\t.replace(REGEXP_CHUNKHASH, withHashLength(getReplacer(chunkHash), chunkHashWithLength))\r\n\t\t.replace(REGEXP_ID, getReplacer(chunkId))\r\n\t\t.replace(REGEXP_NAME, getReplacer(chunkName))\r\n\t\t.replace(REGEXP_FILE, getReplacer(data.filename))\r\n\t\t.replace(REGEXP_FILEBASE, getReplacer(data.basename))\r\n\t\t// query is optional, it's OK if it's in a path but there's nothing to replace it with\r\n\t\t.replace(REGEXP_QUERY, getReplacer(data.query, true));\r\n};\r\n\r\nclass TemplatedPathPlugin {\r\n\tapply(compiler) {\r\n\t\tcompiler.plugin(\"compilation\", compilation => {\r\n\t\t\tconst mainTemplate = compilation.mainTemplate;\r\n\r\n\t\t\tmainTemplate.plugin(\"asset-path\", replacePathVariables);\r\n\r\n\t\t\tmainTemplate.plugin(\"global-hash\", function(chunk, paths) {\r\n\t\t\t\tconst outputOptions = this.outputOptions;\r\n\t\t\t\tconst publicPath = outputOptions.publicPath || \"\";\r\n\t\t\t\tconst filename = outputOptions.filename || \"\";\r\n\t\t\t\tconst chunkFilename = outputOptions.chunkFilename || outputOptions.filename;\r\n\t\t\t\tif(REGEXP_HASH_FOR_TEST.test(publicPath) || REGEXP_CHUNKHASH_FOR_TEST.test(publicPath) || REGEXP_NAME_FOR_TEST.test(publicPath))\r\n\t\t\t\t\treturn true;\r\n\t\t\t\tif(REGEXP_HASH_FOR_TEST.test(filename))\r\n\t\t\t\t\treturn true;\r\n\t\t\t\tif(REGEXP_HASH_FOR_TEST.test(chunkFilename))\r\n\t\t\t\t\treturn true;\r\n\t\t\t\tif(REGEXP_HASH_FOR_TEST.test(paths.join(\"|\")))\r\n\t\t\t\t\treturn true;\r\n\t\t\t});\r\n\r\n\t\t\tmainTemplate.plugin(\"hash-for-chunk\", function(hash, chunk) {\r\n\t\t\t\tconst outputOptions = this.outputOptions;\r\n\t\t\t\tconst chunkFilename = outputOptions.chunkFilename || outputOptions.filename;\r\n\t\t\t\tif(REGEXP_CHUNKHASH_FOR_TEST.test(chunkFilename))\r\n\t\t\t\t\thash.update(JSON.stringify(chunk.getChunkMaps(true, true).hash));\r\n\t\t\t\tif(REGEXP_NAME_FOR_TEST.test(chunkFilename))\r\n\t\t\t\t\thash.update(JSON.stringify(chunk.getChunkMaps(true, true).name));\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n}\r\n\r\nmodule.exports = TemplatedPathPlugin;\r\n","/home/travis/build/npmtest/node-npmtest-webpack/node_modules/webpack/lib/WarnCaseSensitiveModulesPlugin.js":"/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\n\"use strict\";\r\n\r\nconst CaseSensitiveModulesWarning = require(\"./CaseSensitiveModulesWarning\");\r\n\r\nclass WarnCaseSensitiveModulesPlugin {\r\n\tapply(compiler) {\r\n\t\tcompiler.plugin(\"compilation\", compilation => {\r\n\t\t\tcompilation.plugin(\"seal\", () => {\r\n\t\t\t\tconst moduleWithoutCase = Object.create(null);\r\n\t\t\t\tcompilation.modules.forEach(module => {\r\n\t\t\t\t\tconst identifier = module.identifier().toLowerCase();\r\n\t\t\t\t\tif(moduleWithoutCase[identifier]) {\r\n\t\t\t\t\t\tmoduleWithoutCase[identifier].push(module);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tmoduleWithoutCase[identifier] = [module];\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t\tObject.keys(moduleWithoutCase).forEach(key => {\r\n\t\t\t\t\tif(moduleWithoutCase[key].length > 1)\r\n\t\t\t\t\t\tcompilation.warnings.push(new CaseSensitiveModulesWarning(moduleWithoutCase[key]));\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n}\r\n\r\nmodule.exports = WarnCaseSensitiveModulesPlugin;\r\n","/home/travis/build/npmtest/node-npmtest-webpack/node_modules/webpack/lib/CaseSensitiveModulesWarning.js":"/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\n\"use strict\";\r\n\r\nconst WebpackError = require(\"./WebpackError\");\r\n\r\nmodule.exports = class CaseSensitiveModulesWarning extends WebpackError {\r\n\tconstructor(modules) {\r\n\t\tsuper();\r\n\r\n\t\tthis.name = \"CaseSensitiveModulesWarning\";\r\n\t\tconst sortedModules = this._sort(modules);\r\n\t\tconst modulesList = this._moduleMessages(sortedModules);\r\n\t\tthis.message = \"There are multiple modules with names that only differ in casing.\\n\" +\r\n\t\t\t\"This can lead to unexpected behavior when compiling on a filesystem with other case-semantic.\\n\" +\r\n\t\t\t`Use equal casing. Compare these module identifiers:\\n${modulesList}`;\r\n\t\tthis.origin = this.module = sortedModules[0];\r\n\r\n\t\tError.captureStackTrace(this, this.constructor);\r\n\t}\r\n\r\n\t_sort(modules) {\r\n\t\treturn modules.slice().sort((a, b) => {\r\n\t\t\ta = a.identifier();\r\n\t\t\tb = b.identifier();\r\n\t\t\t/* istanbul ignore next */\r\n\t\t\tif(a < b) return -1;\r\n\t\t\t/* istanbul ignore next */\r\n\t\t\tif(a > b) return 1;\r\n\t\t\t/* istanbul ignore next */\r\n\t\t\treturn 0;\r\n\t\t});\r\n\t}\r\n\r\n\t_moduleMessages(modules) {\r\n\t\treturn modules.map((m) => {\r\n\t\t\tlet message = `* ${m.identifier()}`;\r\n\t\t\tconst validReasons = m.reasons.filter((reason) => reason.module);\r\n\r\n\t\t\tif(validReasons.length > 0) {\r\n\t\t\t\tmessage += `\\n    Used by ${validReasons.length} module(s), i. e.`;\r\n\t\t\t\tmessage += `\\n    ${validReasons[0].module.identifier()}`;\r\n\t\t\t}\r\n\t\t\treturn message;\r\n\t\t}).join(\"\\n\");\r\n\t}\r\n};\r\n","/home/travis/build/npmtest/node-npmtest-webpack/node_modules/webpack/lib/UseStrictPlugin.js":"/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\n\"use strict\";\r\n\r\nconst ConstDependency = require(\"./dependencies/ConstDependency\");\r\n\r\nclass UseStrictPlugin {\r\n\tapply(compiler) {\r\n\t\tcompiler.plugin(\"compilation\", (compilation, params) => {\r\n\t\t\tparams.normalModuleFactory.plugin(\"parser\", (parser) => {\r\n\t\t\t\tconst parserInstance = parser;\r\n\t\t\t\tparser.plugin(\"program\", (ast) => {\r\n\t\t\t\t\tconst firstNode = ast.body[0];\r\n\t\t\t\t\tif(firstNode &&\r\n\t\t\t\t\t\tfirstNode.type === \"ExpressionStatement\" &&\r\n\t\t\t\t\t\tfirstNode.expression.type === \"Literal\" &&\r\n\t\t\t\t\t\tfirstNode.expression.value === \"use strict\") {\r\n\t\t\t\t\t\t// Remove \"use strict\" expression. It will be added later by the renderer again.\r\n\t\t\t\t\t\t// This is necessary in order to not break the strict mode when webpack prepends code.\r\n\t\t\t\t\t\t// @see https://github.com/webpack/webpack/issues/1970\r\n\t\t\t\t\t\tconst dep = new ConstDependency(\"\", firstNode.range);\r\n\t\t\t\t\t\tdep.loc = firstNode.loc;\r\n\t\t\t\t\t\tparserInstance.state.current.addDependency(dep);\r\n\t\t\t\t\t\tparserInstance.state.module.strict = true;\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n}\r\n\r\nmodule.exports = UseStrictPlugin;\r\n","/home/travis/build/npmtest/node-npmtest-webpack/node_modules/webpack/lib/dependencies/LoaderPlugin.js":"/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\n\"use strict\";\r\n\r\nconst LoaderDependency = require(\"./LoaderDependency\");\r\n\r\nclass LoaderPlugin {\r\n\r\n\tapply(compiler) {\r\n\t\tcompiler.plugin(\"compilation\", (compilation, params) => {\r\n\t\t\tconst normalModuleFactory = params.normalModuleFactory;\r\n\r\n\t\t\tcompilation.dependencyFactories.set(LoaderDependency, normalModuleFactory);\r\n\t\t});\r\n\t\tcompiler.plugin(\"compilation\", (compilation) => {\r\n\t\t\tcompilation.plugin(\"normal-module-loader\", (loaderContext, module) => {\r\n\t\t\t\tloaderContext.loadModule = function loadModule(request, callback) {\r\n\t\t\t\t\tconst dep = new LoaderDependency(request);\r\n\t\t\t\t\tdep.loc = request;\r\n\t\t\t\t\tcompilation.addModuleDependencies(module, [\r\n\t\t\t\t\t\t[dep]\r\n\t\t\t\t\t], true, \"lm\", false, (err) => {\r\n\t\t\t\t\t\tif(err) return callback(err);\r\n\r\n\t\t\t\t\t\tif(!dep.module) return callback(new Error(\"Cannot load the module\"));\r\n\t\t\t\t\t\tif(dep.module.building) dep.module.building.push(next);\r\n\t\t\t\t\t\telse next();\r\n\r\n\t\t\t\t\t\tfunction next(err) {\r\n\t\t\t\t\t\t\tif(err) return callback(err);\r\n\r\n\t\t\t\t\t\t\tif(dep.module.error) return callback(dep.module.error);\r\n\t\t\t\t\t\t\tif(!dep.module._source) throw new Error(\"The module created for a LoaderDependency must have a property _source\");\r\n\t\t\t\t\t\t\tlet source, map;\r\n\t\t\t\t\t\t\tconst moduleSource = dep.module._source;\r\n\t\t\t\t\t\t\tif(moduleSource.sourceAndMap) {\r\n\t\t\t\t\t\t\t\tconst sourceAndMap = moduleSource.sourceAndMap();\r\n\t\t\t\t\t\t\t\tmap = sourceAndMap.map;\r\n\t\t\t\t\t\t\t\tsource = sourceAndMap.source;\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tmap = moduleSource.map();\r\n\t\t\t\t\t\t\t\tsource = moduleSource.source();\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tif(dep.module.fileDependencies) {\r\n\t\t\t\t\t\t\t\tdep.module.fileDependencies.forEach((dep) => loaderContext.addDependency(dep));\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tif(dep.module.contextDependencies) {\r\n\t\t\t\t\t\t\t\tdep.module.contextDependencies.forEach((dep) => loaderContext.addContextDependency(dep));\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\treturn callback(null, source, map, dep.module);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\t};\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n}\r\nmodule.exports = LoaderPlugin;\r\n","/home/travis/build/npmtest/node-npmtest-webpack/node_modules/webpack/lib/dependencies/LoaderDependency.js":"/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\n\"use strict\";\r\nconst ModuleDependency = require(\"./ModuleDependency\");\r\n\r\nclass LoaderDependency extends ModuleDependency {\r\n\tconstructor(request) {\r\n\t\tsuper(request);\r\n\t}\r\n\r\n\tget type() {\r\n\t\treturn \"loader\";\r\n\t}\r\n}\r\n\r\nmodule.exports = LoaderDependency;\r\n","/home/travis/build/npmtest/node-npmtest-webpack/node_modules/webpack/lib/dependencies/CommonJsPlugin.js":"/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\n\"use strict\";\r\nconst ConstDependency = require(\"./ConstDependency\");\r\nconst CommonJsRequireDependency = require(\"./CommonJsRequireDependency\");\r\nconst CommonJsRequireContextDependency = require(\"./CommonJsRequireContextDependency\");\r\nconst RequireResolveDependency = require(\"./RequireResolveDependency\");\r\nconst RequireResolveContextDependency = require(\"./RequireResolveContextDependency\");\r\nconst RequireResolveHeaderDependency = require(\"./RequireResolveHeaderDependency\");\r\nconst RequireHeaderDependency = require(\"./RequireHeaderDependency\");\r\n\r\nconst NullFactory = require(\"../NullFactory\");\r\n\r\nconst RequireResolveDependencyParserPlugin = require(\"./RequireResolveDependencyParserPlugin\");\r\nconst CommonJsRequireDependencyParserPlugin = require(\"./CommonJsRequireDependencyParserPlugin\");\r\n\r\nconst ParserHelpers = require(\"../ParserHelpers\");\r\n\r\nclass CommonJsPlugin {\r\n\tconstructor(options) {\r\n\t\tthis.options = options;\r\n\t}\r\n\r\n\tapply(compiler) {\r\n\t\tconst options = this.options;\r\n\t\tcompiler.plugin(\"compilation\", (compilation, params) => {\r\n\t\t\tconst normalModuleFactory = params.normalModuleFactory;\r\n\t\t\tconst contextModuleFactory = params.contextModuleFactory;\r\n\r\n\t\t\tcompilation.dependencyFactories.set(CommonJsRequireDependency, normalModuleFactory);\r\n\t\t\tcompilation.dependencyTemplates.set(CommonJsRequireDependency, new CommonJsRequireDependency.Template());\r\n\r\n\t\t\tcompilation.dependencyFactories.set(CommonJsRequireContextDependency, contextModuleFactory);\r\n\t\t\tcompilation.dependencyTemplates.set(CommonJsRequireContextDependency, new CommonJsRequireContextDependency.Template());\r\n\r\n\t\t\tcompilation.dependencyFactories.set(RequireResolveDependency, normalModuleFactory);\r\n\t\t\tcompilation.dependencyTemplates.set(RequireResolveDependency, new RequireResolveDependency.Template());\r\n\r\n\t\t\tcompilation.dependencyFactories.set(RequireResolveContextDependency, contextModuleFactory);\r\n\t\t\tcompilation.dependencyTemplates.set(RequireResolveContextDependency, new RequireResolveContextDependency.Template());\r\n\r\n\t\t\tcompilation.dependencyFactories.set(RequireResolveHeaderDependency, new NullFactory());\r\n\t\t\tcompilation.dependencyTemplates.set(RequireResolveHeaderDependency, new RequireResolveHeaderDependency.Template());\r\n\r\n\t\t\tcompilation.dependencyFactories.set(RequireHeaderDependency, new NullFactory());\r\n\t\t\tcompilation.dependencyTemplates.set(RequireHeaderDependency, new RequireHeaderDependency.Template());\r\n\r\n\t\t\tparams.normalModuleFactory.plugin(\"parser\", (parser, parserOptions) => {\r\n\r\n\t\t\t\tif(typeof parserOptions.commonjs !== \"undefined\" && !parserOptions.commonjs)\r\n\t\t\t\t\treturn;\r\n\r\n\t\t\t\tconst requireExpressions = [\"require\", \"require.resolve\", \"require.resolveWeak\"];\r\n\t\t\t\tfor(let expression of requireExpressions) {\r\n\t\t\t\t\tparser.plugin(`typeof ${expression}`, ParserHelpers.toConstantDependency(\"function\"));\r\n\t\t\t\t\tparser.plugin(`evaluate typeof ${expression}`, ParserHelpers.evaluateToString(\"function\"));\r\n\t\t\t\t}\r\n\r\n\t\t\t\tparser.plugin(\"evaluate typeof module\", ParserHelpers.evaluateToString(\"object\"));\r\n\t\t\t\tparser.plugin(\"assign require\", (expr) => {\r\n\t\t\t\t\t// to not leak to global \"require\", we need to define a local require here.\r\n\t\t\t\t\tconst dep = new ConstDependency(\"var require;\", 0);\r\n\t\t\t\t\tdep.loc = expr.loc;\r\n\t\t\t\t\tparser.state.current.addDependency(dep);\r\n\t\t\t\t\tparser.scope.definitions.push(\"require\");\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t});\r\n\t\t\t\tparser.plugin(\"can-rename require\", () => true);\r\n\t\t\t\tparser.plugin(\"rename require\", (expr) => {\r\n\t\t\t\t\t// define the require variable. It's still undefined, but not \"not defined\".\r\n\t\t\t\t\tconst dep = new ConstDependency(\"var require;\", 0);\r\n\t\t\t\t\tdep.loc = expr.loc;\r\n\t\t\t\t\tparser.state.current.addDependency(dep);\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t});\r\n\t\t\t\tparser.plugin(\"typeof module\", () => true);\r\n\t\t\t\tparser.plugin(\"evaluate typeof exports\", ParserHelpers.evaluateToString(\"object\"));\r\n\t\t\t\tparser.apply(\r\n\t\t\t\t\tnew CommonJsRequireDependencyParserPlugin(options),\r\n\t\t\t\t\tnew RequireResolveDependencyParserPlugin(options)\r\n\t\t\t\t);\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n}\r\nmodule.exports = CommonJsPlugin;\r\n","/home/travis/build/npmtest/node-npmtest-webpack/node_modules/webpack/lib/dependencies/CommonJsRequireDependency.js":"/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\n\"use strict\";\r\nconst ModuleDependency = require(\"./ModuleDependency\");\r\nconst ModuleDependencyTemplateAsId = require(\"./ModuleDependencyTemplateAsId\");\r\n\r\nclass CommonJsRequireDependency extends ModuleDependency {\r\n\tconstructor(request, range) {\r\n\t\tsuper(request);\r\n\t\tthis.range = range;\r\n\t}\r\n\r\n\tget type() {\r\n\t\treturn \"cjs require\";\r\n\t}\r\n}\r\n\r\nCommonJsRequireDependency.Template = ModuleDependencyTemplateAsId;\r\n\r\nmodule.exports = CommonJsRequireDependency;\r\n","/home/travis/build/npmtest/node-npmtest-webpack/node_modules/webpack/lib/dependencies/ModuleDependencyTemplateAsId.js":"/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\n\"use strict\";\r\n\r\nclass ModuleDependencyTemplateAsId {\r\n\r\n\tapply(dep, source, outputOptions, requestShortener) {\r\n\t\tif(!dep.range) return;\r\n\t\tconst comment = outputOptions.pathinfo ?\r\n\t\t\t`/*! ${requestShortener.shorten(dep.request)} */ ` : \"\";\r\n\t\tlet content;\r\n\t\tif(dep.module)\r\n\t\t\tcontent = comment + JSON.stringify(dep.module.id);\r\n\t\telse\r\n\t\t\tcontent = require(\"./WebpackMissingModule\").module(dep.request);\r\n\t\tsource.replace(dep.range[0], dep.range[1] - 1, content);\r\n\t}\r\n}\r\nmodule.exports = ModuleDependencyTemplateAsId;\r\n","/home/travis/build/npmtest/node-npmtest-webpack/node_modules/webpack/lib/dependencies/CommonJsRequireContextDependency.js":"/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\n\"use strict\";\r\nconst ContextDependency = require(\"./ContextDependency\");\r\nconst CriticalDependencyWarning = require(\"./CriticalDependencyWarning\");\r\nconst ContextDependencyTemplateAsRequireCall = require(\"./ContextDependencyTemplateAsRequireCall\");\r\n\r\nclass CommonJsRequireContextDependency extends ContextDependency {\r\n\tconstructor(request, recursive, regExp, range, valueRange) {\r\n\t\tsuper(request, recursive, regExp);\r\n\t\tthis.range = range;\r\n\t\tthis.valueRange = valueRange;\r\n\t}\r\n\r\n\tget type() {\r\n\t\treturn \"cjs require context\";\r\n\t}\r\n\r\n\tgetWarnings() {\r\n\t\tif(!this.critical) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\treturn [\r\n\t\t\tnew CriticalDependencyWarning(this.critical)\r\n\t\t];\r\n\t}\r\n}\r\n\r\nCommonJsRequireContextDependency.Template = ContextDependencyTemplateAsRequireCall;\r\n\r\nmodule.exports = CommonJsRequireContextDependency;\r\n","/home/travis/build/npmtest/node-npmtest-webpack/node_modules/webpack/lib/dependencies/ContextDependency.js":"/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\n\"use strict\";\r\nconst Dependency = require(\"../Dependency\");\r\n\r\nclass ContextDependency extends Dependency {\r\n\tconstructor(request, recursive, regExp) {\r\n\t\tsuper();\r\n\t\tthis.request = request;\r\n\t\tthis.userRequest = request;\r\n\t\tthis.recursive = recursive;\r\n\t\tthis.regExp = regExp;\r\n\t\tthis.async = false;\r\n\t}\r\n\r\n\tisEqualResource(other) {\r\n\t\tif(!(other instanceof ContextDependency))\r\n\t\t\treturn false;\r\n\r\n\t\treturn this.request === other.request &&\r\n\t\t\tthis.recursive === other.recursive &&\r\n\t\t\tthis.regExp === other.regExp &&\r\n\t\t\tthis.async === other.async;\r\n\t}\r\n}\r\n\r\nmodule.exports = ContextDependency;\r\n","/home/travis/build/npmtest/node-npmtest-webpack/node_modules/webpack/lib/dependencies/CriticalDependencyWarning.js":"/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\n\"use strict\";\r\n\r\nconst WebpackError = require(\"../WebpackError\");\r\n\r\nclass CriticalDependencyWarning extends WebpackError {\r\n\tconstructor(message) {\r\n\t\tsuper();\r\n\r\n\t\tthis.name = \"CriticalDependencyWarning\";\r\n\t\tthis.message = \"Critical dependency: \" + message;\r\n\r\n\t\tError.captureStackTrace(this, this.constructor);\r\n\t}\r\n}\r\n\r\nmodule.exports = CriticalDependencyWarning;\r\n","/home/travis/build/npmtest/node-npmtest-webpack/node_modules/webpack/lib/dependencies/ContextDependencyTemplateAsRequireCall.js":"/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\n\"use strict\";\r\n\r\nclass ContextDependencyTemplateAsRequireCall {\r\n\r\n\tapply(dep, source, outputOptions, requestShortener) {\r\n\t\tconst comment = outputOptions.pathinfo ?\r\n\t\t\t\"/*! \" + requestShortener.shorten(dep.request) + \" */ \" : \"\";\r\n\r\n\t\tconst containsDeps = dep.module && dep.module.dependencies && dep.module.dependencies.length > 0;\r\n\t\tconst isAsync = dep.module && dep.module.async;\r\n\t\tif(dep.module && (isAsync || containsDeps)) {\r\n\t\t\tif(dep.valueRange) {\r\n\t\t\t\tif(Array.isArray(dep.replaces)) {\r\n\t\t\t\t\tfor(let i = 0; i < dep.replaces.length; i++) {\r\n\t\t\t\t\t\tconst rep = dep.replaces[i];\r\n\t\t\t\t\t\tsource.replace(rep.range[0], rep.range[1] - 1, rep.value);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tsource.replace(dep.valueRange[1], dep.range[1] - 1, \")\");\r\n\t\t\t\tsource.replace(dep.range[0], dep.valueRange[0] - 1, \"__webpack_require__(\" + comment + JSON.stringify(dep.module.id) + \")(\" + (typeof dep.prepend === \"string\" ? JSON.stringify(dep.prepend) : \"\") + \"\");\r\n\t\t\t} else {\r\n\t\t\t\tsource.replace(dep.range[0], dep.range[1] - 1, \"__webpack_require__(\" + comment + JSON.stringify(dep.module.id) + \")\");\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tconst content = require(\"./WebpackMissingModule\").module(dep.request);\r\n\t\t\tsource.replace(dep.range[0], dep.range[1] - 1, content);\r\n\t\t}\r\n\t}\r\n}\r\nmodule.exports = ContextDependencyTemplateAsRequireCall;\r\n","/home/travis/build/npmtest/node-npmtest-webpack/node_modules/webpack/lib/dependencies/RequireResolveDependency.js":"/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\n\"use strict\";\r\nconst ModuleDependency = require(\"./ModuleDependency\");\r\nconst ModuleDependencyAsId = require(\"./ModuleDependencyTemplateAsId\");\r\n\r\nclass RequireResolveDependency extends ModuleDependency {\r\n\tconstructor(request, range) {\r\n\t\tsuper(request);\r\n\t\tthis.range = range;\r\n\t}\r\n\r\n\tget type() {\r\n\t\treturn \"require.resolve\";\r\n\t}\r\n}\r\n\r\nRequireResolveDependency.Template = ModuleDependencyAsId;\r\n\r\nmodule.exports = RequireResolveDependency;\r\n","/home/travis/build/npmtest/node-npmtest-webpack/node_modules/webpack/lib/dependencies/RequireResolveContextDependency.js":"/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\n\"use strict\";\r\nconst ContextDependency = require(\"./ContextDependency\");\r\nconst CriticalDependencyWarning = require(\"./CriticalDependencyWarning\");\r\nconst ContextDependencyTemplateAsId = require(\"./ContextDependencyTemplateAsId\");\r\n\r\nclass RequireResolveContextDependency extends ContextDependency {\r\n\tconstructor(request, recursive, regExp, range, valueRange) {\r\n\t\tsuper(request, recursive, regExp);\r\n\t\tthis.range = range;\r\n\t\tthis.valueRange = valueRange;\r\n\t}\r\n\r\n\tget type() {\r\n\t\treturn \"amd require context\";\r\n\t}\r\n\r\n\tgetWarnings() {\r\n\t\tif(!this.critical) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\treturn [\r\n\t\t\tnew CriticalDependencyWarning(this.critical)\r\n\t\t];\r\n\t}\r\n}\r\n\r\nRequireResolveContextDependency.Template = ContextDependencyTemplateAsId;\r\n\r\nmodule.exports = RequireResolveContextDependency;\r\n","/home/travis/build/npmtest/node-npmtest-webpack/node_modules/webpack/lib/dependencies/ContextDependencyTemplateAsId.js":"/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\n\"use strict\";\r\n\r\nclass ContextDependencyTemplateAsId {\r\n\r\n\tapply(dep, source, outputOptions, requestShortener) {\r\n\t\tconst comment = outputOptions.pathinfo ?\r\n\t\t\t\"/*! \" + requestShortener.shorten(dep.request) + \" */ \" : \"\";\r\n\r\n\t\tif(dep.module && dep.module.dependencies && dep.module.dependencies.length > 0) {\r\n\t\t\tif(dep.valueRange) {\r\n\t\t\t\tif(Array.isArray(dep.replaces)) {\r\n\t\t\t\t\tfor(let i = 0; i < dep.replaces.length; i++) {\r\n\t\t\t\t\t\tconst rep = dep.replaces[i];\r\n\t\t\t\t\t\tsource.replace(rep.range[0], rep.range[1] - 1, rep.value);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tsource.replace(dep.valueRange[1], dep.range[1] - 1, \")\");\r\n\t\t\t\tsource.replace(dep.range[0], dep.valueRange[0] - 1, \"__webpack_require__(\" + comment + JSON.stringify(dep.module.id) + \").resolve(\" + (typeof dep.prepend === \"string\" ? JSON.stringify(dep.prepend) : \"\") + \"\");\r\n\t\t\t} else {\r\n\t\t\t\tsource.replace(dep.range[0], dep.range[1] - 1, \"__webpack_require__(\" + comment + JSON.stringify(dep.module.id) + \").resolve\");\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tconst content = require(\"./WebpackMissingModule\").module(dep.request);\r\n\t\t\tsource.replace(dep.range[0], dep.range[1] - 1, content);\r\n\t\t}\r\n\t}\r\n}\r\nmodule.exports = ContextDependencyTemplateAsId;\r\n","/home/travis/build/npmtest/node-npmtest-webpack/node_modules/webpack/lib/dependencies/RequireResolveHeaderDependency.js":"/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\n\"use strict\";\r\nconst NullDependency = require(\"./NullDependency\");\r\n\r\nclass RequireResolveHeaderDependency extends NullDependency {\r\n\tconstructor(range) {\r\n\t\tsuper();\r\n\t\tif(!Array.isArray(range)) throw new Error(\"range must be valid\");\r\n\t\tthis.range = range;\r\n\t}\r\n}\r\n\r\nRequireResolveHeaderDependency.Template = class RequireResolveHeaderDependencyTemplate {\r\n\tapply(dep, source) {\r\n\t\tsource.replace(dep.range[0], dep.range[1] - 1, \"/*require.resolve*/\");\r\n\t}\r\n\r\n\tapplyAsTemplateArgument(name, dep, source) {\r\n\t\tsource.replace(dep.range[0], dep.range[1] - 1, \"/*require.resolve*/\");\r\n\t}\r\n};\r\n\r\nmodule.exports = RequireResolveHeaderDependency;\r\n","/home/travis/build/npmtest/node-npmtest-webpack/node_modules/webpack/lib/dependencies/RequireHeaderDependency.js":"/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\n\"use strict\";\r\nconst NullDependency = require(\"./NullDependency\");\r\n\r\nclass RequireHeaderDependency extends NullDependency {\r\n\tconstructor(range) {\r\n\t\tsuper();\r\n\t\tif(!Array.isArray(range)) throw new Error(\"range must be valid\");\r\n\t\tthis.range = range;\r\n\t}\r\n}\r\n\r\nRequireHeaderDependency.Template = class RequireHeaderDependencyTemplate {\r\n\tapply(dep, source) {\r\n\t\tsource.replace(dep.range[0], dep.range[1] - 1, \"__webpack_require__\");\r\n\t}\r\n\r\n\tapplyAsTemplateArgument(name, dep, source) {\r\n\t\tsource.replace(dep.range[0], dep.range[1] - 1, \"require\");\r\n\t}\r\n};\r\n\r\nmodule.exports = RequireHeaderDependency;\r\n","/home/travis/build/npmtest/node-npmtest-webpack/node_modules/webpack/lib/dependencies/RequireResolveDependencyParserPlugin.js":"/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\n\"use strict\";\r\n\r\nconst RequireResolveDependency = require(\"./RequireResolveDependency\");\r\nconst RequireResolveContextDependency = require(\"./RequireResolveContextDependency\");\r\nconst RequireResolveHeaderDependency = require(\"./RequireResolveHeaderDependency\");\r\nconst ContextDependencyHelpers = require(\"./ContextDependencyHelpers\");\r\n\r\nclass RequireResolveDependencyParserPlugin {\r\n\tconstructor(options) {\r\n\t\tthis.options = options;\r\n\t}\r\n\r\n\tapply(parser) {\r\n\t\tconst options = this.options;\r\n\t\tparser.plugin(\"call require.resolve\", (expr) => {\r\n\t\t\treturn parser.applyPluginsBailResult(\"call require.resolve(Weak)\", expr, false);\r\n\t\t});\r\n\t\tparser.plugin(\"call require.resolveWeak\", (expr) => {\r\n\t\t\treturn parser.applyPluginsBailResult(\"call require.resolve(Weak)\", expr, true);\r\n\t\t});\r\n\t\tparser.plugin(\"call require.resolve(Weak)\", (expr, weak) => {\r\n\t\t\tif(expr.arguments.length !== 1) return;\r\n\t\t\tconst param = parser.evaluateExpression(expr.arguments[0]);\r\n\t\t\tif(param.isConditional()) {\r\n\t\t\t\tparam.options.forEach((option) => {\r\n\t\t\t\t\tconst result = parser.applyPluginsBailResult(\"call require.resolve(Weak):item\", expr, option, weak);\r\n\t\t\t\t\tif(result === undefined) {\r\n\t\t\t\t\t\tparser.applyPluginsBailResult(\"call require.resolve(Weak):context\", expr, option, weak);\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t\tconst dep = new RequireResolveHeaderDependency(expr.callee.range);\r\n\t\t\t\tdep.loc = expr.loc;\r\n\t\t\t\tparser.state.current.addDependency(dep);\r\n\t\t\t\treturn true;\r\n\t\t\t} else {\r\n\t\t\t\tconst result = parser.applyPluginsBailResult(\"call require.resolve(Weak):item\", expr, param, weak);\r\n\t\t\t\tif(result === undefined) {\r\n\t\t\t\t\tparser.applyPluginsBailResult(\"call require.resolve(Weak):context\", expr, param, weak);\r\n\t\t\t\t}\r\n\t\t\t\tconst dep = new RequireResolveHeaderDependency(expr.callee.range);\r\n\t\t\t\tdep.loc = expr.loc;\r\n\t\t\t\tparser.state.current.addDependency(dep);\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t});\r\n\t\tparser.plugin(\"call require.resolve(Weak):item\", (expr, param, weak) => {\r\n\t\t\tif(param.isString()) {\r\n\t\t\t\tconst dep = new RequireResolveDependency(param.string, param.range);\r\n\t\t\t\tdep.loc = expr.loc;\r\n\t\t\t\tdep.optional = !!parser.scope.inTry;\r\n\t\t\t\tdep.weak = weak;\r\n\t\t\t\tparser.state.current.addDependency(dep);\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t});\r\n\t\tparser.plugin(\"call require.resolve(Weak):context\", (expr, param, weak) => {\r\n\t\t\tconst dep = ContextDependencyHelpers.create(RequireResolveContextDependency, param.range, param, expr, options);\r\n\t\t\tif(!dep) return;\r\n\t\t\tdep.loc = expr.loc;\r\n\t\t\tdep.optional = !!parser.scope.inTry;\r\n\t\t\tdep.weak = weak;\r\n\t\t\tparser.state.current.addDependency(dep);\r\n\t\t\treturn true;\r\n\t\t});\r\n\t}\r\n}\r\nmodule.exports = RequireResolveDependencyParserPlugin;\r\n","/home/travis/build/npmtest/node-npmtest-webpack/node_modules/webpack/lib/dependencies/ContextDependencyHelpers.js":"/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\n\"use strict\";\r\n\r\nconst ContextDependencyHelpers = exports;\r\n\r\n/**\r\n * Escapes regular expression metacharacters\r\n * @param {string} str String to quote\r\n * @return {string} Escaped string\r\n */\r\nfunction quotemeta(str) {\r\n\treturn str.replace(/[-[\\]\\\\/{}()*+?.^$|]/g, \"\\\\$&\");\r\n}\r\n\r\nContextDependencyHelpers.create = function(Dep, range, param, expr, options, chunkName) {\r\n\tlet dep;\r\n\tlet prefix;\r\n\tlet postfix;\r\n\tlet prefixRange;\r\n\tlet valueRange;\r\n\tlet idx;\r\n\tlet context;\r\n\tlet regExp;\r\n\tif(param.isTemplateString()) {\r\n\t\tprefix = param.quasis[0].string;\r\n\t\tpostfix = param.quasis.length > 1 ? param.quasis[param.quasis.length - 1].string : \"\";\r\n\t\tprefixRange = [param.quasis[0].range[0], param.quasis[0].range[1]];\r\n\t\tvalueRange = param.range;\r\n\t\tidx = prefix.lastIndexOf(\"/\");\r\n\t\tcontext = \".\";\r\n\t\tif(idx >= 0) {\r\n\t\t\tcontext = prefix.substr(0, idx);\r\n\t\t\tprefix = `.${prefix.substr(idx)}`;\r\n\t\t}\r\n\t\t// If there are more than two quasis, maybe the generated RegExp can be more precise?\r\n\t\tregExp = new RegExp(`^${quotemeta(prefix)}${options.wrappedContextRegExp.source}${quotemeta(postfix)}$`);\r\n\t\tdep = new Dep(context, options.wrappedContextRecursive, regExp, range, valueRange, chunkName);\r\n\t\tdep.loc = expr.loc;\r\n\t\tdep.replaces = [{\r\n\t\t\trange: prefixRange,\r\n\t\t\tvalue: prefix\r\n\t\t}];\r\n\t\tdep.critical = options.wrappedContextCritical && \"a part of the request of a dependency is an expression\";\r\n\t\treturn dep;\r\n\t} else if(param.isWrapped() && (param.prefix && param.prefix.isString() || param.postfix && param.postfix.isString())) {\r\n\t\tprefix = param.prefix && param.prefix.isString() ? param.prefix.string : \"\";\r\n\t\tpostfix = param.postfix && param.postfix.isString() ? param.postfix.string : \"\";\r\n\t\tprefixRange = param.prefix && param.prefix.isString() ? param.prefix.range : null;\r\n\t\tvalueRange = [prefixRange ? prefixRange[1] : param.range[0], param.range[1]];\r\n\t\tidx = prefix.lastIndexOf(\"/\");\r\n\t\tcontext = \".\";\r\n\t\tif(idx >= 0) {\r\n\t\t\tcontext = prefix.substr(0, idx);\r\n\t\t\tprefix = `.${prefix.substr(idx)}`;\r\n\t\t}\r\n\t\tregExp = new RegExp(`^${quotemeta(prefix)}${options.wrappedContextRegExp.source}${quotemeta(postfix)}$`);\r\n\t\tdep = new Dep(context, options.wrappedContextRecursive, regExp, range, valueRange, chunkName);\r\n\t\tdep.loc = expr.loc;\r\n\t\tdep.prepend = param.prefix && param.prefix.isString() ? prefix : null;\r\n\t\tdep.critical = options.wrappedContextCritical && \"a part of the request of a dependency is an expression\";\r\n\t\treturn dep;\r\n\t} else {\r\n\t\tdep = new Dep(options.exprContextRequest, options.exprContextRecursive, options.exprContextRegExp, range, param.range, chunkName);\r\n\t\tdep.loc = expr.loc;\r\n\t\tdep.critical = options.exprContextCritical && \"the request of a dependency is an expression\";\r\n\t\treturn dep;\r\n\t}\r\n};\r\n","/home/travis/build/npmtest/node-npmtest-webpack/node_modules/webpack/lib/dependencies/CommonJsRequireDependencyParserPlugin.js":"/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\n\"use strict\";\r\n\r\nconst CommonJsRequireDependency = require(\"./CommonJsRequireDependency\");\r\nconst CommonJsRequireContextDependency = require(\"./CommonJsRequireContextDependency\");\r\nconst RequireHeaderDependency = require(\"./RequireHeaderDependency\");\r\nconst LocalModuleDependency = require(\"./LocalModuleDependency\");\r\nconst ContextDependencyHelpers = require(\"./ContextDependencyHelpers\");\r\nconst LocalModulesHelpers = require(\"./LocalModulesHelpers\");\r\nconst ParserHelpers = require(\"../ParserHelpers\");\r\n\r\nclass CommonJsRequireDependencyParserPlugin {\r\n\tconstructor(options) {\r\n\t\tthis.options = options;\r\n\t}\r\n\r\n\tapply(parser) {\r\n\t\tconst options = this.options;\r\n\t\tparser.plugin(\"expression require.cache\", ParserHelpers.toConstantDependency(\"__webpack_require__.c\"));\r\n\t\tparser.plugin(\"expression require\", (expr) => {\r\n\t\t\tconst dep = new CommonJsRequireContextDependency(options.unknownContextRequest, options.unknownContextRecursive, options.unknownContextRegExp, expr.range);\r\n\t\t\tdep.critical = options.unknownContextCritical && \"require function is used in a way in which dependencies cannot be statically extracted\";\r\n\t\t\tdep.loc = expr.loc;\r\n\t\t\tdep.optional = !!parser.scope.inTry;\r\n\t\t\tparser.state.current.addDependency(dep);\r\n\t\t\treturn true;\r\n\t\t});\r\n\t\tparser.plugin(\"call require\", (expr) => {\r\n\t\t\tif(expr.arguments.length !== 1) return;\r\n\t\t\tlet localModule;\r\n\t\t\tconst param = parser.evaluateExpression(expr.arguments[0]);\r\n\t\t\tif(param.isConditional()) {\r\n\t\t\t\tlet isExpression = false;\r\n\t\t\t\tconst prevLength = parser.state.current.dependencies.length;\r\n\t\t\t\tconst dep = new RequireHeaderDependency(expr.callee.range);\r\n\t\t\t\tdep.loc = expr.loc;\r\n\t\t\t\tparser.state.current.addDependency(dep);\r\n\t\t\t\tparam.options.forEach(function(param) {\r\n\t\t\t\t\tconst result = parser.applyPluginsBailResult(\"call require:commonjs:item\", expr, param);\r\n\t\t\t\t\tif(result === undefined) {\r\n\t\t\t\t\t\tisExpression = true;\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t\tif(isExpression) {\r\n\t\t\t\t\tparser.state.current.dependencies.length = prevLength;\r\n\t\t\t\t} else {\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif(param.isString() && (localModule = LocalModulesHelpers.getLocalModule(parser.state, param.string))) {\r\n\t\t\t\tconst dep = new LocalModuleDependency(localModule, expr.range);\r\n\t\t\t\tdep.loc = expr.loc;\r\n\t\t\t\tparser.state.current.addDependency(dep);\r\n\t\t\t\treturn true;\r\n\t\t\t} else {\r\n\t\t\t\tconst result = parser.applyPluginsBailResult(\"call require:commonjs:item\", expr, param);\r\n\t\t\t\tif(result === undefined) {\r\n\t\t\t\t\tparser.applyPluginsBailResult(\"call require:commonjs:context\", expr, param);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tconst dep = new RequireHeaderDependency(expr.callee.range);\r\n\t\t\t\t\tdep.loc = expr.loc;\r\n\t\t\t\t\tparser.state.current.addDependency(dep);\r\n\t\t\t\t}\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t});\r\n\t\tparser.plugin(\"call require:commonjs:item\", (expr, param) => {\r\n\t\t\tif(param.isString()) {\r\n\t\t\t\tconst dep = new CommonJsRequireDependency(param.string, param.range);\r\n\t\t\t\tdep.loc = expr.loc;\r\n\t\t\t\tdep.optional = !!parser.scope.inTry;\r\n\t\t\t\tparser.state.current.addDependency(dep);\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t});\r\n\t\tparser.plugin(\"call require:commonjs:context\", (expr, param) => {\r\n\t\t\tconst dep = ContextDependencyHelpers.create(CommonJsRequireContextDependency, expr.range, param, expr, options);\r\n\t\t\tif(!dep) return;\r\n\t\t\tdep.loc = expr.loc;\r\n\t\t\tdep.optional = !!parser.scope.inTry;\r\n\t\t\tparser.state.current.addDependency(dep);\r\n\t\t\treturn true;\r\n\t\t});\r\n\t}\r\n}\r\nmodule.exports = CommonJsRequireDependencyParserPlugin;\r\n","/home/travis/build/npmtest/node-npmtest-webpack/node_modules/webpack/lib/dependencies/LocalModuleDependency.js":"/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\n\"use strict\";\r\nconst NullDependency = require(\"./NullDependency\");\r\n\r\nclass LocalModuleDependency extends NullDependency {\r\n\tconstructor(localModule, range) {\r\n\t\tsuper();\r\n\t\tlocalModule.flagUsed();\r\n\t\tthis.localModule = localModule;\r\n\t\tthis.range = range;\r\n\t}\r\n}\r\n\r\nLocalModuleDependency.Template = class LocalModuleDependencyTemplate {\r\n\tapply(dep, source) {\r\n\t\tif(!dep.range) return;\r\n\t\tsource.replace(dep.range[0], dep.range[1] - 1, dep.localModule.variableName());\r\n\t}\r\n};\r\n\r\nmodule.exports = LocalModuleDependency;\r\n","/home/travis/build/npmtest/node-npmtest-webpack/node_modules/webpack/lib/dependencies/LocalModulesHelpers.js":"/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\n\"use strict\";\r\n\r\nconst LocalModule = require(\"./LocalModule\");\r\nconst LocalModulesHelpers = exports;\r\n\r\nconst lookup = (parent, mod) => {\r\n\tif(mod.charAt(0) !== \".\") return mod;\r\n\r\n\tvar path = parent.split(\"/\"),\r\n\t\tsegs = mod.split(\"/\");\r\n\tpath.pop();\r\n\r\n\tfor(var i = 0; i < segs.length; i++) {\r\n\t\tvar seg = segs[i];\r\n\t\tif(seg === \"..\") path.pop();\r\n\t\telse if(seg !== \".\") path.push(seg);\r\n\t}\r\n\r\n\treturn path.join(\"/\");\r\n};\r\n\r\nLocalModulesHelpers.addLocalModule = (state, name) => {\r\n\tif(!state.localModules) state.localModules = [];\r\n\tvar m = new LocalModule(state.module, name, state.localModules.length);\r\n\tstate.localModules.push(m);\r\n\treturn m;\r\n};\r\n\r\nLocalModulesHelpers.getLocalModule = (state, name, namedModule) => {\r\n\tif(!state.localModules) return null;\r\n\tif(namedModule) {\r\n\t\t// resolve dependency name relative to the defining named module\r\n\t\tname = lookup(namedModule, name);\r\n\t}\r\n\tfor(var i = 0; i < state.localModules.length; i++) {\r\n\t\tif(state.localModules[i].name === name)\r\n\t\t\treturn state.localModules[i];\r\n\t}\r\n\treturn null;\r\n};\r\n\r\nmodule.exports = LocalModulesHelpers;\r\n","/home/travis/build/npmtest/node-npmtest-webpack/node_modules/webpack/lib/dependencies/LocalModule.js":"/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\n\"use strict\";\r\n\r\nclass LocalModule {\r\n\tconstructor(module, name, idx) {\r\n\t\tthis.module = module;\r\n\t\tthis.name = name;\r\n\t\tthis.idx = idx;\r\n\t\tthis.used = false;\r\n\t}\r\n\r\n\tflagUsed() {\r\n\t\tthis.used = true;\r\n\t}\r\n\r\n\tvariableName() {\r\n\t\treturn \"__WEBPACK_LOCAL_MODULE_\" + this.idx + \"__\";\r\n\t}\r\n}\r\nmodule.exports = LocalModule;\r\n","/home/travis/build/npmtest/node-npmtest-webpack/node_modules/webpack/lib/dependencies/HarmonyModulesPlugin.js":"/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\n\"use strict\";\r\nconst HarmonyImportDependency = require(\"./HarmonyImportDependency\");\r\nconst HarmonyImportSpecifierDependency = require(\"./HarmonyImportSpecifierDependency\");\r\nconst HarmonyCompatiblilityDependency = require(\"./HarmonyCompatibilityDependency\");\r\nconst HarmonyExportHeaderDependency = require(\"./HarmonyExportHeaderDependency\");\r\nconst HarmonyExportExpressionDependency = require(\"./HarmonyExportExpressionDependency\");\r\nconst HarmonyExportSpecifierDependency = require(\"./HarmonyExportSpecifierDependency\");\r\nconst HarmonyExportImportedSpecifierDependency = require(\"./HarmonyExportImportedSpecifierDependency\");\r\nconst HarmonyAcceptDependency = require(\"./HarmonyAcceptDependency\");\r\nconst HarmonyAcceptImportDependency = require(\"./HarmonyAcceptImportDependency\");\r\n\r\nconst NullFactory = require(\"../NullFactory\");\r\n\r\nconst HarmonyDetectionParserPlugin = require(\"./HarmonyDetectionParserPlugin\");\r\nconst HarmonyImportDependencyParserPlugin = require(\"./HarmonyImportDependencyParserPlugin\");\r\nconst HarmonyExportDependencyParserPlugin = require(\"./HarmonyExportDependencyParserPlugin\");\r\n\r\nclass HarmonyModulesPlugin {\r\n\tconstructor(options) {\r\n\t\tthis.options = options;\r\n\t}\r\n\r\n\tapply(compiler) {\r\n\t\tcompiler.plugin(\"compilation\", (compilation, params) => {\r\n\t\t\tconst normalModuleFactory = params.normalModuleFactory;\r\n\r\n\t\t\tcompilation.dependencyFactories.set(HarmonyImportDependency, normalModuleFactory);\r\n\t\t\tcompilation.dependencyTemplates.set(HarmonyImportDependency, new HarmonyImportDependency.Template());\r\n\r\n\t\t\tcompilation.dependencyFactories.set(HarmonyImportSpecifierDependency, new NullFactory());\r\n\t\t\tcompilation.dependencyTemplates.set(HarmonyImportSpecifierDependency, new HarmonyImportSpecifierDependency.Template());\r\n\r\n\t\t\tcompilation.dependencyFactories.set(HarmonyCompatiblilityDependency, new NullFactory());\r\n\t\t\tcompilation.dependencyTemplates.set(HarmonyCompatiblilityDependency, new HarmonyCompatiblilityDependency.Template());\r\n\r\n\t\t\tcompilation.dependencyFactories.set(HarmonyExportHeaderDependency, new NullFactory());\r\n\t\t\tcompilation.dependencyTemplates.set(HarmonyExportHeaderDependency, new HarmonyExportHeaderDependency.Template());\r\n\r\n\t\t\tcompilation.dependencyFactories.set(HarmonyExportExpressionDependency, new NullFactory());\r\n\t\t\tcompilation.dependencyTemplates.set(HarmonyExportExpressionDependency, new HarmonyExportExpressionDependency.Template());\r\n\r\n\t\t\tcompilation.dependencyFactories.set(HarmonyExportSpecifierDependency, new NullFactory());\r\n\t\t\tcompilation.dependencyTemplates.set(HarmonyExportSpecifierDependency, new HarmonyExportSpecifierDependency.Template());\r\n\r\n\t\t\tcompilation.dependencyFactories.set(HarmonyExportImportedSpecifierDependency, new NullFactory());\r\n\t\t\tcompilation.dependencyTemplates.set(HarmonyExportImportedSpecifierDependency, new HarmonyExportImportedSpecifierDependency.Template());\r\n\r\n\t\t\tcompilation.dependencyFactories.set(HarmonyAcceptDependency, new NullFactory());\r\n\t\t\tcompilation.dependencyTemplates.set(HarmonyAcceptDependency, new HarmonyAcceptDependency.Template());\r\n\r\n\t\t\tcompilation.dependencyFactories.set(HarmonyAcceptImportDependency, normalModuleFactory);\r\n\t\t\tcompilation.dependencyTemplates.set(HarmonyAcceptImportDependency, new HarmonyAcceptImportDependency.Template());\r\n\r\n\t\t\tparams.normalModuleFactory.plugin(\"parser\", (parser, parserOptions) => {\r\n\r\n\t\t\t\tif(typeof parserOptions.harmony !== \"undefined\" && !parserOptions.harmony)\r\n\t\t\t\t\treturn;\r\n\r\n\t\t\t\tparser.apply(\r\n\t\t\t\t\tnew HarmonyDetectionParserPlugin(),\r\n\t\t\t\t\tnew HarmonyImportDependencyParserPlugin(this.options),\r\n\t\t\t\t\tnew HarmonyExportDependencyParserPlugin()\r\n\t\t\t\t);\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n}\r\nmodule.exports = HarmonyModulesPlugin;\r\n","/home/travis/build/npmtest/node-npmtest-webpack/node_modules/webpack/lib/dependencies/HarmonyImportDependency.js":"/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\n\"use strict\";\r\nvar ModuleDependency = require(\"./ModuleDependency\");\r\n\r\nclass HarmonyImportDependency extends ModuleDependency {\r\n\tconstructor(request, importedVar, range) {\r\n\t\tsuper(request);\r\n\t\tthis.range = range;\r\n\t\tthis.importedVar = importedVar;\r\n\t}\r\n\r\n\tget type() {\r\n\t\treturn \"harmony import\";\r\n\t}\r\n\r\n\tgetReference() {\r\n\t\tif(!this.module) return null;\r\n\r\n\t\treturn {\r\n\t\t\tmodule: this.module,\r\n\t\t\timportedNames: false\r\n\t\t};\r\n\t}\r\n\r\n\tupdateHash(hash) {\r\n\t\tsuper.updateHash(hash);\r\n\t\thash.update((this.module && (!this.module.meta || this.module.meta.harmonyModule)) + \"\");\r\n\t}\r\n}\r\n\r\nHarmonyImportDependency.Template = class HarmonyImportDependencyTemplate {\r\n\tapply(dep, source, outputOptions, requestShortener) {\r\n\t\tconst content = makeImportStatement(true, dep, outputOptions, requestShortener);\r\n\t\tsource.replace(dep.range[0], dep.range[1] - 1, \"\");\r\n\t\tsource.insert(-1, content);\r\n\t}\r\n};\r\n\r\nfunction getOptionalComment(pathinfo, shortenedRequest) {\r\n\tif(!pathinfo) {\r\n\t\treturn \"\";\r\n\t}\r\n\treturn `/*! ${shortenedRequest} */ `;\r\n}\r\n\r\nfunction makeImportStatement(declare, dep, outputOptions, requestShortener) {\r\n\tconst comment = getOptionalComment(outputOptions.pathinfo, requestShortener.shorten(dep.request));\r\n\tconst declaration = declare ? \"var \" : \"\";\r\n\tconst newline = declare ? \"\\n\" : \" \";\r\n\r\n\tif(!dep.module) {\r\n\t\tconst stringifiedError = JSON.stringify(`Cannot find module \"${dep.request}\"`);\r\n\t\treturn `throw new Error(${stringifiedError});${newline}`;\r\n\t}\r\n\r\n\tif(dep.importedVar) {\r\n\t\tconst isHarmonyModule = dep.module.meta && dep.module.meta.harmonyModule;\r\n\t\tconst content = `/* harmony import */ ${declaration}${dep.importedVar} = __webpack_require__(${comment}${JSON.stringify(dep.module.id)});${newline}`;\r\n\t\tif(isHarmonyModule) {\r\n\t\t\treturn content;\r\n\t\t}\r\n\t\treturn `${content}/* harmony import */ ${declaration}${dep.importedVar}_default = __webpack_require__.n(${dep.importedVar});${newline}`;\r\n\t}\r\n\r\n\treturn \"\";\r\n}\r\nHarmonyImportDependency.makeImportStatement = makeImportStatement;\r\n\r\nmodule.exports = HarmonyImportDependency;\r\n","/home/travis/build/npmtest/node-npmtest-webpack/node_modules/webpack/lib/dependencies/HarmonyImportSpecifierDependency.js":"/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\n\"use strict\";\r\nconst NullDependency = require(\"./NullDependency\");\r\n\r\nclass HarmonyImportSpecifierDependency extends NullDependency {\r\n\tconstructor(importDependency, importedVar, id, name, range, strictExportPresence) {\r\n\t\tsuper();\r\n\t\tthis.importDependency = importDependency;\r\n\t\tthis.importedVar = importedVar;\r\n\t\tthis.id = id;\r\n\t\tthis.name = name;\r\n\t\tthis.range = range;\r\n\t\tthis.strictExportPresence = strictExportPresence;\r\n\t}\r\n\r\n\tget type() {\r\n\t\treturn \"harmony import specifier\";\r\n\t}\r\n\r\n\tgetReference() {\r\n\t\tif(!this.importDependency.module) return null;\r\n\t\treturn {\r\n\t\t\tmodule: this.importDependency.module,\r\n\t\t\timportedNames: this.id ? [this.id] : true\r\n\t\t};\r\n\t}\r\n\r\n\tgetWarnings() {\r\n\t\tif(this.strictExportPresence) {\r\n\t\t\treturn [];\r\n\t\t}\r\n\t\treturn this._getErrors();\r\n\t}\r\n\r\n\tgetErrors() {\r\n\t\tif(this.strictExportPresence) {\r\n\t\t\treturn this._getErrors();\r\n\t\t}\r\n\t\treturn [];\r\n\t}\r\n\r\n\t_getErrors() {\r\n\t\tconst importedModule = this.importDependency.module;\r\n\t\tif(!importedModule || !importedModule.meta || !importedModule.meta.harmonyModule) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif(!this.id) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif(importedModule.isProvided(this.id) !== false) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tconst idIsNotNameMessage = this.id !== this.name ? ` (imported as '${this.name}')` : \"\";\r\n\t\tconst errorMessage = `\"export '${this.id}'${idIsNotNameMessage} was not found in '${this.importDependency.userRequest}'`;\r\n\t\tconst err = new Error(errorMessage);\r\n\t\terr.hideStack = true;\r\n\t\treturn [err];\r\n\t}\r\n\r\n\tupdateHash(hash) {\r\n\t\tsuper.updateHash(hash);\r\n\t\tconst importedModule = this.importDependency.module;\r\n\t\thash.update((importedModule && importedModule.id) + \"\");\r\n\t\thash.update((importedModule && this.id) + \"\");\r\n\t\thash.update((importedModule && this.importedVar) + \"\");\r\n\t\thash.update((importedModule && this.id && importedModule.isUsed(this.id)) + \"\");\r\n\t\thash.update((importedModule && (!importedModule.meta || importedModule.meta.harmonyModule)) + \"\");\r\n\t\thash.update((importedModule && (importedModule.used + JSON.stringify(importedModule.usedExports))) + \"\");\r\n\t}\r\n}\r\n\r\nHarmonyImportSpecifierDependency.Template = class HarmonyImportSpecifierDependencyTemplate {\r\n\tapply(dep, source) {\r\n\t\tconst content = this.getContent(dep);\r\n\t\tsource.replace(dep.range[0], dep.range[1] - 1, content);\r\n\t}\r\n\r\n\tgetContent(dep) {\r\n\t\tconst importedModule = dep.importDependency.module;\r\n\t\tconst defaultImport = dep.directImport && dep.id === \"default\" && !(importedModule && (!importedModule.meta || importedModule.meta.harmonyModule));\r\n\t\tconst shortHandPrefix = this.getShortHandPrefix(dep);\r\n\t\tconst importedVar = dep.importedVar;\r\n\t\tconst importedVarSuffix = this.getImportVarSuffix(dep, defaultImport, importedModule);\r\n\r\n\t\tif(dep.call && defaultImport) {\r\n\t\t\treturn `${shortHandPrefix}${importedVar}_default()`;\r\n\t\t}\r\n\r\n\t\tif(dep.call && dep.id) {\r\n\t\t\treturn `${shortHandPrefix}__webpack_require__.i(${importedVar}${importedVarSuffix})`;\r\n\t\t}\r\n\r\n\t\treturn `${shortHandPrefix}${importedVar}${importedVarSuffix}`;\r\n\t}\r\n\r\n\tgetImportVarSuffix(dep, defaultImport, importedModule) {\r\n\t\tif(defaultImport) {\r\n\t\t\treturn \"_default.a\";\r\n\t\t}\r\n\r\n\t\tif(dep.id) {\r\n\t\t\tconst used = importedModule ? importedModule.isUsed(dep.id) : dep.id;\r\n\t\t\tconst optionalComment = dep.id !== used ? \" /* \" + dep.id + \" */\" : \"\";\r\n\t\t\treturn `[${JSON.stringify(used)}${optionalComment}]`;\r\n\t\t}\r\n\r\n\t\treturn \"\";\r\n\t}\r\n\r\n\tgetShortHandPrefix(dep) {\r\n\t\tif(!dep.shorthand) {\r\n\t\t\treturn \"\";\r\n\t\t}\r\n\r\n\t\treturn dep.name + \": \";\r\n\t}\r\n};\r\n\r\nmodule.exports = HarmonyImportSpecifierDependency;\r\n","/home/travis/build/npmtest/node-npmtest-webpack/node_modules/webpack/lib/dependencies/HarmonyCompatibilityDependency.js":"/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\n\"use strict\";\r\nconst NullDependency = require(\"./NullDependency\");\r\n\r\nclass HarmonyCompatibilityDependency extends NullDependency {\r\n\tconstructor(originModule) {\r\n\t\tsuper();\r\n\t\tthis.originModule = originModule;\r\n\t}\r\n\r\n\tget type() {\r\n\t\treturn \"harmony export header\";\r\n\t}\r\n}\r\n\r\nHarmonyCompatibilityDependency.Template = class HarmonyExportDependencyTemplate {\r\n\tapply(dep, source) {\r\n\t\tconst usedExports = dep.originModule.usedExports;\r\n\t\tif(usedExports && !Array.isArray(usedExports)) {\r\n\t\t\tconst exportName = dep.originModule.exportsArgument || \"exports\";\r\n\t\t\tconst content = `Object.defineProperty(${exportName}, \\\"__esModule\\\", { value: true });\\n`;\r\n\t\t\tsource.insert(-1, content);\r\n\t\t}\r\n\t}\r\n};\r\n\r\nmodule.exports = HarmonyCompatibilityDependency;\r\n","/home/travis/build/npmtest/node-npmtest-webpack/node_modules/webpack/lib/dependencies/HarmonyExportHeaderDependency.js":"/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\n\"use strict\";\r\nconst NullDependency = require(\"./NullDependency\");\r\n\r\nclass HarmonyExportHeaderDependency extends NullDependency {\r\n\tconstructor(range, rangeStatement) {\r\n\t\tsuper();\r\n\t\tthis.range = range;\r\n\t\tthis.rangeStatement = rangeStatement;\r\n\t}\r\n\r\n\tget type() {\r\n\t\treturn \"harmony export header\";\r\n\t}\r\n}\r\n\r\nHarmonyExportHeaderDependency.Template = class HarmonyExportDependencyTemplate {\r\n\tapply(dep, source) {\r\n\t\tconst content = \"\";\r\n\t\tconst replaceUntil = dep.range ? dep.range[0] - 1 : dep.rangeStatement[1] - 1;\r\n\t\tsource.replace(dep.rangeStatement[0], replaceUntil, content);\r\n\t}\r\n};\r\n\r\nmodule.exports = HarmonyExportHeaderDependency;\r\n","/home/travis/build/npmtest/node-npmtest-webpack/node_modules/webpack/lib/dependencies/HarmonyExportExpressionDependency.js":"/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\n\"use strict\";\r\nconst NullDependency = require(\"./NullDependency\");\r\n\r\nclass HarmonyExportExpressionDependency extends NullDependency {\r\n\tconstructor(originModule, range, rangeStatement) {\r\n\t\tsuper();\r\n\t\tthis.originModule = originModule;\r\n\t\tthis.range = range;\r\n\t\tthis.rangeStatement = rangeStatement;\r\n\t}\r\n\r\n\tget type() {\r\n\t\treturn \"harmony export expression\";\r\n\t}\r\n\r\n\tgetExports() {\r\n\t\treturn {\r\n\t\t\texports: [\"default\"]\r\n\t\t};\r\n\t}\r\n\r\n\tdescribeHarmonyExport() {\r\n\t\treturn {\r\n\t\t\texportedName: \"default\",\r\n\t\t\tprecedence: 1,\r\n\t\t};\r\n\t}\r\n}\r\n\r\nHarmonyExportExpressionDependency.Template = class HarmonyExportDependencyTemplate {\r\n\tapply(dep, source) {\r\n\t\tconst used = dep.originModule.isUsed(\"default\");\r\n\t\tconst content = this.getContent(dep.originModule, used);\r\n\r\n\t\tif(dep.range) {\r\n\t\t\tsource.replace(dep.rangeStatement[0], dep.range[0] - 1, content + \"(\");\r\n\t\t\tsource.replace(dep.range[1], dep.rangeStatement[1] - 1, \");\");\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tsource.replace(dep.rangeStatement[0], dep.rangeStatement[1] - 1, content);\r\n\t}\r\n\r\n\tgetContent(module, used) {\r\n\t\tconst exportsName = module.exportsArgument || \"exports\";\r\n\t\tif(used) {\r\n\t\t\treturn `/* harmony default export */ ${exportsName}[${JSON.stringify(used)}] = `;\r\n\t\t}\r\n\t\treturn \"/* unused harmony default export */ var _unused_webpack_default_export = \";\r\n\t}\r\n};\r\n\r\nmodule.exports = HarmonyExportExpressionDependency;\r\n","/home/travis/build/npmtest/node-npmtest-webpack/node_modules/webpack/lib/dependencies/HarmonyExportSpecifierDependency.js":"/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\n\"use strict\";\r\nconst NullDependency = require(\"./NullDependency\");\r\nconst HarmonyModulesHelpers = require(\"./HarmonyModulesHelpers\");\r\n\r\nclass HarmonyExportSpecifierDependency extends NullDependency {\r\n\tconstructor(originModule, id, name, position, immutable) {\r\n\t\tsuper();\r\n\t\tthis.originModule = originModule;\r\n\t\tthis.id = id;\r\n\t\tthis.name = name;\r\n\t\tthis.position = position;\r\n\t\tthis.immutable = immutable;\r\n\t}\r\n\r\n\tget type() {\r\n\t\treturn \"harmony export specifier\";\r\n\t}\r\n\r\n\tgetExports() {\r\n\t\treturn {\r\n\t\t\texports: [this.name]\r\n\t\t};\r\n\t}\r\n\r\n\tdescribeHarmonyExport() {\r\n\t\treturn {\r\n\t\t\texportedName: this.name,\r\n\t\t\tprecedence: 1\r\n\t\t};\r\n\t}\r\n}\r\n\r\nHarmonyExportSpecifierDependency.Template = class HarmonyExportSpecifierDependencyTemplate {\r\n\tapply(dep, source) {\r\n\t\tconst content = this.getPrefix(dep) + this.getContent(dep);\r\n\t\tsource.insert(dep.position, content);\r\n\t}\r\n\r\n\tgetPrefix(dep) {\r\n\t\treturn dep.position > 0 ? \"\\n\" : \"\";\r\n\t}\r\n\r\n\tgetContent(dep) {\r\n\t\tconst used = dep.originModule.isUsed(dep.name);\r\n\t\tconst active = HarmonyModulesHelpers.isActive(dep.originModule, dep);\r\n\t\tif(!used) {\r\n\t\t\treturn `/* unused harmony export ${(dep.name || \"namespace\")} */\\n`;\r\n\t\t}\r\n\r\n\t\tif(!active) {\r\n\t\t\treturn `/* inactive harmony export ${(dep.name || \"namespace\")} */\\n`;\r\n\t\t}\r\n\r\n\t\tconst exportsName = dep.originModule.exportsArgument || \"exports\";\r\n\t\tif(dep.immutable) {\r\n\t\t\treturn `/* harmony export (immutable) */ ${exportsName}[${JSON.stringify(used)}] = ${dep.id};\\n`;\r\n\t\t}\r\n\r\n\t\treturn `/* harmony export (binding) */ __webpack_require__.d(${exportsName}, ${JSON.stringify(used)}, function() { return ${dep.id}; });\\n`;\r\n\t}\r\n};\r\n\r\nmodule.exports = HarmonyExportSpecifierDependency;\r\n","/home/travis/build/npmtest/node-npmtest-webpack/node_modules/webpack/lib/dependencies/HarmonyModulesHelpers.js":"/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\n\"use strict\";\r\n\r\nclass HarmonyModulesHelpers {\r\n\r\n\tstatic getModuleVar(state, request) {\r\n\t\tif(!state.harmonyModules) state.harmonyModules = [];\r\n\t\tvar idx = state.harmonyModules.indexOf(request);\r\n\t\tif(idx < 0) {\r\n\t\t\tidx = state.harmonyModules.length;\r\n\t\t\tstate.harmonyModules.push(request);\r\n\t\t}\r\n\t\treturn \"__WEBPACK_IMPORTED_MODULE_\" + idx + \"_\" + request.replace(/[^A-Za-z0-9_]/g, \"_\").replace(/__+/g, \"_\") + \"__\";\r\n\t}\r\n\r\n\tstatic getNewModuleVar(state, request) {\r\n\t\tif(state.harmonyModules && state.harmonyModules.indexOf(request) >= 0)\r\n\t\t\treturn null;\r\n\t\treturn this.getModuleVar(state, request);\r\n\t}\r\n\r\n\tstatic checkModuleVar(state, request) {\r\n\t\tif(!state.harmonyModules || state.harmonyModules.indexOf(request) < 0)\r\n\t\t\treturn null;\r\n\t\treturn this.getModuleVar(state, request);\r\n\t}\r\n\r\n\t// checks if an harmony dependency is active in a module according to\r\n\t// precedence rules.\r\n\tstatic isActive(module, depInQuestion) {\r\n\t\tvar desc = depInQuestion.describeHarmonyExport();\r\n\t\tif(!desc.exportedName) return true;\r\n\t\tvar before = true;\r\n\t\tfor(var i = 0; i < module.dependencies.length; i++) {\r\n\t\t\tvar dep = module.dependencies[i];\r\n\t\t\tif(dep === depInQuestion) {\r\n\t\t\t\tbefore = false;\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\t\t\tif(!dep.describeHarmonyExport) continue;\r\n\t\t\tvar d = dep.describeHarmonyExport();\r\n\t\t\tif(!d || !d.exportedName) continue;\r\n\t\t\tif(d.exportedName === desc.exportedName) {\r\n\t\t\t\tif(d.precedence < desc.precedence) {\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t\tif(d.precedence === desc.precedence && !before) {\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn true;\r\n\t}\r\n\r\n\t// get a list of named exports defined in a module\r\n\t// doesn't include * reexports.\r\n\tstatic getActiveExports(module, currentDependency) {\r\n\t\tvar desc = currentDependency && currentDependency.describeHarmonyExport();\r\n\t\tvar currentIndex = currentDependency ? module.dependencies.indexOf(currentDependency) : -1;\r\n\t\treturn module.dependencies.map((dep, idx) => {\r\n\t\t\treturn {\r\n\t\t\t\tdep: dep,\r\n\t\t\t\tidx: idx\r\n\t\t\t};\r\n\t\t}).reduce((arr, data) => {\r\n\t\t\tvar dep = data.dep;\r\n\t\t\tif(!dep.describeHarmonyExport) return arr;\r\n\t\t\tvar d = dep.describeHarmonyExport();\r\n\t\t\tif(!d) return arr;\r\n\t\t\tif(!desc || (d.precedence < desc.precedence) || (d.precedence === desc.precedence && data.idx < currentIndex)) {\r\n\t\t\t\tvar names = [].concat(d.exportedName);\r\n\t\t\t\tnames.forEach(function(name) {\r\n\t\t\t\t\tif(name && arr.indexOf(name) < 0)\r\n\t\t\t\t\t\tarr.push(name);\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\treturn arr;\r\n\t\t}, []);\r\n\t}\r\n}\r\n\r\nmodule.exports = HarmonyModulesHelpers;\r\n","/home/travis/build/npmtest/node-npmtest-webpack/node_modules/webpack/lib/dependencies/HarmonyExportImportedSpecifierDependency.js":"/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\n\"use strict\";\r\nconst NullDependency = require(\"./NullDependency\");\r\nconst HarmonyModulesHelpers = require(\"./HarmonyModulesHelpers\");\r\n\r\nclass HarmonyExportImportedSpecifierDependency extends NullDependency {\r\n\tconstructor(originModule, importDependency, importedVar, id, name) {\r\n\t\tsuper();\r\n\t\tthis.originModule = originModule;\r\n\t\tthis.importDependency = importDependency;\r\n\t\tthis.importedVar = importedVar;\r\n\t\tthis.id = id;\r\n\t\tthis.name = name;\r\n\t}\r\n\r\n\tget type() {\r\n\t\treturn \"harmony export imported specifier\";\r\n\t}\r\n\r\n\tgetReference() {\r\n\t\tconst name = this.name;\r\n\t\tconst used = this.originModule.isUsed(name);\r\n\t\tconst active = HarmonyModulesHelpers.isActive(this.originModule, this);\r\n\t\tconst importedModule = this.importDependency.module;\r\n\r\n\t\tif(!importedModule || !used || !active) return null;\r\n\t\tif(!this.originModule.usedExports) return null;\r\n\r\n\t\tif(name) {\r\n\t\t\tconst nameIsNotInUsedExports = Array.isArray(this.originModule.usedExports) && this.originModule.usedExports.indexOf(name) < 0;\r\n\t\t\tif(nameIsNotInUsedExports) return null;\r\n\r\n\t\t\t// export { name as name }\r\n\t\t\tif(this.id) {\r\n\t\t\t\treturn {\r\n\t\t\t\t\tmodule: importedModule,\r\n\t\t\t\t\timportedNames: [this.id]\r\n\t\t\t\t};\r\n\t\t\t}\r\n\r\n\t\t\t// export { * as name }\r\n\t\t\treturn {\r\n\t\t\t\tmodule: importedModule,\r\n\t\t\t\timportedNames: true\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\t// export *\r\n\t\tif(Array.isArray(this.originModule.usedExports)) {\r\n\t\t\t// reexport * with known used exports\r\n\t\t\tvar activeExports = HarmonyModulesHelpers.getActiveExports(this.originModule, this);\r\n\t\t\tif(Array.isArray(importedModule.providedExports)) {\r\n\t\t\t\treturn {\r\n\t\t\t\t\tmodule: importedModule,\r\n\t\t\t\t\timportedNames: this.originModule.usedExports.filter((id) => {\r\n\t\t\t\t\t\tconst notInActiveExports = activeExports.indexOf(id) < 0;\r\n\t\t\t\t\t\tconst notDefault = id !== \"default\";\r\n\t\t\t\t\t\tconst inProvidedExports = importedModule.providedExports.indexOf(id) >= 0;\r\n\t\t\t\t\t\treturn notInActiveExports && notDefault && inProvidedExports;\r\n\t\t\t\t\t}),\r\n\t\t\t\t};\r\n\t\t\t}\r\n\r\n\t\t\treturn {\r\n\t\t\t\tmodule: importedModule,\r\n\t\t\t\timportedNames: this.originModule.usedExports.filter(id => {\r\n\t\t\t\t\tconst notInActiveExports = activeExports.indexOf(id) < 0;\r\n\t\t\t\t\tconst notDefault = id !== \"default\";\r\n\t\t\t\t\treturn notInActiveExports && notDefault;\r\n\t\t\t\t}),\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tif(Array.isArray(importedModule.providedExports)) {\r\n\t\t\treturn {\r\n\t\t\t\tmodule: importedModule,\r\n\t\t\t\timportedNames: importedModule.providedExports.filter(id => id !== \"default\"),\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn {\r\n\t\t\tmodule: importedModule,\r\n\t\t\timportedNames: true,\r\n\t\t};\r\n\t}\r\n\r\n\tgetExports() {\r\n\t\tif(this.name) {\r\n\t\t\treturn {\r\n\t\t\t\texports: [this.name]\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tconst importedModule = this.importDependency.module;\r\n\r\n\t\tif(!importedModule) {\r\n\t\t\t// no imported module available\r\n\t\t\treturn {\r\n\t\t\t\texports: null\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tif(Array.isArray(importedModule.providedExports)) {\r\n\t\t\treturn {\r\n\t\t\t\texports: importedModule.providedExports.filter(id => id !== \"default\"),\r\n\t\t\t\tdependencies: [importedModule]\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tif(importedModule.providedExports) {\r\n\t\t\treturn {\r\n\t\t\t\texports: true\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn {\r\n\t\t\texports: null,\r\n\t\t\tdependencies: [importedModule]\r\n\t\t};\r\n\t}\r\n\r\n\tdescribeHarmonyExport() {\r\n\t\tconst importedModule = this.importDependency.module;\r\n\t\tif(!this.name && importedModule && Array.isArray(importedModule.providedExports)) {\r\n\t\t\t// for a star export and when we know which exports are provided, we can tell so\r\n\t\t\treturn {\r\n\t\t\t\texportedName: importedModule.providedExports,\r\n\t\t\t\tprecedence: 3\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn {\r\n\t\t\texportedName: this.name,\r\n\t\t\tprecedence: this.name ? 2 : 3\r\n\t\t};\r\n\t}\r\n\r\n\tupdateHash(hash) {\r\n\t\tsuper.updateHash(hash);\r\n\t\tconst hashValue = this.getHashValue(this.importDependency.module);\r\n\t\thash.update(hashValue);\r\n\t}\r\n\r\n\tgetHashValue(importedModule) {\r\n\t\tif(!importedModule) {\r\n\t\t\treturn \"\";\r\n\t\t}\r\n\r\n\t\tconst stringifiedUsedExport = JSON.stringify(importedModule.usedExports);\r\n\t\tconst stringifiedProvidedExport = JSON.stringify(importedModule.providedExports);\r\n\t\treturn importedModule.used + stringifiedUsedExport + stringifiedProvidedExport;\r\n\t}\r\n}\r\n\r\nmodule.exports = HarmonyExportImportedSpecifierDependency;\r\n\r\nHarmonyExportImportedSpecifierDependency.Template = class HarmonyExportImportedSpecifierDependencyTemplate {\r\n\tapply(dep, source, outputOptions, requestShortener) {\r\n\t\tconst content = this.getContent(dep);\r\n\t\tsource.insert(-1, content);\r\n\t}\r\n\r\n\tgetContent(dep) {\r\n\t\tconst name = dep.importedVar;\r\n\t\tconst used = dep.originModule.isUsed(dep.name);\r\n\t\tconst importedModule = dep.importDependency.module;\r\n\t\tconst active = HarmonyModulesHelpers.isActive(dep.originModule, dep);\r\n\t\tconst importsExportsUnknown = !importedModule || !Array.isArray(importedModule.providedExports);\r\n\r\n\t\tconst getReexportStatement = this.reexportStatementCreator(dep.originModule, importsExportsUnknown, name);\r\n\r\n\t\t// we want to rexport something, but the export isn't used\r\n\t\tif(!used) {\r\n\t\t\treturn \"/* unused harmony reexport \" + dep.name + \" */\\n\";\r\n\t\t}\r\n\r\n\t\t// we want to reexport something but another exports overrides this one\r\n\t\tif(!active) {\r\n\t\t\treturn \"/* inactive harmony reexport \" + (dep.name || \"namespace\") + \" */\\n\";\r\n\t\t}\r\n\r\n\t\t// we want to reexport the default export from a non-hamory module\r\n\t\tconst isNotAHarmonyModule = !(importedModule && (!importedModule.meta || importedModule.meta.harmonyModule));\r\n\t\tif(dep.name && dep.id === \"default\" && isNotAHarmonyModule) {\r\n\t\t\treturn \"/* harmony reexport (default from non-hamory) */ \" + getReexportStatement(JSON.stringify(used), null);\r\n\t\t}\r\n\r\n\t\t// we want to reexport a key as new key\r\n\t\tif(dep.name && dep.id) {\r\n\t\t\tvar idUsed = importedModule && importedModule.isUsed(dep.id);\r\n\t\t\treturn \"/* harmony reexport (binding) */ \" + getReexportStatement(JSON.stringify(used), JSON.stringify(idUsed));\r\n\t\t}\r\n\r\n\t\t// we want to reexport the module object as named export\r\n\t\tif(dep.name) {\r\n\t\t\treturn \"/* harmony reexport (module object) */ \" + getReexportStatement(JSON.stringify(used), \"\");\r\n\t\t}\r\n\r\n\t\t// we know which exports are used\r\n\t\tif(Array.isArray(dep.originModule.usedExports)) {\r\n\t\t\tconst activeExports = HarmonyModulesHelpers.getActiveExports(dep.originModule, dep);\r\n\t\t\tconst items = dep.originModule.usedExports.map(function(id) {\r\n\t\t\t\tif(id === \"default\") return;\r\n\t\t\t\tif(activeExports.indexOf(id) >= 0) return;\r\n\t\t\t\tif(importedModule.isProvided(id) === false) return;\r\n\t\t\t\tvar exportUsed = dep.originModule.isUsed(id);\r\n\t\t\t\tvar idUsed = importedModule && importedModule.isUsed(id);\r\n\t\t\t\treturn [exportUsed, idUsed];\r\n\t\t\t}).filter(Boolean);\r\n\r\n\t\t\tif(items.length === 0) {\r\n\t\t\t\treturn \"/* unused harmony namespace reexport */\\n\";\r\n\t\t\t}\r\n\r\n\t\t\treturn items.map(function(item) {\r\n\t\t\t\treturn \"/* harmony namespace reexport (by used) */ \" + getReexportStatement(JSON.stringify(item[0]), JSON.stringify(item[1]));\r\n\t\t\t}).join(\"\");\r\n\t\t}\r\n\r\n\t\t// not sure which exports are used, but we know which are provided\r\n\t\tif(dep.originModule.usedExports && importedModule && Array.isArray(importedModule.providedExports)) {\r\n\t\t\tconst activeExports = HarmonyModulesHelpers.getActiveExports(dep.originModule, dep);\r\n\t\t\tconst items = importedModule.providedExports.map(function(id) {\r\n\t\t\t\tif(id === \"default\") return;\r\n\t\t\t\tif(activeExports.indexOf(id) >= 0) return;\r\n\t\t\t\tvar exportUsed = dep.originModule.isUsed(id);\r\n\t\t\t\tvar idUsed = importedModule && importedModule.isUsed(id);\r\n\t\t\t\treturn [exportUsed, idUsed];\r\n\t\t\t}).filter(Boolean);\r\n\r\n\t\t\tif(items.length === 0) {\r\n\t\t\t\treturn \"/* empty harmony namespace reexport */\\n\";\r\n\t\t\t}\r\n\r\n\t\t\treturn items.map(function(item) {\r\n\t\t\t\treturn \"/* harmony namespace reexport (by provided) */ \" + getReexportStatement(JSON.stringify(item[0]), JSON.stringify(item[1]));\r\n\t\t\t}).join(\"\");\r\n\t\t}\r\n\r\n\t\t// not sure which exports are used and provided\r\n\t\tif(dep.originModule.usedExports) {\r\n\t\t\tconst activeExports = HarmonyModulesHelpers.getActiveExports(dep.originModule, dep);\r\n\t\t\tlet content = \"/* harmony namespace reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in \" + name + \") \";\r\n\r\n\t\t\t// Filter out exports which are defined by other exports\r\n\t\t\t// and filter out default export because it cannot be reexported with *\r\n\t\t\tif(activeExports.length > 0)\r\n\t\t\t\tcontent += \"if(\" + JSON.stringify(activeExports.concat(\"default\")) + \".indexOf(__WEBPACK_IMPORT_KEY__) < 0) \";\r\n\t\t\telse\r\n\t\t\t\tcontent += \"if(__WEBPACK_IMPORT_KEY__ !== 'default') \";\r\n\t\t\tconst exportsName = dep.originModule.exportsArgument || \"exports\";\r\n\t\t\treturn content + `(function(key) { __webpack_require__.d(${exportsName}, key, function() { return ${name}[key]; }) }(__WEBPACK_IMPORT_KEY__));\\n`;\r\n\t\t}\r\n\r\n\t\treturn \"/* unused harmony reexport namespace */\\n\";\r\n\t}\r\n\r\n\treexportStatementCreator(module, importsExportsUnknown, name) {\r\n\t\tconst exportsName = module.exportsArgument || \"exports\";\r\n\t\tconst getReexportStatement = (key, valueKey) => {\r\n\t\t\tconst conditional = this.getConditional(importsExportsUnknown, valueKey, name);\r\n\t\t\tconst returnValue = this.getReturnValue(valueKey);\r\n\t\t\treturn `${conditional}__webpack_require__.d(${exportsName}, ${key}, function() { return ${name}${returnValue}; });\\n`;\r\n\t\t};\r\n\t\treturn getReexportStatement;\r\n\t}\r\n\r\n\tgetConditional(importsExportsUnknown, valueKey, name) {\r\n\t\tif(!importsExportsUnknown || !valueKey) {\r\n\t\t\treturn \"\";\r\n\t\t}\r\n\r\n\t\treturn `if(__webpack_require__.o(${name}, ${valueKey})) `;\r\n\t}\r\n\r\n\tgetReturnValue(valueKey) {\r\n\t\tif(valueKey === null) {\r\n\t\t\treturn \"_default.a\";\r\n\t\t}\r\n\r\n\t\treturn valueKey && \"[\" + valueKey + \"]\";\r\n\t}\r\n};\r\n","/home/travis/build/npmtest/node-npmtest-webpack/node_modules/webpack/lib/dependencies/HarmonyAcceptDependency.js":"/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\n\"use strict\";\r\nconst NullDependency = require(\"./NullDependency\");\r\nconst makeHarmonyImportStatement = require(\"./HarmonyImportDependency\").makeImportStatement;\r\n\r\nclass HarmonyAcceptDependency extends NullDependency {\r\n\tconstructor(range, dependencies, hasCallback) {\r\n\t\tsuper();\r\n\t\tthis.range = range;\r\n\t\tthis.dependencies = dependencies;\r\n\t\tthis.hasCallback = hasCallback;\r\n\t}\r\n\r\n\tget type() {\r\n\t\treturn \"accepted harmony modules\";\r\n\t}\r\n}\r\n\r\nHarmonyAcceptDependency.Template = class HarmonyAcceptDependencyTemplate {\r\n\tapply(dep, source, outputOptions, requestShortener) {\r\n\t\tconst content = dep.dependencies\r\n\t\t\t.map(dependency => makeHarmonyImportStatement(\r\n\t\t\t\tfalse,\r\n\t\t\t\tdependency,\r\n\t\t\t\toutputOptions,\r\n\t\t\t\trequestShortener\r\n\t\t\t)).join(\"\");\r\n\r\n\t\tif(dep.hasCallback) {\r\n\t\t\tsource.insert(dep.range[0], `function(__WEBPACK_OUTDATED_DEPENDENCIES__) { ${content}(`);\r\n\t\t\tsource.insert(dep.range[1], \")(__WEBPACK_OUTDATED_DEPENDENCIES__); }\");\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tsource.insert(dep.range[1] - 0.5, `, function() { ${content} }`);\r\n\t}\r\n};\r\n\r\nmodule.exports = HarmonyAcceptDependency;\r\n","/home/travis/build/npmtest/node-npmtest-webpack/node_modules/webpack/lib/dependencies/HarmonyAcceptImportDependency.js":"/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\n\"use strict\";\r\nconst HarmonyImportDependency = require(\"./HarmonyImportDependency\");\r\n\r\nclass HarmonyAcceptImportDependency extends HarmonyImportDependency {\r\n\tconstructor(request, importedVar, range) {\r\n\t\tsuper(request, importedVar, range);\r\n\t}\r\n\r\n\tget type() {\r\n\t\treturn \"harmony accept\";\r\n\t}\r\n}\r\n\r\nHarmonyAcceptImportDependency.Template = class HarmonyAcceptImportDependencyTemplate {\r\n\tapply(dep, source, outputOptions, requestShortener) {}\r\n};\r\n\r\nmodule.exports = HarmonyAcceptImportDependency;\r\n","/home/travis/build/npmtest/node-npmtest-webpack/node_modules/webpack/lib/dependencies/HarmonyDetectionParserPlugin.js":"/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\n\"use strict\";\r\n\r\nconst HarmonyCompatibilityDependency = require(\"./HarmonyCompatibilityDependency\");\r\n\r\nmodule.exports = class HarmonyDetectionParserPlugin {\r\n\tapply(parser) {\r\n\t\tparser.plugin(\"program\", (ast) => {\r\n\t\t\tvar isHarmony = ast.body.some(statement => {\r\n\t\t\t\treturn /^(Import|Export).*Declaration$/.test(statement.type);\r\n\t\t\t});\r\n\t\t\tif(isHarmony) {\r\n\t\t\t\tconst module = parser.state.module;\r\n\t\t\t\tconst dep = new HarmonyCompatibilityDependency(module);\r\n\t\t\t\tdep.loc = {\r\n\t\t\t\t\tstart: {\r\n\t\t\t\t\t\tline: -1,\r\n\t\t\t\t\t\tcolumn: 0\r\n\t\t\t\t\t},\r\n\t\t\t\t\tend: {\r\n\t\t\t\t\t\tline: -1,\r\n\t\t\t\t\t\tcolumn: 0\r\n\t\t\t\t\t},\r\n\t\t\t\t\tindex: -2\r\n\t\t\t\t};\r\n\t\t\t\tmodule.addDependency(dep);\r\n\t\t\t\tmodule.meta.harmonyModule = true;\r\n\t\t\t\tmodule.strict = true;\r\n\t\t\t\tmodule.exportsArgument = \"__webpack_exports__\";\r\n\t\t\t}\r\n\t\t});\r\n\t\tvar nonHarmonyIdentifiers = [\"define\", \"exports\"];\r\n\t\tnonHarmonyIdentifiers.forEach(identifer => {\r\n\t\t\tparser.plugin(`evaluate typeof ${identifer}`, nullInHarmony);\r\n\t\t\tparser.plugin(`typeof ${identifer}`, skipInHarmony);\r\n\t\t\tparser.plugin(`evaluate ${identifer}`, nullInHarmony);\r\n\t\t\tparser.plugin(`expression ${identifer}`, skipInHarmony);\r\n\t\t\tparser.plugin(`call ${identifer}`, skipInHarmony);\r\n\t\t});\r\n\r\n\t\tfunction skipInHarmony() {\r\n\t\t\tconst module = this.state.module;\r\n\t\t\tif(module && module.meta && module.meta.harmonyModule)\r\n\t\t\t\treturn true;\r\n\t\t}\r\n\r\n\t\tfunction nullInHarmony() {\r\n\t\t\tconst module = this.state.module;\r\n\t\t\tif(module && module.meta && module.meta.harmonyModule)\r\n\t\t\t\treturn null;\r\n\t\t}\r\n\t}\r\n};\r\n","/home/travis/build/npmtest/node-npmtest-webpack/node_modules/webpack/lib/dependencies/HarmonyImportDependencyParserPlugin.js":"/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\n\"use strict\";\r\n\r\nconst HarmonyImportDependency = require(\"./HarmonyImportDependency\");\r\nconst HarmonyImportSpecifierDependency = require(\"./HarmonyImportSpecifierDependency\");\r\nconst HarmonyAcceptImportDependency = require(\"./HarmonyAcceptImportDependency\");\r\nconst HarmonyAcceptDependency = require(\"./HarmonyAcceptDependency\");\r\nconst HarmonyModulesHelpers = require(\"./HarmonyModulesHelpers\");\r\n\r\nmodule.exports = class HarmonyImportDependencyParserPlugin {\r\n\tconstructor(moduleOptions) {\r\n\t\tthis.strictExportPresence = moduleOptions.strictExportPresence;\r\n\t}\r\n\r\n\tapply(parser) {\r\n\t\tparser.plugin(\"import\", (statement, source) => {\r\n\t\t\tconst dep = new HarmonyImportDependency(source, HarmonyModulesHelpers.getNewModuleVar(parser.state, source), statement.range);\r\n\t\t\tdep.loc = statement.loc;\r\n\t\t\tparser.state.current.addDependency(dep);\r\n\t\t\tparser.state.lastHarmonyImport = dep;\r\n\t\t\treturn true;\r\n\t\t});\r\n\t\tparser.plugin(\"import specifier\", (statement, source, id, name) => {\r\n\t\t\tparser.scope.definitions.length--;\r\n\t\t\tparser.scope.renames[`$${name}`] = \"imported var\";\r\n\t\t\tif(!parser.state.harmonySpecifier) parser.state.harmonySpecifier = {};\r\n\t\t\tparser.state.harmonySpecifier[`$${name}`] = [parser.state.lastHarmonyImport, HarmonyModulesHelpers.getModuleVar(parser.state, source), id];\r\n\t\t\treturn true;\r\n\t\t});\r\n\t\tparser.plugin(\"expression imported var\", (expr) => {\r\n\t\t\tconst name = expr.name;\r\n\t\t\tconst settings = parser.state.harmonySpecifier[`$${name}`];\r\n\t\t\tconst dep = new HarmonyImportSpecifierDependency(settings[0], settings[1], settings[2], name, expr.range, this.strictExportPresence);\r\n\t\t\tdep.shorthand = parser.scope.inShorthand;\r\n\t\t\tdep.directImport = true;\r\n\t\t\tdep.loc = expr.loc;\r\n\t\t\tparser.state.current.addDependency(dep);\r\n\t\t\treturn true;\r\n\t\t});\r\n\t\tparser.plugin(\"expression imported var.*\", (expr) => {\r\n\t\t\tconst name = expr.object.name;\r\n\t\t\tconst settings = parser.state.harmonySpecifier[`$${name}`];\r\n\t\t\tif(settings[2] !== null)\r\n\t\t\t\treturn false;\r\n\t\t\tconst dep = new HarmonyImportSpecifierDependency(settings[0], settings[1], expr.property.name || expr.property.value, name, expr.range, this.strictExportPresence);\r\n\t\t\tdep.shorthand = parser.scope.inShorthand;\r\n\t\t\tdep.directImport = false;\r\n\t\t\tdep.loc = expr.loc;\r\n\t\t\tparser.state.current.addDependency(dep);\r\n\t\t\treturn true;\r\n\t\t});\r\n\t\tparser.plugin(\"call imported var\", (expr) => {\r\n\t\t\tconst args = expr.arguments;\r\n\t\t\tconst fullExpr = expr;\r\n\t\t\texpr = expr.callee;\r\n\t\t\tconst name = expr.name;\r\n\t\t\tconst settings = parser.state.harmonySpecifier[`$${name}`];\r\n\t\t\tconst dep = new HarmonyImportSpecifierDependency(settings[0], settings[1], settings[2], name, expr.range, this.strictExportPresence);\r\n\t\t\tdep.directImport = true;\r\n\t\t\tdep.callArgs = args;\r\n\t\t\tdep.call = fullExpr;\r\n\t\t\tdep.loc = expr.loc;\r\n\t\t\tparser.state.current.addDependency(dep);\r\n\t\t\tif(args)\r\n\t\t\t\tparser.walkExpressions(args);\r\n\t\t\treturn true;\r\n\t\t});\r\n\t\tparser.plugin(\"hot accept callback\", (expr, requests) => {\r\n\t\t\tconst dependencies = requests\r\n\t\t\t\t.filter(request => HarmonyModulesHelpers.checkModuleVar(parser.state, request))\r\n\t\t\t\t.map(request => {\r\n\t\t\t\t\tconst dep = new HarmonyAcceptImportDependency(request, HarmonyModulesHelpers.getModuleVar(parser.state, request), expr.range);\r\n\t\t\t\t\tdep.loc = expr.loc;\r\n\t\t\t\t\tparser.state.current.addDependency(dep);\r\n\t\t\t\t\treturn dep;\r\n\t\t\t\t});\r\n\t\t\tif(dependencies.length > 0) {\r\n\t\t\t\tconst dep = new HarmonyAcceptDependency(expr.range, dependencies, true);\r\n\t\t\t\tdep.loc = expr.loc;\r\n\t\t\t\tparser.state.current.addDependency(dep);\r\n\t\t\t}\r\n\t\t});\r\n\t\tparser.plugin(\"hot accept without callback\", (expr, requests) => {\r\n\t\t\tconst dependencies = requests\r\n\t\t\t\t.filter(request => HarmonyModulesHelpers.checkModuleVar(parser.state, request))\r\n\t\t\t\t.map(request => {\r\n\t\t\t\t\tconst dep = new HarmonyAcceptImportDependency(request, HarmonyModulesHelpers.getModuleVar(parser.state, request), expr.range);\r\n\t\t\t\t\tdep.loc = expr.loc;\r\n\t\t\t\t\tparser.state.current.addDependency(dep);\r\n\t\t\t\t\treturn dep;\r\n\t\t\t\t});\r\n\t\t\tif(dependencies.length > 0) {\r\n\t\t\t\tconst dep = new HarmonyAcceptDependency(expr.range, dependencies, false);\r\n\t\t\t\tdep.loc = expr.loc;\r\n\t\t\t\tparser.state.current.addDependency(dep);\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n};\r\n","/home/travis/build/npmtest/node-npmtest-webpack/node_modules/webpack/lib/dependencies/HarmonyExportDependencyParserPlugin.js":"/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\n\"use strict\";\r\n\r\nconst HarmonyExportExpressionDependency = require(\"./HarmonyExportExpressionDependency\");\r\nconst HarmonyExportHeaderDependency = require(\"./HarmonyExportHeaderDependency\");\r\nconst HarmonyExportSpecifierDependency = require(\"./HarmonyExportSpecifierDependency\");\r\nconst HarmonyExportImportedSpecifierDependency = require(\"./HarmonyExportImportedSpecifierDependency\");\r\nconst HarmonyImportDependency = require(\"./HarmonyImportDependency\");\r\nconst HarmonyModulesHelpers = require(\"./HarmonyModulesHelpers\");\r\n\r\nmodule.exports = class HarmonyExportDependencyParserPlugin {\r\n\tapply(parser) {\r\n\t\tparser.plugin(\"export\", statement => {\r\n\t\t\tconst dep = new HarmonyExportHeaderDependency(statement.declaration && statement.declaration.range, statement.range);\r\n\t\t\tdep.loc = Object.create(statement.loc);\r\n\t\t\tdep.loc.index = -1;\r\n\t\t\tparser.state.current.addDependency(dep);\r\n\t\t\treturn true;\r\n\t\t});\r\n\t\tparser.plugin(\"export import\", (statement, source) => {\r\n\t\t\tconst dep = new HarmonyImportDependency(source, HarmonyModulesHelpers.getNewModuleVar(parser.state, source), statement.range);\r\n\t\t\tdep.loc = Object.create(statement.loc);\r\n\t\t\tdep.loc.index = -1;\r\n\t\t\tparser.state.current.addDependency(dep);\r\n\t\t\tparser.state.lastHarmonyImport = dep;\r\n\t\t\treturn true;\r\n\t\t});\r\n\t\tparser.plugin(\"export expression\", (statement, expr) => {\r\n\t\t\tconst dep = new HarmonyExportExpressionDependency(parser.state.module, expr.range, statement.range);\r\n\t\t\tdep.loc = Object.create(statement.loc);\r\n\t\t\tdep.loc.index = -1;\r\n\t\t\tparser.state.current.addDependency(dep);\r\n\t\t\treturn true;\r\n\t\t});\r\n\t\tparser.plugin(\"export declaration\", statement => {});\r\n\t\tparser.plugin(\"export specifier\", (statement, id, name, idx) => {\r\n\t\t\tconst rename = parser.scope.renames[`$${id}`];\r\n\t\t\tlet dep;\r\n\t\t\tif(rename === \"imported var\") {\r\n\t\t\t\tconst settings = parser.state.harmonySpecifier[`$${id}`];\r\n\t\t\t\tdep = new HarmonyExportImportedSpecifierDependency(parser.state.module, settings[0], settings[1], settings[2], name);\r\n\t\t\t} else {\r\n\t\t\t\tconst immutable = statement.declaration && isImmutableStatement(statement.declaration);\r\n\t\t\t\tconst hoisted = statement.declaration && isHoistedStatement(statement.declaration);\r\n\t\t\t\tdep = new HarmonyExportSpecifierDependency(parser.state.module, id, name, !immutable || hoisted ? -0.5 : (statement.range[1] + 0.5), immutable);\r\n\t\t\t}\r\n\t\t\tdep.loc = Object.create(statement.loc);\r\n\t\t\tdep.loc.index = idx;\r\n\t\t\tparser.state.current.addDependency(dep);\r\n\t\t\treturn true;\r\n\t\t});\r\n\t\tparser.plugin(\"export import specifier\", (statement, source, id, name, idx) => {\r\n\t\t\tconst dep = new HarmonyExportImportedSpecifierDependency(parser.state.module, parser.state.lastHarmonyImport, HarmonyModulesHelpers.getModuleVar(parser.state, source), id, name);\r\n\t\t\tdep.loc = Object.create(statement.loc);\r\n\t\t\tdep.loc.index = idx;\r\n\t\t\tparser.state.current.addDependency(dep);\r\n\t\t\treturn true;\r\n\t\t});\r\n\t}\r\n};\r\n\r\nfunction isImmutableStatement(statement) {\r\n\tif(statement.type === \"FunctionDeclaration\") return true;\r\n\tif(statement.type === \"ClassDeclaration\") return true;\r\n\tif(statement.type === \"VariableDeclaration\" && statement.kind === \"const\") return true;\r\n\treturn false;\r\n}\r\n\r\nfunction isHoistedStatement(statement) {\r\n\tif(statement.type === \"FunctionDeclaration\") return true;\r\n\treturn false;\r\n}\r\n","/home/travis/build/npmtest/node-npmtest-webpack/node_modules/webpack/lib/dependencies/SystemPlugin.js":"/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\n\"use strict\";\r\nconst ParserHelpers = require(\"../ParserHelpers\");\r\n\r\nclass SystemPlugin {\r\n\tconstructor(options) {\r\n\t\tthis.options = options;\r\n\t}\r\n\r\n\tapply(compiler) {\r\n\t\tcompiler.plugin(\"compilation\", (compilation, params) => {\r\n\t\t\tparams.normalModuleFactory.plugin(\"parser\", (parser, parserOptions) => {\r\n\r\n\t\t\t\tif(typeof parserOptions.system !== \"undefined\" && !parserOptions.system)\r\n\t\t\t\t\treturn;\r\n\r\n\t\t\t\tfunction setNotSupported(name) {\r\n\t\t\t\t\tparser.plugin(\"evaluate typeof \" + name, ParserHelpers.evaluateToString(\"undefined\"));\r\n\t\t\t\t\tparser.plugin(\"expression \" + name,\r\n\t\t\t\t\t\tParserHelpers.expressionIsUnsupported(name + \" is not supported by webpack.\")\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tparser.plugin(\"typeof System.import\", ParserHelpers.toConstantDependency(JSON.stringify(\"function\")));\r\n\t\t\t\tparser.plugin(\"evaluate typeof System.import\", ParserHelpers.evaluateToString(\"function\"));\r\n\t\t\t\tparser.plugin(\"typeof System\", ParserHelpers.toConstantDependency(JSON.stringify(\"object\")));\r\n\t\t\t\tparser.plugin(\"evaluate typeof System\", ParserHelpers.evaluateToString(\"object\"));\r\n\r\n\t\t\t\tsetNotSupported(\"System.set\");\r\n\t\t\t\tsetNotSupported(\"System.get\");\r\n\t\t\t\tsetNotSupported(\"System.register\");\r\n\t\t\t\tparser.plugin(\"expression System\", function() {\r\n\t\t\t\t\tconst systemPolyfillRequire = ParserHelpers.requireFileAsExpression(\r\n\t\t\t\t\t\tthis.state.module.context, require.resolve(\"../../buildin/system.js\"));\r\n\t\t\t\t\treturn ParserHelpers.addParsedVariableToModule(this, \"System\", systemPolyfillRequire);\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n}\r\nmodule.exports = SystemPlugin;\r\n","/home/travis/build/npmtest/node-npmtest-webpack/node_modules/webpack/lib/dependencies/ImportPlugin.js":"/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\n\"use strict\";\r\n\r\nconst ImportDependency = require(\"./ImportDependency\");\r\nconst ImportContextDependency = require(\"./ImportContextDependency\");\r\nconst ImportParserPlugin = require(\"./ImportParserPlugin\");\r\n\r\nclass ImportPlugin {\r\n\tconstructor(options) {\r\n\t\tthis.options = options;\r\n\t}\r\n\r\n\tapply(compiler) {\r\n\t\tconst options = this.options;\r\n\t\tcompiler.plugin(\"compilation\", (compilation, params) => {\r\n\t\t\tconst normalModuleFactory = params.normalModuleFactory;\r\n\t\t\tconst contextModuleFactory = params.contextModuleFactory;\r\n\r\n\t\t\tcompilation.dependencyFactories.set(ImportDependency, normalModuleFactory);\r\n\t\t\tcompilation.dependencyTemplates.set(ImportDependency, new ImportDependency.Template());\r\n\r\n\t\t\tcompilation.dependencyFactories.set(ImportContextDependency, contextModuleFactory);\r\n\t\t\tcompilation.dependencyTemplates.set(ImportContextDependency, new ImportContextDependency.Template());\r\n\r\n\t\t\tparams.normalModuleFactory.plugin(\"parser\", (parser, parserOptions) => {\r\n\r\n\t\t\t\tif(typeof parserOptions.import !== \"undefined\" && !parserOptions.import)\r\n\t\t\t\t\treturn;\r\n\r\n\t\t\t\tparser.apply(\r\n\t\t\t\t\tnew ImportParserPlugin(options)\r\n\t\t\t\t);\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n}\r\nmodule.exports = ImportPlugin;\r\n","/home/travis/build/npmtest/node-npmtest-webpack/node_modules/webpack/lib/dependencies/ImportDependency.js":"/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\n\"use strict\";\r\nconst ModuleDependency = require(\"./ModuleDependency\");\r\nconst DepBlockHelpers = require(\"./DepBlockHelpers\");\r\nconst webpackMissingPromiseModule = require(\"./WebpackMissingModule\").promise;\r\n\r\nclass ImportDependency extends ModuleDependency {\r\n\tconstructor(request, block) {\r\n\t\tsuper(request);\r\n\t\tthis.block = block;\r\n\t}\r\n\r\n\tget type() {\r\n\t\treturn \"import()\";\r\n\t}\r\n}\r\n\r\nImportDependency.Template = class ImportDependencyTemplate {\r\n\tapply(dep, source, outputOptions, requestShortener) {\r\n\t\tconst depBlock = dep.block;\r\n\t\tconst promise = DepBlockHelpers.getDepBlockPromise(depBlock, outputOptions, requestShortener, \"import()\");\r\n\t\tconst comment = this.getOptionalComment(outputOptions.pathinfo, requestShortener.shorten(dep.request));\r\n\r\n\t\tconst content = this.getContent(promise, dep, comment);\r\n\t\tsource.replace(depBlock.range[0], depBlock.range[1] - 1, content);\r\n\t}\r\n\r\n\tgetOptionalComment(pathinfo, shortenedRequest) {\r\n\t\tif(!pathinfo) {\r\n\t\t\treturn \"\";\r\n\t\t}\r\n\r\n\t\treturn `/*! ${shortenedRequest} */ `;\r\n\t}\r\n\r\n\tgetContent(promise, dep, comment) {\r\n\t\tif(promise && dep.module) {\r\n\t\t\tconst stringifiedId = JSON.stringify(dep.module.id);\r\n\t\t\treturn `${promise}.then(__webpack_require__.bind(null, ${comment}${stringifiedId}))`;\r\n\t\t}\r\n\r\n\t\tif(dep.module) {\r\n\t\t\tconst stringifiedId = JSON.stringify(dep.module.id);\r\n\t\t\treturn `Promise.resolve(__webpack_require__(${comment}${stringifiedId}))`;\r\n\t\t}\r\n\r\n\t\treturn webpackMissingPromiseModule(dep.request);\r\n\t}\r\n};\r\n\r\nmodule.exports = ImportDependency;\r\n","/home/travis/build/npmtest/node-npmtest-webpack/node_modules/webpack/lib/dependencies/DepBlockHelpers.js":"/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\nvar DepBlockHelpers = exports;\r\n\r\nDepBlockHelpers.getLoadDepBlockWrapper = function(depBlock, outputOptions, requestShortener, name) {\r\n\tvar promiseCode = DepBlockHelpers.getDepBlockPromise(depBlock, outputOptions, requestShortener, name);\r\n\treturn [\r\n\t\tpromiseCode + \".then(\",\r\n\t\t\").catch(\",\r\n\t\t\")\"\r\n\t];\r\n};\r\n\r\nDepBlockHelpers.getDepBlockPromise = function(depBlock, outputOptions, requestShortener, name) {\r\n\tif(depBlock.chunks) {\r\n\t\tvar chunks = depBlock.chunks.filter(function(chunk) {\r\n\t\t\treturn !chunk.hasRuntime() && chunk.id !== null;\r\n\t\t});\r\n\t\tif(chunks.length === 1) {\r\n\t\t\tvar chunk = chunks[0];\r\n\t\t\treturn \"__webpack_require__.e\" + asComment(name) + \"(\" + JSON.stringify(chunk.id) + \"\" +\r\n\t\t\t\t(outputOptions.pathinfo && depBlock.chunkName ? \"/*! \" + requestShortener.shorten(depBlock.chunkName) + \" */\" : \"\") +\r\n\t\t\t\tasComment(depBlock.chunkReason) + \")\";\r\n\t\t} else if(chunks.length > 0) {\r\n\t\t\treturn \"Promise.all\" + asComment(name) + \"(\" +\r\n\t\t\t\t(outputOptions.pathinfo && depBlock.chunkName ? \"/*! \" + requestShortener.shorten(depBlock.chunkName) + \" */\" : \"\") +\r\n\t\t\t\t\"[\" +\r\n\t\t\t\tchunks.map(function(chunk) {\r\n\t\t\t\t\treturn \"__webpack_require__.e(\" + JSON.stringify(chunk.id) + \")\";\r\n\t\t\t\t}).join(\", \") +\r\n\t\t\t\t\"])\";\r\n\t\t}\r\n\t}\r\n\treturn \"Promise.resolve()\";\r\n};\r\n\r\nfunction asComment(str) {\r\n\tif(!str) return \"\";\r\n\treturn \"/* \" + str + \" */\";\r\n}\r\n","/home/travis/build/npmtest/node-npmtest-webpack/node_modules/webpack/lib/dependencies/WebpackMissingModule.js":"/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\n\"use strict\";\r\nconst toErrorCode = err => `var e = new Error(${JSON.stringify(err)}); e.code = 'MODULE_NOT_FOUND';`;\r\n\r\nexports.module = request => `!(function webpackMissingModule() { ${exports.moduleCode(request)} }())`;\r\n\r\nexports.promise = (request) => {\r\n\tconst errorCode = toErrorCode(`Cannot find module \"${request}\"`);\r\n\treturn `Promise.reject(function webpackMissingModule() { ${errorCode}; return e; }())`;\r\n};\r\n\r\nexports.moduleCode = (request) => {\r\n\tconst errorCode = toErrorCode(`Cannot find module \"${request}\"`);\r\n\treturn `${errorCode} throw e;`;\r\n};\r\n","/home/travis/build/npmtest/node-npmtest-webpack/node_modules/webpack/lib/dependencies/ImportContextDependency.js":"/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\n\"use strict\";\r\nconst ContextDependency = require(\"./ContextDependency\");\r\nconst CriticalDependencyWarning = require(\"./CriticalDependencyWarning\");\r\nconst ContextDependencyTemplateAsRequireCall = require(\"./ContextDependencyTemplateAsRequireCall\");\r\n\r\nclass ImportContextDependency extends ContextDependency {\r\n\tconstructor(request, recursive, regExp, range, valueRange, chunkName) {\r\n\t\tsuper(request, recursive, regExp);\r\n\t\tthis.range = range;\r\n\t\tthis.valueRange = valueRange;\r\n\t\tthis.async = true;\r\n\t\tthis.chunkName = chunkName;\r\n\t}\r\n\r\n\tget type() {\r\n\t\treturn \"import() context\";\r\n\t}\r\n\r\n\tgetWarnings() {\r\n\t\tif(!this.critical) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\treturn [\r\n\t\t\tnew CriticalDependencyWarning(this.critical)\r\n\t\t];\r\n\t}\r\n}\r\n\r\nImportContextDependency.Template = ContextDependencyTemplateAsRequireCall;\r\n\r\nmodule.exports = ImportContextDependency;\r\n","/home/travis/build/npmtest/node-npmtest-webpack/node_modules/webpack/lib/dependencies/ImportParserPlugin.js":"/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\n\"use strict\";\r\n\r\nconst ImportContextDependency = require(\"./ImportContextDependency\");\r\nconst ImportDependenciesBlock = require(\"./ImportDependenciesBlock\");\r\nconst ContextDependencyHelpers = require(\"./ContextDependencyHelpers\");\r\n\r\nclass ImportParserPlugin {\r\n\tconstructor(options) {\r\n\t\tthis.options = options;\r\n\t}\r\n\r\n\tapply(parser) {\r\n\t\tconst options = this.options;\r\n\r\n\t\tparser.plugin([\"call System.import\", \"import-call\"], (expr) => {\r\n\t\t\tif(expr.arguments.length !== 1)\r\n\t\t\t\tthrow new Error(\"Incorrect number of arguments provided to 'import(module: string) -> Promise'.\");\r\n\r\n\t\t\tconst param = parser.evaluateExpression(expr.arguments[0]);\r\n\r\n\t\t\tlet chunkName = null;\r\n\r\n\t\t\tconst importOptions = parser.getCommentOptions(expr.range);\r\n\t\t\tif(importOptions) {\r\n\t\t\t\tif(typeof importOptions.webpackChunkName !== \"undefined\") {\r\n\t\t\t\t\tif(typeof importOptions.webpackChunkName !== \"string\")\r\n\t\t\t\t\t\tthrow new Error(`\\`webpackChunkName\\` expected a string, but received: ${importOptions.webpackChunkName}.`);\r\n\t\t\t\t\tchunkName = importOptions.webpackChunkName;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif(param.isString()) {\r\n\t\t\t\tconst depBlock = new ImportDependenciesBlock(param.string, expr.range, chunkName, parser.state.module, expr.loc);\r\n\t\t\t\tparser.state.current.addBlock(depBlock);\r\n\t\t\t\treturn true;\r\n\t\t\t} else {\r\n\t\t\t\tconst dep = ContextDependencyHelpers.create(ImportContextDependency, expr.range, param, expr, options, chunkName);\r\n\t\t\t\tif(!dep) return;\r\n\t\t\t\tdep.loc = expr.loc;\r\n\t\t\t\tdep.optional = !!parser.scope.inTry;\r\n\t\t\t\tparser.state.current.addDependency(dep);\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n}\r\nmodule.exports = ImportParserPlugin;\r\n","/home/travis/build/npmtest/node-npmtest-webpack/node_modules/webpack/lib/dependencies/ImportDependenciesBlock.js":"/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\n\"use strict\";\r\nconst AsyncDependenciesBlock = require(\"../AsyncDependenciesBlock\");\r\nconst ImportDependency = require(\"./ImportDependency\");\r\n\r\nmodule.exports = class ImportDependenciesBlock extends AsyncDependenciesBlock {\r\n\tconstructor(request, range, chunkName, module, loc) {\r\n\t\tsuper(chunkName, module, loc);\r\n\t\tthis.range = range;\r\n\t\tconst dep = new ImportDependency(request, this);\r\n\t\tdep.loc = loc;\r\n\t\tthis.addDependency(dep);\r\n\t}\r\n};\r\n","/home/travis/build/npmtest/node-npmtest-webpack/node_modules/webpack/lib/dependencies/AMDPlugin.js":"/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\n\"use strict\";\r\n\r\nconst path = require(\"path\");\r\nconst AMDRequireDependency = require(\"./AMDRequireDependency\");\r\nconst AMDRequireItemDependency = require(\"./AMDRequireItemDependency\");\r\nconst AMDRequireArrayDependency = require(\"./AMDRequireArrayDependency\");\r\nconst AMDRequireContextDependency = require(\"./AMDRequireContextDependency\");\r\nconst AMDDefineDependency = require(\"./AMDDefineDependency\");\r\nconst UnsupportedDependency = require(\"./UnsupportedDependency\");\r\nconst LocalModuleDependency = require(\"./LocalModuleDependency\");\r\n\r\nconst NullFactory = require(\"../NullFactory\");\r\n\r\nconst AMDRequireDependenciesBlockParserPlugin = require(\"./AMDRequireDependenciesBlockParserPlugin\");\r\nconst AMDDefineDependencyParserPlugin = require(\"./AMDDefineDependencyParserPlugin\");\r\n\r\nconst AliasPlugin = require(\"enhanced-resolve/lib/AliasPlugin\");\r\n\r\nconst ParserHelpers = require(\"../ParserHelpers\");\r\n\r\nclass AMDPlugin {\r\n\tconstructor(options, amdOptions) {\r\n\t\tthis.amdOptions = amdOptions;\r\n\t\tthis.options = options;\r\n\t}\r\n\r\n\tapply(compiler) {\r\n\t\tconst options = this.options;\r\n\t\tconst amdOptions = this.amdOptions;\r\n\t\tcompiler.plugin(\"compilation\", (compilation, params) => {\r\n\t\t\tconst normalModuleFactory = params.normalModuleFactory;\r\n\t\t\tconst contextModuleFactory = params.contextModuleFactory;\r\n\r\n\t\t\tcompilation.dependencyFactories.set(AMDRequireDependency, new NullFactory());\r\n\t\t\tcompilation.dependencyTemplates.set(AMDRequireDependency, new AMDRequireDependency.Template());\r\n\r\n\t\t\tcompilation.dependencyFactories.set(AMDRequireItemDependency, normalModuleFactory);\r\n\t\t\tcompilation.dependencyTemplates.set(AMDRequireItemDependency, new AMDRequireItemDependency.Template());\r\n\r\n\t\t\tcompilation.dependencyFactories.set(AMDRequireArrayDependency, new NullFactory());\r\n\t\t\tcompilation.dependencyTemplates.set(AMDRequireArrayDependency, new AMDRequireArrayDependency.Template());\r\n\r\n\t\t\tcompilation.dependencyFactories.set(AMDRequireContextDependency, contextModuleFactory);\r\n\t\t\tcompilation.dependencyTemplates.set(AMDRequireContextDependency, new AMDRequireContextDependency.Template());\r\n\r\n\t\t\tcompilation.dependencyFactories.set(AMDDefineDependency, new NullFactory());\r\n\t\t\tcompilation.dependencyTemplates.set(AMDDefineDependency, new AMDDefineDependency.Template());\r\n\r\n\t\t\tcompilation.dependencyFactories.set(UnsupportedDependency, new NullFactory());\r\n\t\t\tcompilation.dependencyTemplates.set(UnsupportedDependency, new UnsupportedDependency.Template());\r\n\r\n\t\t\tcompilation.dependencyFactories.set(LocalModuleDependency, new NullFactory());\r\n\t\t\tcompilation.dependencyTemplates.set(LocalModuleDependency, new LocalModuleDependency.Template());\r\n\r\n\t\t\tparams.normalModuleFactory.plugin(\"parser\", (parser, parserOptions) => {\r\n\r\n\t\t\t\tif(typeof parserOptions.amd !== \"undefined\" && !parserOptions.amd)\r\n\t\t\t\t\treturn;\r\n\r\n\t\t\t\tfunction setExpressionToModule(outerExpr, module) {\r\n\t\t\t\t\tparser.plugin(\"expression \" + outerExpr, (expr) => {\r\n\t\t\t\t\t\tconst dep = new AMDRequireItemDependency(module, expr.range);\r\n\t\t\t\t\t\tdep.userRequest = outerExpr;\r\n\t\t\t\t\t\tdep.loc = expr.loc;\r\n\t\t\t\t\t\tparser.state.current.addDependency(dep);\r\n\t\t\t\t\t\treturn true;\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\r\n\t\t\t\tparser.apply(\r\n\t\t\t\t\tnew AMDRequireDependenciesBlockParserPlugin(options),\r\n\t\t\t\t\tnew AMDDefineDependencyParserPlugin(options)\r\n\t\t\t\t);\r\n\t\t\t\tsetExpressionToModule(\"require.amd\", \"!!webpack amd options\");\r\n\t\t\t\tsetExpressionToModule(\"define.amd\", \"!!webpack amd options\");\r\n\t\t\t\tsetExpressionToModule(\"define\", \"!!webpack amd define\");\r\n\t\t\t\tparser.plugin(\"expression __webpack_amd_options__\", () =>\r\n\t\t\t\t\tparser.state.current.addVariable(\"__webpack_amd_options__\", JSON.stringify(amdOptions)));\r\n\t\t\t\tparser.plugin(\"evaluate typeof define.amd\", ParserHelpers.evaluateToString(typeof amdOptions));\r\n\t\t\t\tparser.plugin(\"evaluate typeof require.amd\", ParserHelpers.evaluateToString(typeof amdOptions));\r\n\t\t\t\tparser.plugin(\"evaluate Identifier define.amd\", ParserHelpers.evaluateToBoolean(true));\r\n\t\t\t\tparser.plugin(\"evaluate Identifier require.amd\", ParserHelpers.evaluateToBoolean(true));\r\n\t\t\t\tparser.plugin(\"typeof define\", ParserHelpers.toConstantDependency(JSON.stringify(\"function\")));\r\n\t\t\t\tparser.plugin(\"evaluate typeof define\", ParserHelpers.evaluateToString(\"function\"));\r\n\t\t\t\tparser.plugin(\"can-rename define\", ParserHelpers.approve);\r\n\t\t\t\tparser.plugin(\"rename define\", (expr) => {\r\n\t\t\t\t\tconst dep = new AMDRequireItemDependency(\"!!webpack amd define\", expr.range);\r\n\t\t\t\t\tdep.userRequest = \"define\";\r\n\t\t\t\t\tdep.loc = expr.loc;\r\n\t\t\t\t\tparser.state.current.addDependency(dep);\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t});\r\n\t\t\t\tparser.plugin(\"typeof require\", ParserHelpers.toConstantDependency(JSON.stringify(\"function\")));\r\n\t\t\t\tparser.plugin(\"evaluate typeof require\", ParserHelpers.evaluateToString(\"function\"));\r\n\t\t\t});\r\n\t\t});\r\n\t\tcompiler.plugin(\"after-resolvers\", () => {\r\n\t\t\tcompiler.resolvers.normal.apply(\r\n\t\t\t\tnew AliasPlugin(\"described-resolve\", {\r\n\t\t\t\t\tname: \"amdefine\",\r\n\t\t\t\t\talias: path.join(__dirname, \"..\", \"..\", \"buildin\", \"amd-define.js\")\r\n\t\t\t\t}, \"resolve\"),\r\n\t\t\t\tnew AliasPlugin(\"described-resolve\", {\r\n\t\t\t\t\tname: \"webpack amd options\",\r\n\t\t\t\t\talias: path.join(__dirname, \"..\", \"..\", \"buildin\", \"amd-options.js\")\r\n\t\t\t\t}, \"resolve\"),\r\n\t\t\t\tnew AliasPlugin(\"described-resolve\", {\r\n\t\t\t\t\tname: \"webpack amd define\",\r\n\t\t\t\t\talias: path.join(__dirname, \"..\", \"..\", \"buildin\", \"amd-define.js\")\r\n\t\t\t\t}, \"resolve\")\r\n\t\t\t);\r\n\t\t});\r\n\t}\r\n}\r\nmodule.exports = AMDPlugin;\r\n","/home/travis/build/npmtest/node-npmtest-webpack/node_modules/webpack/lib/dependencies/AMDRequireDependency.js":"/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\n\"use strict\";\r\nconst NullDependency = require(\"./NullDependency\");\r\nconst DepBlockHelpers = require(\"./DepBlockHelpers\");\r\n\r\nclass AMDRequireDependency extends NullDependency {\r\n\tconstructor(block) {\r\n\t\tsuper();\r\n\t\tthis.block = block;\r\n\t}\r\n}\r\n\r\nAMDRequireDependency.Template = class AMDRequireDependencyTemplate {\r\n\tapply(dep, source, outputOptions, requestShortener) {\r\n\t\tconst depBlock = dep.block;\r\n\t\tconst wrapper = DepBlockHelpers.getLoadDepBlockWrapper(depBlock, outputOptions, requestShortener, \"require\");\r\n\r\n\t\t// has array range but no function range\r\n\t\tif(depBlock.arrayRange && !depBlock.functionRange) {\r\n\t\t\tconst startBlock = wrapper[0] + \"function() {\";\r\n\t\t\tconst endBlock = `;}${wrapper[1]}__webpack_require__.oe${wrapper[2]}`;\r\n\t\t\tsource.replace(depBlock.outerRange[0], depBlock.arrayRange[0] - 1, startBlock);\r\n\t\t\tsource.replace(depBlock.arrayRange[1], depBlock.outerRange[1] - 1, endBlock);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// has function range but no array range\r\n\t\tif(depBlock.functionRange && !depBlock.arrayRange) {\r\n\t\t\tconst startBlock = wrapper[0] + \"function() {(\";\r\n\t\t\tconst endBlock = `.call(exports, __webpack_require__, exports, module));}${wrapper[1]}__webpack_require__.oe${wrapper[2]}`;\r\n\t\t\tsource.replace(depBlock.outerRange[0], depBlock.functionRange[0] - 1, startBlock);\r\n\t\t\tsource.replace(depBlock.functionRange[1], depBlock.outerRange[1] - 1, endBlock);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// has array range, function range, and errorCallbackRange\r\n\t\tif(depBlock.arrayRange && depBlock.functionRange && depBlock.errorCallbackRange) {\r\n\t\t\tconst startBlock = wrapper[0] + \"function() { \";\r\n\t\t\tconst errorRangeBlock = `}${depBlock.functionBindThis ? \".bind(this)\" : \"\"}${wrapper[1]}`;\r\n\t\t\tconst endBlock = `${depBlock.errorCallbackBindThis ? \".bind(this)\" : \"\"}${wrapper[2]}`;\r\n\r\n\t\t\tsource.replace(depBlock.outerRange[0], depBlock.arrayRange[0] - 1, startBlock);\r\n\t\t\tsource.insert(depBlock.arrayRange[0] + 0.9, \"var __WEBPACK_AMD_REQUIRE_ARRAY__ = \");\r\n\t\t\tsource.replace(depBlock.arrayRange[1], depBlock.functionRange[0] - 1, \"; (\");\r\n\t\t\tsource.insert(depBlock.functionRange[1], \".apply(null, __WEBPACK_AMD_REQUIRE_ARRAY__));\");\r\n\t\t\tsource.replace(depBlock.functionRange[1], depBlock.errorCallbackRange[0] - 1, errorRangeBlock);\r\n\t\t\tsource.replace(depBlock.errorCallbackRange[1], depBlock.outerRange[1] - 1, endBlock);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// has array range, function range, but no errorCallbackRange\r\n\t\tif(depBlock.arrayRange && depBlock.functionRange) {\r\n\t\t\tconst startBlock = wrapper[0] + \"function() { \";\r\n\t\t\tconst endBlock = `}${depBlock.functionBindThis ? \".bind(this)\" : \"\"}${wrapper[1]}__webpack_require__.oe${wrapper[2]}`;\r\n\t\t\tsource.replace(depBlock.outerRange[0], depBlock.arrayRange[0] - 1, startBlock);\r\n\t\t\tsource.insert(depBlock.arrayRange[0] + 0.9, \"var __WEBPACK_AMD_REQUIRE_ARRAY__ = \");\r\n\t\t\tsource.replace(depBlock.arrayRange[1], depBlock.functionRange[0] - 1, \"; (\");\r\n\t\t\tsource.insert(depBlock.functionRange[1], \".apply(null, __WEBPACK_AMD_REQUIRE_ARRAY__));\");\r\n\t\t\tsource.replace(depBlock.functionRange[1], depBlock.outerRange[1] - 1, endBlock);\r\n\t\t}\r\n\t}\r\n};\r\n\r\nmodule.exports = AMDRequireDependency;\r\n","/home/travis/build/npmtest/node-npmtest-webpack/node_modules/webpack/lib/dependencies/AMDRequireItemDependency.js":"/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\n\"use strict\";\r\nconst ModuleDependency = require(\"./ModuleDependency\");\r\nconst ModuleDependencyTemplateAsRequireId = require(\"./ModuleDependencyTemplateAsRequireId\");\r\n\r\nclass AMDRequireItemDependency extends ModuleDependency {\r\n\tconstructor(request, range) {\r\n\t\tsuper(request);\r\n\t\tthis.range = range;\r\n\t}\r\n\r\n\tget type() {\r\n\t\treturn \"amd require\";\r\n\t}\r\n}\r\n\r\nAMDRequireItemDependency.Template = ModuleDependencyTemplateAsRequireId;\r\n\r\nmodule.exports = AMDRequireItemDependency;\r\n","/home/travis/build/npmtest/node-npmtest-webpack/node_modules/webpack/lib/dependencies/ModuleDependencyTemplateAsRequireId.js":"/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\n\"use strict\";\r\n\r\nclass ModuleDependencyTemplateAsRequireId {\r\n\r\n\tapply(dep, source, outputOptions, requestShortener) {\r\n\t\tif(!dep.range) return;\r\n\t\tconst comment = outputOptions.pathinfo ?\r\n\t\t\t`/*! ${requestShortener.shorten(dep.request)} */ ` : \"\";\r\n\t\tlet content;\r\n\t\tif(dep.module)\r\n\t\t\tcontent = `__webpack_require__(${comment}${JSON.stringify(dep.module.id)})`;\r\n\t\telse\r\n\t\t\tcontent = require(\"./WebpackMissingModule\").module(dep.request);\r\n\t\tsource.replace(dep.range[0], dep.range[1] - 1, content);\r\n\t}\r\n}\r\nmodule.exports = ModuleDependencyTemplateAsRequireId;\r\n","/home/travis/build/npmtest/node-npmtest-webpack/node_modules/webpack/lib/dependencies/AMDRequireArrayDependency.js":"/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\n\"use strict\";\r\nconst Dependency = require(\"../Dependency\");\r\nconst webpackMissingModuleModule = require(\"./WebpackMissingModule\").module;\r\n\r\nclass AMDRequireArrayDependency extends Dependency {\r\n\tconstructor(depsArray, range) {\r\n\t\tsuper();\r\n\t\tthis.depsArray = depsArray;\r\n\t\tthis.range = range;\r\n\t}\r\n\r\n\tget type() {\r\n\t\treturn \"amd require array\";\r\n\t}\r\n}\r\n\r\nAMDRequireArrayDependency.Template = class AMDRequireArrayDependencyTemplate {\r\n\tapply(dep, source, outputOptions, requestShortener) {\r\n\t\tconst content = this.getContent(dep, outputOptions, requestShortener);\r\n\t\tsource.replace(dep.range[0], dep.range[1] - 1, content);\r\n\t}\r\n\r\n\tgetContent(dep, outputOptions, requestShortener) {\r\n\t\tconst requires = dep.depsArray.map((dependency) => {\r\n\t\t\tconst optionalComment = this.optionalComment(outputOptions.pathinfo, requestShortener.shorten(dependency.request));\r\n\t\t\treturn this.contentForDependency(dependency, optionalComment);\r\n\t\t});\r\n\t\treturn `[${requires.join(\", \")}]`;\r\n\t}\r\n\r\n\toptionalComment(pathInfo, shortenedRequest) {\r\n\t\tif(!pathInfo) {\r\n\t\t\treturn \"\";\r\n\t\t}\r\n\t\treturn `/*! ${shortenedRequest} */ `;\r\n\t}\r\n\r\n\tcontentForDependency(dep, comment) {\r\n\t\tif(typeof dep === \"string\") {\r\n\t\t\treturn dep;\r\n\t\t}\r\n\r\n\t\tif(dep.module) {\r\n\t\t\tconst stringifiedId = JSON.stringify(dep.module.id);\r\n\t\t\treturn `__webpack_require__(${comment}${stringifiedId})`;\r\n\t\t}\r\n\r\n\t\treturn webpackMissingModuleModule(dep.request);\r\n\t}\r\n};\r\n\r\nmodule.exports = AMDRequireArrayDependency;\r\n","/home/travis/build/npmtest/node-npmtest-webpack/node_modules/webpack/lib/dependencies/AMDRequireContextDependency.js":"/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\n\"use strict\";\r\n\r\nconst ContextDependency = require(\"./ContextDependency\");\r\nconst CriticalDependencyWarning = require(\"./CriticalDependencyWarning\");\r\nclass AMDRequireContextDependency extends ContextDependency {\r\n\tconstructor(request, recursive, regExp, range, valueRange) {\r\n\t\tsuper(request, recursive, regExp);\r\n\t\tthis.range = range;\r\n\t\tthis.valueRange = valueRange;\r\n\t}\r\n\r\n\tget type() {\r\n\t\treturn \"amd require context\";\r\n\t}\r\n\r\n\tgetWarnings() {\r\n\t\tif(this.critical) {\r\n\t\t\treturn [\r\n\t\t\t\tnew CriticalDependencyWarning(this.critical)\r\n\t\t\t];\r\n\t\t}\r\n\t}\r\n}\r\nAMDRequireContextDependency.Template = require(\"./ContextDependencyTemplateAsRequireCall\");\r\nmodule.exports = AMDRequireContextDependency;\r\n","/home/travis/build/npmtest/node-npmtest-webpack/node_modules/webpack/lib/dependencies/AMDDefineDependency.js":"/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\n\"use strict\";\r\nconst NullDependency = require(\"./NullDependency\");\r\n\r\nclass AMDDefineDependency extends NullDependency {\r\n\tconstructor(range, arrayRange, functionRange, objectRange, namedModule) {\r\n\t\tsuper();\r\n\t\tthis.range = range;\r\n\t\tthis.arrayRange = arrayRange;\r\n\t\tthis.functionRange = functionRange;\r\n\t\tthis.objectRange = objectRange;\r\n\t\tthis.namedModule = namedModule;\r\n\t}\r\n\r\n\tget type() {\r\n\t\treturn \"amd define\";\r\n\t}\r\n}\r\n\r\nAMDDefineDependency.Template = class AMDDefineDependencyTemplate {\r\n\tget definitions() {\r\n\t\treturn {\r\n\t\t\tf: [\r\n\t\t\t\t\"var __WEBPACK_AMD_DEFINE_RESULT__;\",\r\n\t\t\t\t`!(__WEBPACK_AMD_DEFINE_RESULT__ = #.call(exports, __webpack_require__, exports, module),\r\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__))`\r\n\t\t\t],\r\n\t\t\to: [\r\n\t\t\t\t\"\",\r\n\t\t\t\t\"!(module.exports = #)\"\r\n\t\t\t],\r\n\t\t\tof: [\r\n\t\t\t\t\"var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_RESULT__;\",\r\n\t\t\t\t`!(__WEBPACK_AMD_DEFINE_FACTORY__ = (#),\r\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?\r\n\t\t\t\t(__WEBPACK_AMD_DEFINE_FACTORY__.call(exports, __webpack_require__, exports, module)) :\r\n\t\t\t\t__WEBPACK_AMD_DEFINE_FACTORY__),\r\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__))`\r\n\t\t\t],\r\n\t\t\taf: [\r\n\t\t\t\t\"var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;\",\r\n\t\t\t\t`!(__WEBPACK_AMD_DEFINE_ARRAY__ = #, __WEBPACK_AMD_DEFINE_RESULT__ = #.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\r\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__))`\r\n\t\t\t],\r\n\t\t\tao: [\r\n\t\t\t\t\"\",\r\n\t\t\t\t\"!(#, module.exports = #)\"\r\n\t\t\t],\r\n\t\t\taof: [\r\n\t\t\t\t\"var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;\",\r\n\t\t\t\t`!(__WEBPACK_AMD_DEFINE_ARRAY__ = #, __WEBPACK_AMD_DEFINE_FACTORY__ = (#),\r\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?\r\n\t\t\t\t(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),\r\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__))`\r\n\t\t\t],\r\n\t\t\tlf: [\r\n\t\t\t\t\"var XXX, XXXmodule;\",\r\n\t\t\t\t\"!(XXXmodule = { id: YYY, exports: {}, loaded: false }, XXX = #.call(XXXmodule.exports, __webpack_require__, XXXmodule.exports, XXXmodule), XXXmodule.loaded = true, XXX === undefined && (XXX = XXXmodule.exports))\"\r\n\t\t\t],\r\n\t\t\tlo: [\r\n\t\t\t\t\"var XXX;\",\r\n\t\t\t\t\"!(XXX = #)\"\r\n\t\t\t],\r\n\t\t\tlof: [\r\n\t\t\t\t\"var XXX, XXXfactory, XXXmodule;\",\r\n\t\t\t\t\"!(XXXfactory = (#), (XXXmodule = { id: YYY, exports: {}, loaded: false }), XXX = (typeof XXXfactory === 'function' ? (XXXfactory.call(XXXmodule.exports, __webpack_require__, XXXmodule.exports, XXXmodule)) : XXXfactory), (XXXmodule.loaded = true), XXX === undefined && (XXX = XXXmodule.exports))\"\r\n\t\t\t],\r\n\t\t\tlaf: [\r\n\t\t\t\t\"var __WEBPACK_AMD_DEFINE_ARRAY__, XXX;\",\r\n\t\t\t\t\"!(__WEBPACK_AMD_DEFINE_ARRAY__ = #, XXX = (#.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)))\"\r\n\t\t\t],\r\n\t\t\tlao: [\r\n\t\t\t\t\"var XXX;\",\r\n\t\t\t\t\"!(#, XXX = #)\"\r\n\t\t\t],\r\n\t\t\tlaof: [\r\n\t\t\t\t\"var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_FACTORY__, XXX;\",\r\n\t\t\t\t`!(__WEBPACK_AMD_DEFINE_ARRAY__ = #, __WEBPACK_AMD_DEFINE_FACTORY__ = (#),\r\n\t\t\t\tXXX = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?\r\n\t\t\t\t(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__))`\r\n\t\t\t]\r\n\t\t};\r\n\t}\r\n\r\n\tapply(dependency, source) {\r\n\t\tconst branch = this.branch(dependency);\r\n\t\tconst defAndText = this.definitions[branch];\r\n\t\tconst definitions = defAndText[0];\r\n\t\tconst text = defAndText[1];\r\n\t\tthis.replace(dependency, source, definitions, text);\r\n\t}\r\n\r\n\tlocalModuleVar(dependency) {\r\n\t\treturn dependency.localModule && dependency.localModule.used && dependency.localModule.variableName();\r\n\t}\r\n\r\n\tbranch(dependency) {\r\n\t\tconst localModuleVar = this.localModuleVar(dependency) ? \"l\" : \"\";\r\n\t\tconst arrayRange = dependency.arrayRange ? \"a\" : \"\";\r\n\t\tconst objectRange = dependency.objectRange ? \"o\" : \"\";\r\n\t\tconst functionRange = dependency.functionRange ? \"f\" : \"\";\r\n\t\treturn localModuleVar + arrayRange + objectRange + functionRange;\r\n\t}\r\n\r\n\treplace(dependency, source, definition, text) {\r\n\t\tconst localModuleVar = this.localModuleVar(dependency);\r\n\t\tif(localModuleVar) {\r\n\t\t\ttext = text.replace(/XXX/g, localModuleVar.replace(/\\$/g, \"$$$$\"));\r\n\t\t\tdefinition = definition.replace(/XXX/g, localModuleVar.replace(/\\$/g, \"$$$$\"));\r\n\t\t}\r\n\r\n\t\tif(dependency.namedModule) {\r\n\t\t\ttext = text.replace(/YYY/g, JSON.stringify(dependency.namedModule));\r\n\t\t}\r\n\r\n\t\tconst texts = text.split(\"#\");\r\n\r\n\t\tif(definition) source.insert(0, definition);\r\n\r\n\t\tlet current = dependency.range[0];\r\n\t\tif(dependency.arrayRange) {\r\n\t\t\tsource.replace(current, dependency.arrayRange[0] - 1, texts.shift());\r\n\t\t\tcurrent = dependency.arrayRange[1];\r\n\t\t}\r\n\r\n\t\tif(dependency.objectRange) {\r\n\t\t\tsource.replace(current, dependency.objectRange[0] - 1, texts.shift());\r\n\t\t\tcurrent = dependency.objectRange[1];\r\n\t\t} else if(dependency.functionRange) {\r\n\t\t\tsource.replace(current, dependency.functionRange[0] - 1, texts.shift());\r\n\t\t\tcurrent = dependency.functionRange[1];\r\n\t\t}\r\n\t\tsource.replace(current, dependency.range[1] - 1, texts.shift());\r\n\t\tif(texts.length > 0)\r\n\t\t\tthrow new Error(\"Implementation error\");\r\n\t}\r\n};\r\n\r\nmodule.exports = AMDDefineDependency;\r\n","/home/travis/build/npmtest/node-npmtest-webpack/node_modules/webpack/lib/dependencies/UnsupportedDependency.js":"/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\n\"use strict\";\r\nconst NullDependency = require(\"./NullDependency\");\r\nconst webpackMissingModule = require(\"./WebpackMissingModule\").module;\r\n\r\nclass UnsupportedDependency extends NullDependency {\r\n\tconstructor(request, range) {\r\n\t\tsuper();\r\n\t\tthis.request = request;\r\n\t\tthis.range = range;\r\n\t}\r\n}\r\n\r\nUnsupportedDependency.Template = class UnsupportedDependencyTemplate {\r\n\tapply(dep, source, outputOptions, requestShortener) {\r\n\t\tsource.replace(dep.range[0], dep.range[1], webpackMissingModule(dep.request));\r\n\t}\r\n};\r\n\r\nmodule.exports = UnsupportedDependency;\r\n","/home/travis/build/npmtest/node-npmtest-webpack/node_modules/webpack/lib/dependencies/AMDRequireDependenciesBlockParserPlugin.js":"/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\n\"use strict\";\r\n\r\nconst AMDRequireItemDependency = require(\"./AMDRequireItemDependency\");\r\nconst AMDRequireArrayDependency = require(\"./AMDRequireArrayDependency\");\r\nconst AMDRequireContextDependency = require(\"./AMDRequireContextDependency\");\r\nconst AMDRequireDependenciesBlock = require(\"./AMDRequireDependenciesBlock\");\r\nconst UnsupportedDependency = require(\"./UnsupportedDependency\");\r\nconst LocalModuleDependency = require(\"./LocalModuleDependency\");\r\nconst ContextDependencyHelpers = require(\"./ContextDependencyHelpers\");\r\nconst LocalModulesHelpers = require(\"./LocalModulesHelpers\");\r\nconst ConstDependency = require(\"./ConstDependency\");\r\nconst getFunctionExpression = require(\"./getFunctionExpression\");\r\nconst UnsupportedFeatureWarning = require(\"../UnsupportedFeatureWarning\");\r\n\r\nclass AMDRequireDependenciesBlockParserPlugin {\r\n\tconstructor(options) {\r\n\t\tthis.options = options;\r\n\t}\r\n\r\n\tprocessFunctionArgument(parser, expression) {\r\n\t\tlet bindThis = true;\r\n\t\tconst fnData = getFunctionExpression(expression);\r\n\t\tif(fnData) {\r\n\t\t\tparser.inScope(fnData.fn.params.filter((i) => {\r\n\t\t\t\treturn [\"require\", \"module\", \"exports\"].indexOf(i.name) < 0;\r\n\t\t\t}), () => {\r\n\t\t\t\tif(fnData.fn.body.type === \"BlockStatement\")\r\n\t\t\t\t\tparser.walkStatement(fnData.fn.body);\r\n\t\t\t\telse\r\n\t\t\t\t\tparser.walkExpression(fnData.fn.body);\r\n\t\t\t});\r\n\t\t\tparser.walkExpressions(fnData.expressions);\r\n\t\t\tif(fnData.needThis === false) {\r\n\t\t\t\tbindThis = false;\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tparser.walkExpression(expression);\r\n\t\t}\r\n\t\treturn bindThis;\r\n\t}\r\n\r\n\tapply(parser) {\r\n\t\tconst options = this.options;\r\n\t\tparser.plugin(\"call require\", (expr) => {\r\n\t\t\tlet param;\r\n\t\t\tlet dep;\r\n\t\t\tlet result;\r\n\r\n\t\t\tconst old = parser.state.current;\r\n\r\n\t\t\tif(expr.arguments.length >= 1) {\r\n\t\t\t\tparam = parser.evaluateExpression(expr.arguments[0]);\r\n\t\t\t\tdep = new AMDRequireDependenciesBlock(\r\n\t\t\t\t\texpr,\r\n\t\t\t\t\tparam.range,\r\n\t\t\t\t\t(expr.arguments.length > 1) ? expr.arguments[1].range : null,\r\n\t\t\t\t\t(expr.arguments.length > 2) ? expr.arguments[2].range : null,\r\n\t\t\t\t\tparser.state.module,\r\n\t\t\t\t\texpr.loc\r\n\t\t\t\t);\r\n\t\t\t\tparser.state.current = dep;\r\n\t\t\t}\r\n\r\n\t\t\tif(expr.arguments.length === 1) {\r\n\t\t\t\tparser.inScope([], () => {\r\n\t\t\t\t\tresult = parser.applyPluginsBailResult(\"call require:amd:array\", expr, param);\r\n\t\t\t\t});\r\n\t\t\t\tparser.state.current = old;\r\n\t\t\t\tif(!result) return;\r\n\t\t\t\tparser.state.current.addBlock(dep);\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\r\n\t\t\tif(expr.arguments.length === 2 || expr.arguments.length === 3) {\r\n\t\t\t\ttry {\r\n\t\t\t\t\tparser.inScope([], () => {\r\n\t\t\t\t\t\tresult = parser.applyPluginsBailResult(\"call require:amd:array\", expr, param);\r\n\t\t\t\t\t});\r\n\t\t\t\t\tif(!result) {\r\n\t\t\t\t\t\tdep = new UnsupportedDependency(\"unsupported\", expr.range);\r\n\t\t\t\t\t\told.addDependency(dep);\r\n\t\t\t\t\t\tif(parser.state.module)\r\n\t\t\t\t\t\t\tparser.state.module.errors.push(new UnsupportedFeatureWarning(parser.state.module, \"Cannot statically analyse 'require(..., ...)' in line \" + expr.loc.start.line));\r\n\t\t\t\t\t\tdep = null;\r\n\t\t\t\t\t\treturn true;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tdep.functionBindThis = this.processFunctionArgument(parser, expr.arguments[1]);\r\n\t\t\t\t\tif(expr.arguments.length === 3) {\r\n\t\t\t\t\t\tdep.errorCallbackBindThis = this.processFunctionArgument(parser, expr.arguments[2]);\r\n\t\t\t\t\t}\r\n\t\t\t\t} finally {\r\n\t\t\t\t\tparser.state.current = old;\r\n\t\t\t\t\tif(dep)\r\n\t\t\t\t\t\tparser.state.current.addBlock(dep);\r\n\t\t\t\t}\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t});\r\n\t\tparser.plugin(\"call require:amd:array\", (expr, param) => {\r\n\t\t\tif(param.isArray()) {\r\n\t\t\t\tparam.items.forEach((param) => {\r\n\t\t\t\t\tconst result = parser.applyPluginsBailResult(\"call require:amd:item\", expr, param);\r\n\t\t\t\t\tif(result === undefined) {\r\n\t\t\t\t\t\tparser.applyPluginsBailResult(\"call require:amd:context\", expr, param);\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t\treturn true;\r\n\t\t\t} else if(param.isConstArray()) {\r\n\t\t\t\tconst deps = [];\r\n\t\t\t\tparam.array.forEach((request) => {\r\n\t\t\t\t\tlet dep, localModule;\r\n\t\t\t\t\tif(request === \"require\") {\r\n\t\t\t\t\t\tdep = \"__webpack_require__\";\r\n\t\t\t\t\t} else if([\"exports\", \"module\"].indexOf(request) >= 0) {\r\n\t\t\t\t\t\tdep = request;\r\n\t\t\t\t\t} else if(localModule = LocalModulesHelpers.getLocalModule(parser.state, request)) { // eslint-disable-line no-cond-assign\r\n\t\t\t\t\t\tdep = new LocalModuleDependency(localModule);\r\n\t\t\t\t\t\tdep.loc = expr.loc;\r\n\t\t\t\t\t\tparser.state.current.addDependency(dep);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tdep = new AMDRequireItemDependency(request);\r\n\t\t\t\t\t\tdep.loc = expr.loc;\r\n\t\t\t\t\t\tdep.optional = !!parser.scope.inTry;\r\n\t\t\t\t\t\tparser.state.current.addDependency(dep);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tdeps.push(dep);\r\n\t\t\t\t});\r\n\t\t\t\tconst dep = new AMDRequireArrayDependency(deps, param.range);\r\n\t\t\t\tdep.loc = expr.loc;\r\n\t\t\t\tdep.optional = !!parser.scope.inTry;\r\n\t\t\t\tparser.state.current.addDependency(dep);\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t});\r\n\t\tparser.plugin(\"call require:amd:item\", (expr, param) => {\r\n\t\t\tif(param.isConditional()) {\r\n\t\t\t\tparam.options.forEach((param) => {\r\n\t\t\t\t\tconst result = parser.applyPluginsBailResult(\"call require:amd:item\", expr, param);\r\n\t\t\t\t\tif(result === undefined) {\r\n\t\t\t\t\t\tparser.applyPluginsBailResult(\"call require:amd:context\", expr, param);\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t\treturn true;\r\n\t\t\t} else if(param.isString()) {\r\n\t\t\t\tlet dep, localModule;\r\n\t\t\t\tif(param.string === \"require\") {\r\n\t\t\t\t\tdep = new ConstDependency(\"__webpack_require__\", param.string);\r\n\t\t\t\t} else if(param.string === \"module\") {\r\n\t\t\t\t\tdep = new ConstDependency(parser.state.module.moduleArgument || \"module\", param.range);\r\n\t\t\t\t} else if(param.string === \"exports\") {\r\n\t\t\t\t\tdep = new ConstDependency(parser.state.module.exportsArgument || \"exports\", param.range);\r\n\t\t\t\t} else if(localModule = LocalModulesHelpers.getLocalModule(parser.state, param.string)) { // eslint-disable-line no-cond-assign\r\n\t\t\t\t\tdep = new LocalModuleDependency(localModule, param.range);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tdep = new AMDRequireItemDependency(param.string, param.range);\r\n\t\t\t\t}\r\n\t\t\t\tdep.loc = expr.loc;\r\n\t\t\t\tdep.optional = !!parser.scope.inTry;\r\n\t\t\t\tparser.state.current.addDependency(dep);\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t});\r\n\t\tparser.plugin(\"call require:amd:context\", (expr, param) => {\r\n\t\t\tconst dep = ContextDependencyHelpers.create(AMDRequireContextDependency, param.range, param, expr, options);\r\n\t\t\tif(!dep) return;\r\n\t\t\tdep.loc = expr.loc;\r\n\t\t\tdep.optional = !!parser.scope.inTry;\r\n\t\t\tparser.state.current.addDependency(dep);\r\n\t\t\treturn true;\r\n\t\t});\r\n\t}\r\n}\r\nmodule.exports = AMDRequireDependenciesBlockParserPlugin;\r\n","/home/travis/build/npmtest/node-npmtest-webpack/node_modules/webpack/lib/dependencies/AMDRequireDependenciesBlock.js":"/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\n\"use strict\";\r\nconst AsyncDependenciesBlock = require(\"../AsyncDependenciesBlock\");\r\nconst AMDRequireDependency = require(\"./AMDRequireDependency\");\r\n\r\nmodule.exports = class AMDRequireDependenciesBlock extends AsyncDependenciesBlock {\r\n\tconstructor(expr, arrayRange, functionRange, errorCallbackRange, module, loc) {\r\n\t\tsuper(null, module, loc);\r\n\t\tthis.expr = expr;\r\n\t\tthis.outerRange = expr.range;\r\n\t\tthis.arrayRange = arrayRange;\r\n\t\tthis.functionRange = functionRange;\r\n\t\tthis.errorCallbackRange = errorCallbackRange;\r\n\t\tthis.bindThis = true;\r\n\t\tif(arrayRange && functionRange && errorCallbackRange) {\r\n\t\t\tthis.range = [arrayRange[0], errorCallbackRange[1]];\r\n\t\t} else if(arrayRange && functionRange) {\r\n\t\t\tthis.range = [arrayRange[0], functionRange[1]];\r\n\t\t} else if(arrayRange) {\r\n\t\t\tthis.range = arrayRange;\r\n\t\t} else if(functionRange) {\r\n\t\t\tthis.range = functionRange;\r\n\t\t} else {\r\n\t\t\tthis.range = expr.range;\r\n\t\t}\r\n\t\tconst dep = new AMDRequireDependency(this);\r\n\t\tdep.loc = loc;\r\n\t\tthis.addDependency(dep);\r\n\t}\r\n};\r\n","/home/travis/build/npmtest/node-npmtest-webpack/node_modules/webpack/lib/dependencies/getFunctionExpression.js":"/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\nmodule.exports = function(expr) {\r\n\t// <FunctionExpression>\r\n\tif(expr.type === \"FunctionExpression\" || expr.type === \"ArrowFunctionExpression\") {\r\n\t\treturn {\r\n\t\t\tfn: expr,\r\n\t\t\texpressions: [],\r\n\t\t\tneedThis: false\r\n\t\t};\r\n\t}\r\n\r\n\t// <FunctionExpression>.bind(<Expression>)\r\n\tif(expr.type === \"CallExpression\" &&\r\n\t\texpr.callee.type === \"MemberExpression\" &&\r\n\t\texpr.callee.object.type === \"FunctionExpression\" &&\r\n\t\texpr.callee.property.type === \"Identifier\" &&\r\n\t\texpr.callee.property.name === \"bind\" &&\r\n\t\texpr.arguments.length === 1) {\r\n\t\treturn {\r\n\t\t\tfn: expr.callee.object,\r\n\t\t\texpressions: [expr.arguments[0]]\r\n\t\t};\r\n\t}\r\n\t// (function(_this) {return <FunctionExpression>})(this) (Coffeescript)\r\n\tif(expr.type === \"CallExpression\" &&\r\n\t\texpr.callee.type === \"FunctionExpression\" &&\r\n\t\texpr.callee.body.type === \"BlockStatement\" &&\r\n\t\texpr.arguments.length === 1 &&\r\n\t\texpr.arguments[0].type === \"ThisExpression\" &&\r\n\t\texpr.callee.body.body &&\r\n\t\texpr.callee.body.body.length === 1 &&\r\n\t\texpr.callee.body.body[0].type === \"ReturnStatement\" &&\r\n\t\texpr.callee.body.body[0].argument &&\r\n\t\texpr.callee.body.body[0].argument.type === \"FunctionExpression\") {\r\n\t\treturn {\r\n\t\t\tfn: expr.callee.body.body[0].argument,\r\n\t\t\texpressions: [],\r\n\t\t\tneedThis: true\r\n\t\t};\r\n\t}\r\n};\r\n","/home/travis/build/npmtest/node-npmtest-webpack/node_modules/webpack/lib/dependencies/AMDDefineDependencyParserPlugin.js":"/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\n\"use strict\";\r\n\r\nconst AMDRequireItemDependency = require(\"./AMDRequireItemDependency\");\r\nconst AMDRequireContextDependency = require(\"./AMDRequireContextDependency\");\r\nconst ConstDependency = require(\"./ConstDependency\");\r\nconst AMDDefineDependency = require(\"./AMDDefineDependency\");\r\nconst AMDRequireArrayDependency = require(\"./AMDRequireArrayDependency\");\r\nconst LocalModuleDependency = require(\"./LocalModuleDependency\");\r\nconst ContextDependencyHelpers = require(\"./ContextDependencyHelpers\");\r\nconst LocalModulesHelpers = require(\"./LocalModulesHelpers\");\r\n\r\nfunction isBoundFunctionExpression(expr) {\r\n\tif(expr.type !== \"CallExpression\") return false;\r\n\tif(expr.callee.type !== \"MemberExpression\") return false;\r\n\tif(expr.callee.computed) return false;\r\n\tif(expr.callee.object.type !== \"FunctionExpression\") return false;\r\n\tif(expr.callee.property.type !== \"Identifier\") return false;\r\n\tif(expr.callee.property.name !== \"bind\") return false;\r\n\treturn true;\r\n}\r\n\r\nclass AMDDefineDependencyParserPlugin {\r\n\tconstructor(options) {\r\n\t\tthis.options = options;\r\n\t}\r\n\r\n\tapply(parser) {\r\n\t\tconst options = this.options;\r\n\t\tparser.plugin(\"call define\", (expr) => {\r\n\t\t\tlet array, fn, obj, namedModule;\r\n\t\t\tswitch(expr.arguments.length) {\r\n\t\t\t\tcase 1:\r\n\t\t\t\t\tif(expr.arguments[0].type === \"FunctionExpression\" || isBoundFunctionExpression(expr.arguments[0])) {\r\n\t\t\t\t\t\t// define(f() {...})\r\n\t\t\t\t\t\tfn = expr.arguments[0];\r\n\t\t\t\t\t} else if(expr.arguments[0].type === \"ObjectExpression\") {\r\n\t\t\t\t\t\t// define({...})\r\n\t\t\t\t\t\tobj = expr.arguments[0];\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\t// define(expr)\r\n\t\t\t\t\t\t// unclear if function or object\r\n\t\t\t\t\t\tobj = fn = expr.arguments[0];\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 2:\r\n\t\t\t\t\tif(expr.arguments[0].type === \"Literal\") {\r\n\t\t\t\t\t\tnamedModule = expr.arguments[0].value;\r\n\t\t\t\t\t\t// define(\"...\", ...)\r\n\t\t\t\t\t\tif(expr.arguments[1].type === \"FunctionExpression\" || isBoundFunctionExpression(expr.arguments[1])) {\r\n\t\t\t\t\t\t\t// define(\"...\", f() {...})\r\n\t\t\t\t\t\t\tfn = expr.arguments[1];\r\n\t\t\t\t\t\t} else if(expr.arguments[1].type === \"ObjectExpression\") {\r\n\t\t\t\t\t\t\t// define(\"...\", {...})\r\n\t\t\t\t\t\t\tobj = expr.arguments[1];\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t// define(\"...\", expr)\r\n\t\t\t\t\t\t\t// unclear if function or object\r\n\t\t\t\t\t\t\tobj = fn = expr.arguments[1];\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tarray = expr.arguments[0];\r\n\t\t\t\t\t\tif(expr.arguments[1].type === \"FunctionExpression\" || isBoundFunctionExpression(expr.arguments[1])) {\r\n\t\t\t\t\t\t\t// define([...], f() {})\r\n\t\t\t\t\t\t\tfn = expr.arguments[1];\r\n\t\t\t\t\t\t} else if(expr.arguments[1].type === \"ObjectExpression\") {\r\n\t\t\t\t\t\t\t// define([...], {...})\r\n\t\t\t\t\t\t\tobj = expr.arguments[1];\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t// define([...], expr)\r\n\t\t\t\t\t\t\t// unclear if function or object\r\n\t\t\t\t\t\t\tobj = fn = expr.arguments[1];\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 3:\r\n\t\t\t\t\t// define(\"...\", [...], f() {...})\r\n\t\t\t\t\tnamedModule = expr.arguments[0].value;\r\n\t\t\t\t\tarray = expr.arguments[1];\r\n\t\t\t\t\tif(expr.arguments[2].type === \"FunctionExpression\" || isBoundFunctionExpression(expr.arguments[2])) {\r\n\t\t\t\t\t\t// define(\"...\", [...], f() {})\r\n\t\t\t\t\t\tfn = expr.arguments[2];\r\n\t\t\t\t\t} else if(expr.arguments[2].type === \"ObjectExpression\") {\r\n\t\t\t\t\t\t// define(\"...\", [...], {...})\r\n\t\t\t\t\t\tobj = expr.arguments[2];\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\t// define(\"...\", [...], expr)\r\n\t\t\t\t\t\t// unclear if function or object\r\n\t\t\t\t\t\tobj = fn = expr.arguments[2];\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tdefault:\r\n\t\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tlet fnParams = null;\r\n\t\t\tlet fnParamsOffset = 0;\r\n\t\t\tif(fn) {\r\n\t\t\t\tif(fn.type === \"FunctionExpression\") fnParams = fn.params;\r\n\t\t\t\telse if(isBoundFunctionExpression(fn)) {\r\n\t\t\t\t\tfnParams = fn.callee.object.params;\r\n\t\t\t\t\tfnParamsOffset = fn.arguments.length - 1;\r\n\t\t\t\t\tif(fnParamsOffset < 0) fnParamsOffset = 0;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tlet fnRenames = Object.create(parser.scope.renames);\r\n\t\t\tlet identifiers;\r\n\t\t\tif(array) {\r\n\t\t\t\tidentifiers = {};\r\n\t\t\t\tconst param = parser.evaluateExpression(array);\r\n\t\t\t\tconst result = parser.applyPluginsBailResult(\"call define:amd:array\", expr, param, identifiers, namedModule);\r\n\t\t\t\tif(!result) return;\r\n\t\t\t\tif(fnParams) fnParams = fnParams.slice(fnParamsOffset).filter((param, idx) => {\r\n\t\t\t\t\tif(identifiers[idx]) {\r\n\t\t\t\t\t\tfnRenames[\"$\" + param.name] = identifiers[idx];\r\n\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t});\r\n\t\t\t} else {\r\n\t\t\t\tidentifiers = [\"require\", \"exports\", \"module\"];\r\n\t\t\t\tif(fnParams) fnParams = fnParams.slice(fnParamsOffset).filter((param, idx) => {\r\n\t\t\t\t\tif(identifiers[idx]) {\r\n\t\t\t\t\t\tfnRenames[\"$\" + param.name] = identifiers[idx];\r\n\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\tlet inTry;\r\n\t\t\tif(fn && fn.type === \"FunctionExpression\") {\r\n\t\t\t\tinTry = parser.scope.inTry;\r\n\t\t\t\tparser.inScope(fnParams, () => {\r\n\t\t\t\t\tparser.scope.renames = fnRenames;\r\n\t\t\t\t\tparser.scope.inTry = inTry;\r\n\t\t\t\t\tif(fn.body.type === \"BlockStatement\")\r\n\t\t\t\t\t\tparser.walkStatement(fn.body);\r\n\t\t\t\t\telse\r\n\t\t\t\t\t\tparser.walkExpression(fn.body);\r\n\t\t\t\t});\r\n\t\t\t} else if(fn && isBoundFunctionExpression(fn)) {\r\n\t\t\t\tinTry = parser.scope.inTry;\r\n\t\t\t\tparser.inScope(fn.callee.object.params.filter((i) => [\"require\", \"module\", \"exports\"].indexOf(i.name) < 0), () => {\r\n\t\t\t\t\tparser.scope.renames = fnRenames;\r\n\t\t\t\t\tparser.scope.inTry = inTry;\r\n\t\t\t\t\tif(fn.callee.object.body.type === \"BlockStatement\")\r\n\t\t\t\t\t\tparser.walkStatement(fn.callee.object.body);\r\n\t\t\t\t\telse\r\n\t\t\t\t\t\tparser.walkExpression(fn.callee.object.body);\r\n\t\t\t\t});\r\n\t\t\t\tif(fn.arguments)\r\n\t\t\t\t\tparser.walkExpressions(fn.arguments);\r\n\t\t\t} else if(fn || obj) {\r\n\t\t\t\tparser.walkExpression(fn || obj);\r\n\t\t\t}\r\n\r\n\t\t\tconst dep = new AMDDefineDependency(\r\n\t\t\t\texpr.range,\r\n\t\t\t\tarray ? array.range : null,\r\n\t\t\t\tfn ? fn.range : null,\r\n\t\t\t\tobj ? obj.range : null,\r\n\t\t\t\tnamedModule ? namedModule : null\r\n\t\t\t);\r\n\t\t\tdep.loc = expr.loc;\r\n\t\t\tif(namedModule) {\r\n\t\t\t\tdep.localModule = LocalModulesHelpers.addLocalModule(parser.state, namedModule);\r\n\t\t\t}\r\n\t\t\tparser.state.current.addDependency(dep);\r\n\t\t\treturn true;\r\n\t\t});\r\n\t\tparser.plugin(\"call define:amd:array\", (expr, param, identifiers, namedModule) => {\r\n\t\t\tif(param.isArray()) {\r\n\t\t\t\tparam.items.forEach((param, idx) => {\r\n\t\t\t\t\tif(param.isString() && [\"require\", \"module\", \"exports\"].indexOf(param.string) >= 0)\r\n\t\t\t\t\t\tidentifiers[idx] = param.string;\r\n\t\t\t\t\tconst result = parser.applyPluginsBailResult(\"call define:amd:item\", expr, param, namedModule);\r\n\t\t\t\t\tif(result === undefined) {\r\n\t\t\t\t\t\tparser.applyPluginsBailResult(\"call define:amd:context\", expr, param);\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t\treturn true;\r\n\t\t\t} else if(param.isConstArray()) {\r\n\t\t\t\tconst deps = [];\r\n\t\t\t\tparam.array.forEach((request, idx) => {\r\n\t\t\t\t\tlet dep;\r\n\t\t\t\t\tlet localModule;\r\n\t\t\t\t\tif(request === \"require\") {\r\n\t\t\t\t\t\tidentifiers[idx] = request;\r\n\t\t\t\t\t\tdep = \"__webpack_require__\";\r\n\t\t\t\t\t} else if([\"exports\", \"module\"].indexOf(request) >= 0) {\r\n\t\t\t\t\t\tidentifiers[idx] = request;\r\n\t\t\t\t\t\tdep = request;\r\n\t\t\t\t\t} else if(localModule = LocalModulesHelpers.getLocalModule(parser.state, request)) { // eslint-disable-line no-cond-assign\r\n\t\t\t\t\t\tdep = new LocalModuleDependency(localModule);\r\n\t\t\t\t\t\tdep.loc = expr.loc;\r\n\t\t\t\t\t\tparser.state.current.addDependency(dep);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tdep = new AMDRequireItemDependency(request);\r\n\t\t\t\t\t\tdep.loc = expr.loc;\r\n\t\t\t\t\t\tdep.optional = !!parser.scope.inTry;\r\n\t\t\t\t\t\tparser.state.current.addDependency(dep);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tdeps.push(dep);\r\n\t\t\t\t});\r\n\t\t\t\tconst dep = new AMDRequireArrayDependency(deps, param.range);\r\n\t\t\t\tdep.loc = expr.loc;\r\n\t\t\t\tdep.optional = !!parser.scope.inTry;\r\n\t\t\t\tparser.state.current.addDependency(dep);\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t});\r\n\t\tparser.plugin(\"call define:amd:item\", (expr, param, namedModule) => {\r\n\t\t\tif(param.isConditional()) {\r\n\t\t\t\tparam.options.forEach((param) => {\r\n\t\t\t\t\tconst result = parser.applyPluginsBailResult(\"call define:amd:item\", expr, param);\r\n\t\t\t\t\tif(result === undefined) {\r\n\t\t\t\t\t\tparser.applyPluginsBailResult(\"call define:amd:context\", expr, param);\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t\treturn true;\r\n\t\t\t} else if(param.isString()) {\r\n\t\t\t\tlet dep, localModule;\r\n\t\t\t\tif(param.string === \"require\") {\r\n\t\t\t\t\tdep = new ConstDependency(\"__webpack_require__\", param.range);\r\n\t\t\t\t} else if([\"require\", \"exports\", \"module\"].indexOf(param.string) >= 0) {\r\n\t\t\t\t\tdep = new ConstDependency(param.string, param.range);\r\n\t\t\t\t} else if(localModule = LocalModulesHelpers.getLocalModule(parser.state, param.string, namedModule)) { // eslint-disable-line no-cond-assign\r\n\t\t\t\t\tdep = new LocalModuleDependency(localModule, param.range);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tdep = new AMDRequireItemDependency(param.string, param.range);\r\n\t\t\t\t}\r\n\t\t\t\tdep.loc = expr.loc;\r\n\t\t\t\tdep.optional = !!parser.scope.inTry;\r\n\t\t\t\tparser.state.current.addDependency(dep);\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t});\r\n\t\tparser.plugin(\"call define:amd:context\", (expr, param) => {\r\n\t\t\tconst dep = ContextDependencyHelpers.create(AMDRequireContextDependency, param.range, param, expr, options);\r\n\t\t\tif(!dep) return;\r\n\t\t\tdep.loc = expr.loc;\r\n\t\t\tdep.optional = !!parser.scope.inTry;\r\n\t\t\tparser.state.current.addDependency(dep);\r\n\t\t\treturn true;\r\n\t\t});\r\n\t}\r\n}\r\nmodule.exports = AMDDefineDependencyParserPlugin;\r\n","/home/travis/build/npmtest/node-npmtest-webpack/node_modules/webpack/lib/dependencies/RequireContextPlugin.js":"/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\n\"use strict\";\r\n\r\nconst RequireContextDependency = require(\"./RequireContextDependency\");\r\nconst ContextElementDependency = require(\"./ContextElementDependency\");\r\n\r\nconst RequireContextDependencyParserPlugin = require(\"./RequireContextDependencyParserPlugin\");\r\n\r\nclass RequireContextPlugin {\r\n\tconstructor(modulesDirectories, extensions) {\r\n\t\tif(!Array.isArray(modulesDirectories))\r\n\t\t\tthrow new Error(\"modulesDirectories must be an array\");\r\n\t\tif(!Array.isArray(extensions))\r\n\t\t\tthrow new Error(\"extensions must be an array\");\r\n\t\tthis.modulesDirectories = modulesDirectories;\r\n\t\tthis.extensions = extensions;\r\n\t}\r\n\r\n\tapply(compiler) {\r\n\t\tconst modulesDirectories = this.modulesDirectories;\r\n\t\tconst extensions = this.extensions;\r\n\t\tcompiler.plugin(\"compilation\", (compilation, params) => {\r\n\t\t\tconst contextModuleFactory = params.contextModuleFactory;\r\n\t\t\tconst normalModuleFactory = params.normalModuleFactory;\r\n\r\n\t\t\tcompilation.dependencyFactories.set(RequireContextDependency, contextModuleFactory);\r\n\t\t\tcompilation.dependencyTemplates.set(RequireContextDependency, new RequireContextDependency.Template());\r\n\r\n\t\t\tcompilation.dependencyFactories.set(ContextElementDependency, normalModuleFactory);\r\n\r\n\t\t\tparams.normalModuleFactory.plugin(\"parser\", (parser, parserOptions) => {\r\n\r\n\t\t\t\tif(typeof parserOptions.requireContext !== \"undefined\" && !parserOptions.requireContext)\r\n\t\t\t\t\treturn;\r\n\r\n\t\t\t\tparser.apply(new RequireContextDependencyParserPlugin());\r\n\t\t\t});\r\n\r\n\t\t\tparams.contextModuleFactory.plugin(\"alternatives\", (items, callback) => {\r\n\t\t\t\tif(items.length === 0) return callback(null, items);\r\n\r\n\t\t\t\tcallback(null, items.map((obj) => {\r\n\t\t\t\t\treturn extensions.filter((ext) => {\r\n\t\t\t\t\t\tconst l = obj.request.length;\r\n\t\t\t\t\t\treturn l > ext.length && obj.request.substr(l - ext.length, l) === ext;\r\n\t\t\t\t\t}).map((ext) => {\r\n\t\t\t\t\t\tconst l = obj.request.length;\r\n\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\tcontext: obj.context,\r\n\t\t\t\t\t\t\trequest: obj.request.substr(0, l - ext.length)\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t}).concat(obj);\r\n\t\t\t\t}).reduce((a, b) => a.concat(b), []));\r\n\t\t\t});\r\n\r\n\t\t\tparams.contextModuleFactory.plugin(\"alternatives\", (items, callback) => {\r\n\t\t\t\tif(items.length === 0) return callback(null, items);\r\n\r\n\t\t\t\tcallback(null, items.map((obj) => {\r\n\t\t\t\t\tfor(let i = 0; i < modulesDirectories.length; i++) {\r\n\t\t\t\t\t\tconst dir = modulesDirectories[i];\r\n\t\t\t\t\t\tconst idx = obj.request.indexOf(\"./\" + dir + \"/\");\r\n\t\t\t\t\t\tif(idx === 0) {\r\n\t\t\t\t\t\t\tobj.request = obj.request.slice(dir.length + 3);\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn obj;\r\n\t\t\t\t}));\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n}\r\nmodule.exports = RequireContextPlugin;\r\n","/home/travis/build/npmtest/node-npmtest-webpack/node_modules/webpack/lib/dependencies/RequireContextDependency.js":"/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\n\"use strict\";\r\nconst ContextDependency = require(\"./ContextDependency\");\r\nconst ModuleDependencyTemplateAsRequireId = require(\"./ModuleDependencyTemplateAsRequireId\");\r\n\r\nclass RequireContextDependency extends ContextDependency {\r\n\tconstructor(request, recursive, regExp, range) {\r\n\t\tsuper(request, recursive, regExp);\r\n\t\tthis.range = range;\r\n\t}\r\n\r\n\tget type() {\r\n\t\treturn \"require.context\";\r\n\t}\r\n}\r\n\r\nRequireContextDependency.Template = ModuleDependencyTemplateAsRequireId;\r\n\r\nmodule.exports = RequireContextDependency;\r\n","/home/travis/build/npmtest/node-npmtest-webpack/node_modules/webpack/lib/dependencies/RequireContextDependencyParserPlugin.js":"/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\n\"use strict\";\r\n\r\nconst RequireContextDependency = require(\"./RequireContextDependency\");\r\n\r\nmodule.exports = class RequireContextDependencyParserPlugin {\r\n\tapply(parser) {\r\n\t\tparser.plugin(\"call require.context\", expr => {\r\n\t\t\tlet regExp = /^\\.\\/.*$/;\r\n\t\t\tlet recursive = true;\r\n\t\t\tswitch(expr.arguments.length) {\r\n\t\t\t\tcase 3:\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tconst regExpExpr = parser.evaluateExpression(expr.arguments[2]);\r\n\t\t\t\t\t\tif(!regExpExpr.isRegExp()) return;\r\n\t\t\t\t\t\tregExp = regExpExpr.regExp;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t// falls through\r\n\t\t\t\tcase 2:\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tconst recursiveExpr = parser.evaluateExpression(expr.arguments[1]);\r\n\t\t\t\t\t\tif(!recursiveExpr.isBoolean()) return;\r\n\t\t\t\t\t\trecursive = recursiveExpr.bool;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t// falls through\r\n\t\t\t\tcase 1:\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tconst requestExpr = parser.evaluateExpression(expr.arguments[0]);\r\n\t\t\t\t\t\tif(!requestExpr.isString()) return;\r\n\t\t\t\t\t\tconst dep = new RequireContextDependency(requestExpr.string, recursive, regExp, expr.range);\r\n\t\t\t\t\t\tdep.loc = expr.loc;\r\n\t\t\t\t\t\tdep.optional = parser.scope.inTry;\r\n\t\t\t\t\t\tparser.state.current.addDependency(dep);\r\n\t\t\t\t\t\treturn true;\r\n\t\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n};\r\n","/home/travis/build/npmtest/node-npmtest-webpack/node_modules/webpack/lib/dependencies/RequireEnsurePlugin.js":"/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\n\"use strict\";\r\n\r\nconst RequireEnsureItemDependency = require(\"./RequireEnsureItemDependency\");\r\nconst RequireEnsureDependency = require(\"./RequireEnsureDependency\");\r\n\r\nconst NullFactory = require(\"../NullFactory\");\r\n\r\nconst RequireEnsureDependenciesBlockParserPlugin = require(\"./RequireEnsureDependenciesBlockParserPlugin\");\r\n\r\nconst ParserHelpers = require(\"../ParserHelpers\");\r\n\r\nclass RequireEnsurePlugin {\r\n\r\n\tapply(compiler) {\r\n\t\tcompiler.plugin(\"compilation\", (compilation, params) => {\r\n\t\t\tconst normalModuleFactory = params.normalModuleFactory;\r\n\r\n\t\t\tcompilation.dependencyFactories.set(RequireEnsureItemDependency, normalModuleFactory);\r\n\t\t\tcompilation.dependencyTemplates.set(RequireEnsureItemDependency, new RequireEnsureItemDependency.Template());\r\n\r\n\t\t\tcompilation.dependencyFactories.set(RequireEnsureDependency, new NullFactory());\r\n\t\t\tcompilation.dependencyTemplates.set(RequireEnsureDependency, new RequireEnsureDependency.Template());\r\n\r\n\t\t\tparams.normalModuleFactory.plugin(\"parser\", (parser, parserOptions) => {\r\n\r\n\t\t\t\tif(typeof parserOptions.requireEnsure !== \"undefined\" && !parserOptions.requireEnsure)\r\n\t\t\t\t\treturn;\r\n\r\n\t\t\t\tparser.apply(new RequireEnsureDependenciesBlockParserPlugin());\r\n\t\t\t\tparser.plugin(\"evaluate typeof require.ensure\", ParserHelpers.evaluateToString(\"function\"));\r\n\t\t\t\tparser.plugin(\"typeof require.ensure\", ParserHelpers.toConstantDependency(JSON.stringify(\"function\")));\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n}\r\nmodule.exports = RequireEnsurePlugin;\r\n","/home/travis/build/npmtest/node-npmtest-webpack/node_modules/webpack/lib/dependencies/RequireEnsureItemDependency.js":"/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\n\"use strict\";\r\nconst ModuleDependency = require(\"./ModuleDependency\");\r\nconst NullDependency = require(\"./NullDependency\");\r\n\r\nclass RequireEnsureItemDependency extends ModuleDependency {\r\n\tconstructor(request) {\r\n\t\tsuper(request);\r\n\t}\r\n\r\n\tget type() {\r\n\t\treturn \"require.ensure item\";\r\n\t}\r\n}\r\n\r\nRequireEnsureItemDependency.Template = NullDependency.Template;\r\n\r\nmodule.exports = RequireEnsureItemDependency;\r\n","/home/travis/build/npmtest/node-npmtest-webpack/node_modules/webpack/lib/dependencies/RequireEnsureDependency.js":"/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\n\"use strict\";\r\nconst NullDependency = require(\"./NullDependency\");\r\nconst DepBlockHelpers = require(\"./DepBlockHelpers\");\r\n\r\nclass RequireEnsureDependency extends NullDependency {\r\n\tconstructor(block) {\r\n\t\tsuper();\r\n\t\tthis.block = block;\r\n\t}\r\n\r\n\tget type() {\r\n\t\treturn \"require.ensure\";\r\n\t}\r\n}\r\n\r\nRequireEnsureDependency.Template = class RequireEnsureDependencyTemplate {\r\n\tapply(dep, source, outputOptions, requestShortener) {\r\n\t\tconst depBlock = dep.block;\r\n\t\tconst wrapper = DepBlockHelpers.getLoadDepBlockWrapper(depBlock, outputOptions, requestShortener, \"require.ensure\");\r\n\t\tconst errorCallbackExists = depBlock.expr.arguments.length === 4 || (!depBlock.chunkName && depBlock.expr.arguments.length === 3);\r\n\t\tconst startBlock = wrapper[0] + \"(\";\r\n\t\tconst middleBlock = `).bind(null, __webpack_require__)${wrapper[1]}`;\r\n\t\tconst endBlock = `${middleBlock}__webpack_require__.oe${wrapper[2]}`;\r\n\t\tsource.replace(depBlock.expr.range[0], depBlock.expr.arguments[1].range[0] - 1, startBlock);\r\n\t\tif(errorCallbackExists) {\r\n\t\t\tsource.replace(depBlock.expr.arguments[1].range[1], depBlock.expr.arguments[2].range[0] - 1, middleBlock);\r\n\t\t\tsource.replace(depBlock.expr.arguments[2].range[1], depBlock.expr.range[1] - 1, wrapper[2]);\r\n\t\t} else {\r\n\t\t\tsource.replace(depBlock.expr.arguments[1].range[1], depBlock.expr.range[1] - 1, endBlock);\r\n\t\t}\r\n\t}\r\n};\r\n\r\nmodule.exports = RequireEnsureDependency;\r\n","/home/travis/build/npmtest/node-npmtest-webpack/node_modules/webpack/lib/dependencies/RequireEnsureDependenciesBlockParserPlugin.js":"/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\n\"use strict\";\r\n\r\nconst RequireEnsureDependenciesBlock = require(\"./RequireEnsureDependenciesBlock\");\r\nconst RequireEnsureItemDependency = require(\"./RequireEnsureItemDependency\");\r\nconst getFunctionExpression = require(\"./getFunctionExpression\");\r\n\r\nmodule.exports = class RequireEnsureDependenciesBlockParserPlugin {\r\n\tapply(parser) {\r\n\t\tparser.plugin(\"call require.ensure\", expr => {\r\n\t\t\tlet chunkName = null;\r\n\t\t\tlet chunkNameRange = null;\r\n\t\t\tlet errorExpressionArg = null;\r\n\t\t\tlet errorExpression = null;\r\n\t\t\tswitch(expr.arguments.length) {\r\n\t\t\t\tcase 4:\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tconst chunkNameExpr = parser.evaluateExpression(expr.arguments[3]);\r\n\t\t\t\t\t\tif(!chunkNameExpr.isString()) return;\r\n\t\t\t\t\t\tchunkNameRange = chunkNameExpr.range;\r\n\t\t\t\t\t\tchunkName = chunkNameExpr.string;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t// falls through\r\n\t\t\t\tcase 3:\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\terrorExpressionArg = expr.arguments[2];\r\n\t\t\t\t\t\terrorExpression = getFunctionExpression(errorExpressionArg);\r\n\r\n\t\t\t\t\t\tif(!errorExpression && !chunkName) {\r\n\t\t\t\t\t\t\tconst chunkNameExpr = parser.evaluateExpression(expr.arguments[2]);\r\n\t\t\t\t\t\t\tif(!chunkNameExpr.isString()) return;\r\n\t\t\t\t\t\t\tchunkNameRange = chunkNameExpr.range;\r\n\t\t\t\t\t\t\tchunkName = chunkNameExpr.string;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\t// falls through\r\n\t\t\t\tcase 2:\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tconst dependenciesExpr = parser.evaluateExpression(expr.arguments[0]);\r\n\t\t\t\t\t\tconst dependenciesItems = dependenciesExpr.isArray() ? dependenciesExpr.items : [dependenciesExpr];\r\n\t\t\t\t\t\tconst successExpressionArg = expr.arguments[1];\r\n\t\t\t\t\t\tconst successExpression = getFunctionExpression(successExpressionArg);\r\n\r\n\t\t\t\t\t\tif(successExpression) {\r\n\t\t\t\t\t\t\tparser.walkExpressions(successExpression.expressions);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif(errorExpression) {\r\n\t\t\t\t\t\t\tparser.walkExpressions(errorExpression.expressions);\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tconst dep = new RequireEnsureDependenciesBlock(expr,\r\n\t\t\t\t\t\t\tsuccessExpression ? successExpression.fn : successExpressionArg,\r\n\t\t\t\t\t\t\terrorExpression ? errorExpression.fn : errorExpressionArg,\r\n\t\t\t\t\t\t\tchunkName, chunkNameRange, parser.state.module, expr.loc);\r\n\t\t\t\t\t\tconst old = parser.state.current;\r\n\t\t\t\t\t\tparser.state.current = dep;\r\n\t\t\t\t\t\ttry {\r\n\t\t\t\t\t\t\tlet failed = false;\r\n\t\t\t\t\t\t\tparser.inScope([], () => {\r\n\t\t\t\t\t\t\t\tdependenciesItems.forEach(ee => {\r\n\t\t\t\t\t\t\t\t\tif(ee.isString()) {\r\n\t\t\t\t\t\t\t\t\t\tconst edep = new RequireEnsureItemDependency(ee.string, ee.range);\r\n\t\t\t\t\t\t\t\t\t\tedep.loc = dep.loc;\r\n\t\t\t\t\t\t\t\t\t\tdep.addDependency(edep);\r\n\t\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t\tfailed = true;\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\tif(failed) {\r\n\t\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tif(successExpression) {\r\n\t\t\t\t\t\t\t\tif(successExpression.fn.body.type === \"BlockStatement\")\r\n\t\t\t\t\t\t\t\t\tparser.walkStatement(successExpression.fn.body);\r\n\t\t\t\t\t\t\t\telse\r\n\t\t\t\t\t\t\t\t\tparser.walkExpression(successExpression.fn.body);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\told.addBlock(dep);\r\n\t\t\t\t\t\t} finally {\r\n\t\t\t\t\t\t\tparser.state.current = old;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif(!successExpression) {\r\n\t\t\t\t\t\t\tparser.walkExpression(successExpressionArg);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif(errorExpression) {\r\n\t\t\t\t\t\t\tif(errorExpression.fn.body.type === \"BlockStatement\")\r\n\t\t\t\t\t\t\t\tparser.walkStatement(errorExpression.fn.body);\r\n\t\t\t\t\t\t\telse\r\n\t\t\t\t\t\t\t\tparser.walkExpression(errorExpression.fn.body);\r\n\t\t\t\t\t\t} else if(errorExpressionArg) {\r\n\t\t\t\t\t\t\tparser.walkExpression(errorExpressionArg);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\treturn true;\r\n\t\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n};\r\n","/home/travis/build/npmtest/node-npmtest-webpack/node_modules/webpack/lib/dependencies/RequireEnsureDependenciesBlock.js":"/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\n\"use strict\";\r\nconst AsyncDependenciesBlock = require(\"../AsyncDependenciesBlock\");\r\nconst RequireEnsureDependency = require(\"./RequireEnsureDependency\");\r\n\r\nmodule.exports = class RequireEnsureDependenciesBlock extends AsyncDependenciesBlock {\r\n\tconstructor(expr, successExpression, errorExpression, chunkName, chunkNameRange, module, loc) {\r\n\t\tsuper(chunkName, module, loc);\r\n\t\tthis.expr = expr;\r\n\t\tconst successBodyRange = successExpression && successExpression.body && successExpression.body.range;\r\n\t\tconst errorBodyRange = errorExpression && errorExpression.body && errorExpression.body.range;\r\n\t\tthis.range = null;\r\n\t\tif(successBodyRange) {\r\n\t\t\tif(errorBodyRange) {\r\n\t\t\t\tthis.range = [successBodyRange[0] + 1, errorBodyRange[1] - 1];\r\n\t\t\t} else {\r\n\t\t\t\tthis.range = [successBodyRange[0] + 1, successBodyRange[1] - 1];\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis.chunkNameRange = chunkNameRange;\r\n\t\tconst dep = new RequireEnsureDependency(this);\r\n\t\tdep.loc = loc;\r\n\t\tthis.addDependency(dep);\r\n\t}\r\n};\r\n","/home/travis/build/npmtest/node-npmtest-webpack/node_modules/webpack/lib/dependencies/RequireIncludePlugin.js":"/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\n\"use strict\";\r\n\r\nconst RequireIncludeDependency = require(\"./RequireIncludeDependency\");\r\nconst RequireIncludeDependencyParserPlugin = require(\"./RequireIncludeDependencyParserPlugin\");\r\n\r\nconst ParserHelpers = require(\"../ParserHelpers\");\r\n\r\nclass RequireIncludePlugin {\r\n\r\n\tapply(compiler) {\r\n\t\tcompiler.plugin(\"compilation\", (compilation, params) => {\r\n\t\t\tconst normalModuleFactory = params.normalModuleFactory;\r\n\r\n\t\t\tcompilation.dependencyFactories.set(RequireIncludeDependency, normalModuleFactory);\r\n\t\t\tcompilation.dependencyTemplates.set(RequireIncludeDependency, new RequireIncludeDependency.Template());\r\n\r\n\t\t\tparams.normalModuleFactory.plugin(\"parser\", (parser, parserOptions) => {\r\n\r\n\t\t\t\tif(typeof parserOptions.requireInclude !== \"undefined\" && !parserOptions.requireInclude)\r\n\t\t\t\t\treturn;\r\n\r\n\t\t\t\tparser.apply(new RequireIncludeDependencyParserPlugin());\r\n\t\t\t\tparser.plugin(\"evaluate typeof require.include\", ParserHelpers.evaluateToString(\"function\"));\r\n\t\t\t\tparser.plugin(\"typeof require.include\", ParserHelpers.toConstantDependency(JSON.stringify(\"function\")));\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n}\r\nmodule.exports = RequireIncludePlugin;\r\n","/home/travis/build/npmtest/node-npmtest-webpack/node_modules/webpack/lib/dependencies/RequireIncludeDependency.js":"/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\n\"use strict\";\r\nconst ModuleDependency = require(\"./ModuleDependency\");\r\n\r\nclass RequireIncludeDependency extends ModuleDependency {\r\n\tconstructor(request, range) {\r\n\t\tsuper(request);\r\n\t\tthis.range = range;\r\n\t}\r\n\r\n\tget type() {\r\n\t\treturn \"require.include\";\r\n\t}\r\n}\r\n\r\nRequireIncludeDependency.Template = class RequireIncludeDependencyTemplate {\r\n\tapply(dep, source, outputOptions, requestShortener) {\r\n\t\tconst comment = this.getOptionalComment(outputOptions.pathinfo && dep.module, requestShortener.shorten(dep.request));\r\n\t\tsource.replace(dep.range[0], dep.range[1] - 1, `undefined${comment}`);\r\n\t}\r\n\r\n\tgetOptionalComment(shouldHaveComment, shortenedRequest) {\r\n\t\tif(shouldHaveComment) {\r\n\t\t\treturn \"\";\r\n\t\t}\r\n\t\treturn `/*! require.include ${shortenedRequest} */`;\r\n\t}\r\n};\r\n\r\nmodule.exports = RequireIncludeDependency;\r\n","/home/travis/build/npmtest/node-npmtest-webpack/node_modules/webpack/lib/dependencies/RequireIncludeDependencyParserPlugin.js":"/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\n\"use strict\";\r\n\r\nconst RequireIncludeDependency = require(\"./RequireIncludeDependency\");\r\n\r\nmodule.exports = class RequireIncludeDependencyParserPlugin {\r\n\tapply(parser) {\r\n\t\tparser.plugin(\"call require.include\", expr => {\r\n\t\t\tif(expr.arguments.length !== 1) return;\r\n\t\t\tconst param = parser.evaluateExpression(expr.arguments[0]);\r\n\t\t\tif(!param.isString()) return;\r\n\t\t\tconst dep = new RequireIncludeDependency(param.string, expr.range);\r\n\t\t\tdep.loc = expr.loc;\r\n\t\t\tparser.state.current.addDependency(dep);\r\n\t\t\treturn true;\r\n\t\t});\r\n\t}\r\n};\r\n","/home/travis/build/npmtest/node-npmtest-webpack/node_modules/webpack/lib/optimize/EnsureChunkConditionsPlugin.js":"/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\n\"use strict\";\r\n\r\nclass EnsureChunkConditionsPlugin {\r\n\r\n\tapply(compiler) {\r\n\t\tcompiler.plugin(\"compilation\", (compilation) => {\r\n\t\t\tcompilation.plugin([\"optimize-chunks-basic\", \"optimize-extracted-chunks-basic\"], (chunks) => {\r\n\t\t\t\tlet changed = false;\r\n\t\t\t\tchunks.forEach((chunk) => {\r\n\t\t\t\t\tchunk.modules.slice().forEach((module) => {\r\n\t\t\t\t\t\tif(!module.chunkCondition) return;\r\n\t\t\t\t\t\tif(!module.chunkCondition(chunk)) {\r\n\t\t\t\t\t\t\tconst usedChunks = module._EnsureChunkConditionsPlugin_usedChunks = (module._EnsureChunkConditionsPlugin_usedChunks || []).concat(chunk);\r\n\t\t\t\t\t\t\tconst newChunks = [];\r\n\t\t\t\t\t\t\tchunk.parents.forEach((parent) => {\r\n\t\t\t\t\t\t\t\tif(usedChunks.indexOf(parent) < 0) {\r\n\t\t\t\t\t\t\t\t\tparent.addModule(module);\r\n\t\t\t\t\t\t\t\t\tnewChunks.push(parent);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\tmodule.rewriteChunkInReasons(chunk, newChunks);\r\n\t\t\t\t\t\t\tchunk.removeModule(module);\r\n\t\t\t\t\t\t\tchanged = true;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\t});\r\n\t\t\t\tif(changed) return true;\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n}\r\nmodule.exports = EnsureChunkConditionsPlugin;\r\n","/home/travis/build/npmtest/node-npmtest-webpack/node_modules/webpack/lib/optimize/RemoveParentModulesPlugin.js":"/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\n\"use strict\";\r\n\r\nfunction chunkContainsModule(chunk, module) {\r\n\tconst chunks = module.chunks;\r\n\tconst modules = chunk.modules;\r\n\tif(chunks.length < modules.length) {\r\n\t\treturn chunks.indexOf(chunk) >= 0;\r\n\t} else {\r\n\t\treturn modules.indexOf(module) >= 0;\r\n\t}\r\n}\r\n\r\nfunction hasModule(chunk, module, checkedChunks) {\r\n\tif(chunkContainsModule(chunk, module)) return [chunk];\r\n\tif(chunk.parents.length === 0) return false;\r\n\treturn allHaveModule(chunk.parents.filter((c) => {\r\n\t\treturn checkedChunks.indexOf(c) < 0;\r\n\t}), module, checkedChunks);\r\n}\r\n\r\nfunction allHaveModule(someChunks, module, checkedChunks) {\r\n\tif(!checkedChunks) checkedChunks = [];\r\n\tvar chunks = [];\r\n\tfor(var i = 0; i < someChunks.length; i++) {\r\n\t\tcheckedChunks.push(someChunks[i]);\r\n\t\tvar subChunks = hasModule(someChunks[i], module, checkedChunks);\r\n\t\tif(!subChunks) return false;\r\n\r\n\t\tfor(var index = 0; index < subChunks.length; index++) {\r\n\t\t\tvar item = subChunks[index];\r\n\r\n\t\t\tif(!chunks.length || chunks.indexOf(item) < 0) {\r\n\t\t\t\tchunks.push(item);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\treturn chunks;\r\n}\r\n\r\nfunction debugIds(chunks) {\r\n\tvar list = [];\r\n\tfor(var i = 0; i < chunks.length; i++) {\r\n\t\tvar debugId = chunks[i].debugId;\r\n\r\n\t\tif(typeof debugId !== \"number\") {\r\n\t\t\treturn \"no\";\r\n\t\t}\r\n\r\n\t\tlist.push(debugId);\r\n\t}\r\n\r\n\tlist.sort();\r\n\treturn list.join(\",\");\r\n}\r\n\r\nclass RemoveParentModulesPlugin {\r\n\tapply(compiler) {\r\n\t\tcompiler.plugin(\"compilation\", (compilation) => {\r\n\t\t\tcompilation.plugin([\"optimize-chunks-basic\", \"optimize-extracted-chunks-basic\"], (chunks) => {\r\n\t\t\t\tfor(var index = 0; index < chunks.length; index++) {\r\n\t\t\t\t\tvar chunk = chunks[index];\r\n\t\t\t\t\tif(chunk.parents.length === 0) continue;\r\n\r\n\t\t\t\t\t// TODO consider Map when performance has improved https://gist.github.com/sokra/b36098368da7b8f6792fd7c85fca6311\r\n\t\t\t\t\tvar cache = Object.create(null);\r\n\t\t\t\t\tvar modules = chunk.modules.slice();\r\n\t\t\t\t\tfor(var i = 0; i < modules.length; i++) {\r\n\t\t\t\t\t\tvar module = modules[i];\r\n\r\n\t\t\t\t\t\tvar dId = debugIds(module.chunks);\r\n\t\t\t\t\t\tvar parentChunksWithModule;\r\n\t\t\t\t\t\tif((dId in cache) && dId !== \"no\") {\r\n\t\t\t\t\t\t\tparentChunksWithModule = cache[dId];\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tparentChunksWithModule = cache[dId] = allHaveModule(chunk.parents, module);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif(parentChunksWithModule) {\r\n\t\t\t\t\t\t\tmodule.rewriteChunkInReasons(chunk, parentChunksWithModule);\r\n\t\t\t\t\t\t\tchunk.removeModule(module);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n}\r\nmodule.exports = RemoveParentModulesPlugin;\r\n","/home/travis/build/npmtest/node-npmtest-webpack/node_modules/webpack/lib/optimize/RemoveEmptyChunksPlugin.js":"/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\n\"use strict\";\r\n\r\nclass RemoveEmptyChunksPlugin {\r\n\r\n\tapply(compiler) {\r\n\t\tcompiler.plugin(\"compilation\", (compilation) => {\r\n\t\t\tcompilation.plugin([\"optimize-chunks-basic\", \"optimize-extracted-chunks-basic\"], (chunks) => {\r\n\t\t\t\tchunks.filter((chunk) => chunk.isEmpty() && !chunk.hasRuntime() && !chunk.hasEntryModule())\r\n\t\t\t\t\t.forEach((chunk) => {\r\n\t\t\t\t\t\tchunk.remove(\"empty\");\r\n\t\t\t\t\t\tchunks.splice(chunks.indexOf(chunk), 1);\r\n\t\t\t\t\t});\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n}\r\nmodule.exports = RemoveEmptyChunksPlugin;\r\n","/home/travis/build/npmtest/node-npmtest-webpack/node_modules/webpack/lib/optimize/MergeDuplicateChunksPlugin.js":"/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\n\"use strict\";\r\n\r\nfunction getChunkIdentifier(chunk) {\r\n\treturn chunk.modules.map((m) => {\r\n\t\treturn m.identifier();\r\n\t}).sort().join(\", \");\r\n}\r\n\r\nclass MergeDuplicateChunksPlugin {\r\n\r\n\tapply(compiler) {\r\n\t\tcompiler.plugin(\"compilation\", (compilation) => {\r\n\t\t\tcompilation.plugin(\"optimize-chunks-basic\", (chunks) => {\r\n\t\t\t\tconst map = {};\r\n\t\t\t\tchunks.slice().forEach((chunk) => {\r\n\t\t\t\t\tif(chunk.hasRuntime() || chunk.hasEntryModule()) return;\r\n\t\t\t\t\tconst ident = getChunkIdentifier(chunk);\r\n\t\t\t\t\tif(map[ident]) {\r\n\t\t\t\t\t\tif(map[ident].integrate(chunk, \"duplicate\"))\r\n\t\t\t\t\t\t\tchunks.splice(chunks.indexOf(chunk), 1);\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tmap[ident] = chunk;\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n}\r\nmodule.exports = MergeDuplicateChunksPlugin;\r\n","/home/travis/build/npmtest/node-npmtest-webpack/node_modules/webpack/lib/optimize/FlagIncludedChunksPlugin.js":"/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\n\"use strict\";\r\n\r\nclass FlagIncludedChunksPlugin {\r\n\r\n\tapply(compiler) {\r\n\t\tcompiler.plugin(\"compilation\", (compilation) => {\r\n\t\t\tcompilation.plugin(\"optimize-chunk-ids\", (chunks) => {\r\n\t\t\t\tchunks.forEach((chunkA) => {\r\n\t\t\t\t\tchunks.forEach((chunkB) => {\r\n\t\t\t\t\t\t// as we iterate the same iterables twice\r\n\t\t\t\t\t\t// skip if we find ourselves\r\n\t\t\t\t\t\tif(chunkA === chunkB) return;\r\n\r\n\t\t\t\t\t\t// instead of swapping A and B just bail\r\n\t\t\t\t\t\t// as we loop twice the current A will be B and B then A\r\n\t\t\t\t\t\tif(chunkA.modules.length < chunkB.modules.length) return;\r\n\r\n\t\t\t\t\t\tif(chunkB.modules.length === 0) return;\r\n\r\n\t\t\t\t\t\t// is chunkB in chunkA?\r\n\t\t\t\t\t\tfor(let i = 0; i < chunkB.modules.length; i++) {\r\n\t\t\t\t\t\t\tif(chunkA.modules.indexOf(chunkB.modules[i]) < 0) return;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tchunkA.ids.push(chunkB.id);\r\n\t\t\t\t\t});\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n}\r\nmodule.exports = FlagIncludedChunksPlugin;\r\n","/home/travis/build/npmtest/node-npmtest-webpack/node_modules/webpack/lib/optimize/OccurrenceOrderPlugin.js":"/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\n\"use strict\";\r\n\r\nclass OccurrenceOrderPlugin {\r\n\tconstructor(preferEntry) {\r\n\t\tif(preferEntry !== undefined && typeof preferEntry !== \"boolean\") {\r\n\t\t\tthrow new Error(\"Argument should be a boolean.\\nFor more info on this plugin, see https://webpack.js.org/plugins/\");\r\n\t\t}\r\n\t\tthis.preferEntry = preferEntry;\r\n\t}\r\n\tapply(compiler) {\r\n\t\tconst preferEntry = this.preferEntry;\r\n\t\tcompiler.plugin(\"compilation\", (compilation) => {\r\n\t\t\tcompilation.plugin(\"optimize-module-order\", (modules) => {\r\n\t\t\t\tfunction entryChunks(m) {\r\n\t\t\t\t\treturn m.chunks.map((c) => {\r\n\t\t\t\t\t\tconst sum = (c.isInitial() ? 1 : 0) + (c.entryModule === m ? 1 : 0);\r\n\t\t\t\t\t\treturn sum;\r\n\t\t\t\t\t}).reduce((a, b) => {\r\n\t\t\t\t\t\treturn a + b;\r\n\t\t\t\t\t}, 0);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tfunction occursInEntry(m) {\r\n\t\t\t\t\tif(typeof m.__OccurenceOrderPlugin_occursInEntry === \"number\") return m.__OccurenceOrderPlugin_occursInEntry;\r\n\t\t\t\t\tconst result = m.reasons.map((r) => {\r\n\t\t\t\t\t\tif(!r.module) return 0;\r\n\t\t\t\t\t\treturn entryChunks(r.module);\r\n\t\t\t\t\t}).reduce((a, b) => {\r\n\t\t\t\t\t\treturn a + b;\r\n\t\t\t\t\t}, 0) + entryChunks(m);\r\n\t\t\t\t\treturn m.__OccurenceOrderPlugin_occursInEntry = result;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tfunction occurs(m) {\r\n\t\t\t\t\tif(typeof m.__OccurenceOrderPlugin_occurs === \"number\") return m.__OccurenceOrderPlugin_occurs;\r\n\t\t\t\t\tconst result = m.reasons.map((r) => {\r\n\t\t\t\t\t\tif(!r.module) return 0;\r\n\t\t\t\t\t\treturn r.module.chunks.length;\r\n\t\t\t\t\t}).reduce((a, b) => {\r\n\t\t\t\t\t\treturn a + b;\r\n\t\t\t\t\t}, 0) + m.chunks.length + m.chunks.filter((c) => {\r\n\t\t\t\t\t\treturn c.entryModule === m;\r\n\t\t\t\t\t}).length;\r\n\t\t\t\t\treturn m.__OccurenceOrderPlugin_occurs = result;\r\n\t\t\t\t}\r\n\t\t\t\tmodules.sort((a, b) => {\r\n\t\t\t\t\tif(preferEntry) {\r\n\t\t\t\t\t\tconst aEntryOccurs = occursInEntry(a);\r\n\t\t\t\t\t\tconst bEntryOccurs = occursInEntry(b);\r\n\t\t\t\t\t\tif(aEntryOccurs > bEntryOccurs) return -1;\r\n\t\t\t\t\t\tif(aEntryOccurs < bEntryOccurs) return 1;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tconst aOccurs = occurs(a);\r\n\t\t\t\t\tconst bOccurs = occurs(b);\r\n\t\t\t\t\tif(aOccurs > bOccurs) return -1;\r\n\t\t\t\t\tif(aOccurs < bOccurs) return 1;\r\n\t\t\t\t\tif(a.identifier() > b.identifier()) return 1;\r\n\t\t\t\t\tif(a.identifier() < b.identifier()) return -1;\r\n\t\t\t\t\treturn 0;\r\n\t\t\t\t});\r\n\t\t\t\t// TODO refactor to Map\r\n\t\t\t\tmodules.forEach((m) => {\r\n\t\t\t\t\tm.__OccurenceOrderPlugin_occursInEntry = undefined;\r\n\t\t\t\t\tm.__OccurenceOrderPlugin_occurs = undefined;\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t\tcompilation.plugin(\"optimize-chunk-order\", (chunks) => {\r\n\t\t\t\tfunction occursInEntry(c) {\r\n\t\t\t\t\tif(typeof c.__OccurenceOrderPlugin_occursInEntry === \"number\") return c.__OccurenceOrderPlugin_occursInEntry;\r\n\t\t\t\t\tconst result = c.parents.filter((p) => {\r\n\t\t\t\t\t\treturn p.isInitial();\r\n\t\t\t\t\t}).length;\r\n\t\t\t\t\treturn c.__OccurenceOrderPlugin_occursInEntry = result;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tfunction occurs(c) {\r\n\t\t\t\t\treturn c.blocks.length;\r\n\t\t\t\t}\r\n\t\t\t\tchunks.forEach((c) => {\r\n\t\t\t\t\tc.modules.sort((a, b) => {\r\n\t\t\t\t\t\tif(a.identifier() > b.identifier()) return 1;\r\n\t\t\t\t\t\tif(a.identifier() < b.identifier()) return -1;\r\n\t\t\t\t\t\treturn 0;\r\n\t\t\t\t\t});\r\n\t\t\t\t});\r\n\t\t\t\tchunks.sort((a, b) => {\r\n\t\t\t\t\tconst aEntryOccurs = occursInEntry(a);\r\n\t\t\t\t\tconst bEntryOccurs = occursInEntry(b);\r\n\t\t\t\t\tif(aEntryOccurs > bEntryOccurs) return -1;\r\n\t\t\t\t\tif(aEntryOccurs < bEntryOccurs) return 1;\r\n\t\t\t\t\tconst aOccurs = occurs(a);\r\n\t\t\t\t\tconst bOccurs = occurs(b);\r\n\t\t\t\t\tif(aOccurs > bOccurs) return -1;\r\n\t\t\t\t\tif(aOccurs < bOccurs) return 1;\r\n\t\t\t\t\tif(a.modules.length > b.modules.length) return -1;\r\n\t\t\t\t\tif(a.modules.length < b.modules.length) return 1;\r\n\t\t\t\t\tfor(let i = 0; i < a.modules.length; i++) {\r\n\t\t\t\t\t\tif(a.modules[i].identifier() > b.modules[i].identifier()) return -1;\r\n\t\t\t\t\t\tif(a.modules[i].identifier() < b.modules[i].identifier()) return 1;\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn 0;\r\n\t\t\t\t});\r\n\t\t\t\t// TODO refactor to Map\r\n\t\t\t\tchunks.forEach((c) => {\r\n\t\t\t\t\tc.__OccurenceOrderPlugin_occursInEntry = undefined;\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n}\r\n\r\nmodule.exports = OccurrenceOrderPlugin;\r\n","/home/travis/build/npmtest/node-npmtest-webpack/node_modules/webpack/lib/FlagDependencyUsagePlugin.js":"/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\n\"use strict\";\r\n\r\nclass FlagDependencyUsagePlugin {\r\n\tapply(compiler) {\r\n\t\tcompiler.plugin(\"compilation\", compilation => {\r\n\t\t\tcompilation.plugin(\"optimize-modules-advanced\", modules => {\r\n\r\n\t\t\t\tmodules.forEach(module => module.used = false);\r\n\r\n\t\t\t\tconst queue = [];\r\n\t\t\t\tcompilation.chunks.forEach(chunk => {\r\n\t\t\t\t\tif(chunk.entryModule) {\r\n\t\t\t\t\t\tprocessModule(chunk.entryModule, true);\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\r\n\t\t\t\twhile(queue.length) {\r\n\t\t\t\t\tconst queueItem = queue.pop();\r\n\t\t\t\t\tprocessDependenciesBlock(queueItem[0], queueItem[1]);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tfunction processModule(module, usedExports) {\r\n\t\t\t\t\tmodule.used = true;\r\n\t\t\t\t\tif(module.usedExports === true)\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\telse if(usedExports === true)\r\n\t\t\t\t\t\tmodule.usedExports = true;\r\n\t\t\t\t\telse if(Array.isArray(usedExports)) {\r\n\t\t\t\t\t\tvar old = module.usedExports ? module.usedExports.length : -1;\r\n\t\t\t\t\t\tmodule.usedExports = addToSet(module.usedExports || [], usedExports);\r\n\t\t\t\t\t\tif(module.usedExports.length === old)\r\n\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t} else if(Array.isArray(module.usedExports))\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\telse\r\n\t\t\t\t\t\tmodule.usedExports = false;\r\n\r\n\t\t\t\t\tqueue.push([module, module.usedExports]);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tfunction processDependenciesBlock(depBlock, usedExports) {\r\n\t\t\t\t\tdepBlock.dependencies.forEach(dep => processDependency(dep));\r\n\t\t\t\t\tdepBlock.variables.forEach(variable => variable.dependencies.forEach(dep => processDependency(dep)));\r\n\t\t\t\t\tdepBlock.blocks.forEach(block => queue.push([block, usedExports]));\r\n\t\t\t\t}\r\n\r\n\t\t\t\tfunction processDependency(dep) {\r\n\t\t\t\t\tconst reference = dep.getReference && dep.getReference();\r\n\t\t\t\t\tif(!reference) return;\r\n\t\t\t\t\tconst module = reference.module;\r\n\t\t\t\t\tconst importedNames = reference.importedNames;\r\n\t\t\t\t\tconst oldUsed = module.used;\r\n\t\t\t\t\tconst oldUsedExports = module.usedExports;\r\n\t\t\t\t\tif(!oldUsed || (importedNames && (!oldUsedExports || !isSubset(oldUsedExports, importedNames)))) {\r\n\t\t\t\t\t\tprocessModule(module, importedNames);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t});\r\n\r\n\t\t\tfunction addToSet(a, b) {\r\n\t\t\t\tb.forEach(item => {\r\n\t\t\t\t\tif(a.indexOf(item) < 0)\r\n\t\t\t\t\t\ta.push(item);\r\n\t\t\t\t});\r\n\t\t\t\treturn a;\r\n\t\t\t}\r\n\r\n\t\t\tfunction isSubset(biggerSet, subset) {\r\n\t\t\t\tif(biggerSet === true) return true;\r\n\t\t\t\tif(subset === true) return false;\r\n\t\t\t\treturn subset.every(item => biggerSet.indexOf(item) >= 0);\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n}\r\nmodule.exports = FlagDependencyUsagePlugin;\r\n","/home/travis/build/npmtest/node-npmtest-webpack/node_modules/webpack/lib/FlagDependencyExportsPlugin.js":"/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\n\"use strict\";\r\n\r\nclass FlagDependencyExportsPlugin {\r\n\r\n\tapply(compiler) {\r\n\t\tcompiler.plugin(\"compilation\", (compilation) => {\r\n\t\t\tcompilation.plugin(\"finish-modules\", (modules) => {\r\n\t\t\t\tconst dependencies = Object.create(null);\r\n\r\n\t\t\t\tlet module;\r\n\t\t\t\tlet moduleWithExports;\r\n\t\t\t\tlet moduleProvidedExports;\r\n\t\t\t\tconst queue = modules.filter((m) => !m.providedExports);\r\n\t\t\t\tfor(let i = 0; i < queue.length; i++) {\r\n\t\t\t\t\tmodule = queue[i];\r\n\r\n\t\t\t\t\tif(module.providedExports !== true) {\r\n\t\t\t\t\t\tmoduleWithExports = false;\r\n\t\t\t\t\t\tmoduleProvidedExports = Array.isArray(module.providedExports) ? new Set(module.providedExports) : new Set();\r\n\t\t\t\t\t\tprocessDependenciesBlock(module);\r\n\t\t\t\t\t\tif(!moduleWithExports) {\r\n\t\t\t\t\t\t\tmodule.providedExports = true;\r\n\t\t\t\t\t\t\tnotifyDependencies();\r\n\t\t\t\t\t\t} else if(module.providedExports !== true) {\r\n\t\t\t\t\t\t\tmodule.providedExports = Array.from(moduleProvidedExports);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tfunction processDependenciesBlock(depBlock) {\r\n\t\t\t\t\tdepBlock.dependencies.forEach((dep) => processDependency(dep));\r\n\t\t\t\t\tdepBlock.variables.forEach((variable) => {\r\n\t\t\t\t\t\tvariable.dependencies.forEach((dep) => processDependency(dep));\r\n\t\t\t\t\t});\r\n\t\t\t\t\tdepBlock.blocks.forEach(processDependenciesBlock);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tfunction processDependency(dep) {\r\n\t\t\t\t\tconst exportDesc = dep.getExports && dep.getExports();\r\n\t\t\t\t\tif(!exportDesc) return;\r\n\t\t\t\t\tmoduleWithExports = true;\r\n\t\t\t\t\tconst exports = exportDesc.exports;\r\n\t\t\t\t\tconst exportDeps = exportDesc.dependencies;\r\n\t\t\t\t\tif(exportDeps) {\r\n\t\t\t\t\t\texportDeps.forEach((dep) => {\r\n\t\t\t\t\t\t\tconst depIdent = dep.identifier();\r\n\t\t\t\t\t\t\t// if this was not yet initialized\r\n\t\t\t\t\t\t\t// initialize it as an array containing the module and stop\r\n\t\t\t\t\t\t\tconst array = dependencies[depIdent];\r\n\t\t\t\t\t\t\tif(!array) {\r\n\t\t\t\t\t\t\t\tdependencies[depIdent] = [module];\r\n\t\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t// check if this module is known\r\n\t\t\t\t\t\t\t// if not, add it to the dependencies for this identifier\r\n\t\t\t\t\t\t\tif(array.indexOf(module) < 0)\r\n\t\t\t\t\t\t\t\tarray.push(module);\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\t\t\t\t\tlet changed = false;\r\n\t\t\t\t\tif(module.providedExports !== true) {\r\n\t\t\t\t\t\tif(exports === true) {\r\n\t\t\t\t\t\t\tmodule.providedExports = true;\r\n\t\t\t\t\t\t\tchanged = true;\r\n\t\t\t\t\t\t} else if(Array.isArray(exports)) {\r\n\t\t\t\t\t\t\tchanged = addToSet(moduleProvidedExports, exports);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif(changed) {\r\n\t\t\t\t\t\tnotifyDependencies();\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tfunction notifyDependencies() {\r\n\t\t\t\t\tconst deps = dependencies[module.identifier()];\r\n\t\t\t\t\tif(deps) {\r\n\t\t\t\t\t\tdeps.forEach((dep) => queue.push(dep));\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\tfunction addToSet(a, b) {\r\n\t\t\t\tlet changed = false;\r\n\t\t\t\tb.forEach((item) => {\r\n\t\t\t\t\tif(!a.has(item)) {\r\n\t\t\t\t\t\ta.add(item);\r\n\t\t\t\t\t\tchanged = true;\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t\treturn changed;\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n}\r\n\r\nmodule.exports = FlagDependencyExportsPlugin;\r\n","/home/travis/build/npmtest/node-npmtest-webpack/node_modules/webpack/lib/performance/SizeLimitsPlugin.js":"/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Sean Larkin @thelarkinn\r\n*/\r\n\"use strict\";\r\nconst EntrypointsOverSizeLimitWarning = require(\"./EntrypointsOverSizeLimitWarning\");\r\nconst AssetsOverSizeLimitWarning = require(\"./AssetsOverSizeLimitWarning\");\r\nconst NoAsyncChunksWarning = require(\"./NoAsyncChunksWarning\");\r\n\r\nmodule.exports = class SizeLimitsPlugin {\r\n\tconstructor(options) {\r\n\t\tthis.hints = options.hints;\r\n\t\tthis.maxAssetSize = options.maxAssetSize;\r\n\t\tthis.maxEntrypointSize = options.maxEntrypointSize;\r\n\t\tthis.assetFilter = options.assetFilter;\r\n\t}\r\n\tapply(compiler) {\r\n\t\tconst entrypointSizeLimit = this.maxEntrypointSize;\r\n\t\tconst assetSizeLimit = this.maxAssetSize;\r\n\t\tconst hints = this.hints;\r\n\t\tconst assetFilter = this.assetFilter || (asset => !(/\\.map$/.test(asset)));\r\n\r\n\t\tcompiler.plugin(\"after-emit\", (compilation, callback) => {\r\n\t\t\tconst warnings = [];\r\n\r\n\t\t\tconst getEntrypointSize = entrypoint =>\r\n\t\t\t\tentrypoint.getFiles()\r\n\t\t\t\t.filter(assetFilter)\r\n\t\t\t\t.map(file => compilation.assets[file])\r\n\t\t\t\t.filter(Boolean)\r\n\t\t\t\t.map(asset => asset.size())\r\n\t\t\t\t.reduce((currentSize, nextSize) => currentSize + nextSize, 0);\r\n\r\n\t\t\tconst assetsOverSizeLimit = [];\r\n\t\t\tObject.keys(compilation.assets)\r\n\t\t\t\t.filter(assetFilter)\r\n\t\t\t\t.forEach(assetName => {\r\n\t\t\t\t\tconst asset = compilation.assets[assetName];\r\n\t\t\t\t\tconst size = asset.size();\r\n\r\n\t\t\t\t\tif(size > assetSizeLimit) {\r\n\t\t\t\t\t\tassetsOverSizeLimit.push({\r\n\t\t\t\t\t\t\tname: assetName,\r\n\t\t\t\t\t\t\tsize: size,\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t\tasset.isOverSizeLimit = true;\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\r\n\t\t\tconst entrypointsOverLimit = [];\r\n\t\t\tObject.keys(compilation.entrypoints)\r\n\t\t\t\t.forEach(key => {\r\n\t\t\t\t\tconst entry = compilation.entrypoints[key];\r\n\t\t\t\t\tconst size = getEntrypointSize(entry, compilation);\r\n\r\n\t\t\t\t\tif(size > entrypointSizeLimit) {\r\n\t\t\t\t\t\tentrypointsOverLimit.push({\r\n\t\t\t\t\t\t\tname: key,\r\n\t\t\t\t\t\t\tsize: size,\r\n\t\t\t\t\t\t\tfiles: entry.getFiles().filter(assetFilter)\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t\tentry.isOverSizeLimit = true;\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\r\n\t\t\tif(hints) {\r\n\t\t\t\t// 1. Individual Chunk: Size < 250kb\r\n\t\t\t\t// 2. Collective Initial Chunks [entrypoint] (Each Set?): Size < 250kb\r\n\t\t\t\t// 3. No Async Chunks\r\n\t\t\t\t// if !1, then 2, if !2 return\r\n\t\t\t\tif(assetsOverSizeLimit.length > 0) {\r\n\t\t\t\t\twarnings.push(\r\n\t\t\t\t\t\tnew AssetsOverSizeLimitWarning(\r\n\t\t\t\t\t\t\tassetsOverSizeLimit,\r\n\t\t\t\t\t\t\tassetSizeLimit));\r\n\t\t\t\t}\r\n\t\t\t\tif(entrypointsOverLimit.length > 0) {\r\n\t\t\t\t\twarnings.push(\r\n\t\t\t\t\t\tnew EntrypointsOverSizeLimitWarning(\r\n\t\t\t\t\t\t\tentrypointsOverLimit,\r\n\t\t\t\t\t\t\tentrypointSizeLimit));\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif(warnings.length > 0) {\r\n\t\t\t\t\tconst hasAsyncChunks = compilation.chunks.filter(chunk => !chunk.isInitial()).length > 0;\r\n\r\n\t\t\t\t\tif(!hasAsyncChunks) {\r\n\t\t\t\t\t\twarnings.push(new NoAsyncChunksWarning());\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif(hints === \"error\") {\r\n\t\t\t\t\t\tArray.prototype.push.apply(compilation.errors, warnings);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tArray.prototype.push.apply(compilation.warnings, warnings);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tcallback();\r\n\t\t});\r\n\t}\r\n};\r\n","/home/travis/build/npmtest/node-npmtest-webpack/node_modules/webpack/lib/performance/EntrypointsOverSizeLimitWarning.js":"/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Sean Larkin @thelarkinn\r\n*/\r\n\"use strict\";\r\n\r\nconst WebpackError = require(\"../WebpackError\");\r\nconst SizeFormatHelpers = require(\"../SizeFormatHelpers\");\r\n\r\nmodule.exports = class EntrypointsOverSizeLimitWarning extends WebpackError {\r\n\tconstructor(entrypoints, entrypointLimit) {\r\n\t\tsuper();\r\n\r\n\t\tthis.name = \"EntrypointsOverSizeLimitWarning\";\r\n\t\tthis.entrypoints = entrypoints;\r\n\t\tconst entrypointList = this.entrypoints.map(entrypoint => `\\n  ${\r\n\t\t\tentrypoint.name\r\n\t\t} (${\r\n\t\t\tSizeFormatHelpers.formatSize(entrypoint.size)\r\n\t\t})\\n${\r\n\t\t\tentrypoint.files.map(asset => `      ${asset}`).join(\"\\n\")\r\n\t\t}`).join(\"\");\r\n\t\tthis.message = `entrypoint size limit: The following entrypoint(s) combined asset size exceeds the recommended limit (${SizeFormatHelpers.formatSize(entrypointLimit)}). This can impact web performance.\r\nEntrypoints:${entrypointList}\\n`;\r\n\r\n\t\tError.captureStackTrace(this, this.constructor);\r\n\t}\r\n};\r\n","/home/travis/build/npmtest/node-npmtest-webpack/node_modules/webpack/lib/performance/AssetsOverSizeLimitWarning.js":"/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Sean Larkin @thelarkinn\r\n*/\r\n\"use strict\";\r\n\r\nconst WebpackError = require(\"../WebpackError\");\r\nconst SizeFormatHelpers = require(\"../SizeFormatHelpers\");\r\n\r\nmodule.exports = class AssetsOverSizeLimitWarning extends WebpackError {\r\n\tconstructor(assetsOverSizeLimit, assetLimit) {\r\n\t\tsuper();\r\n\r\n\t\tthis.name = \"AssetsOverSizeLimitWarning\";\r\n\t\tthis.assets = assetsOverSizeLimit;\r\n\t\tconst assetLists = this.assets.map(asset => `\\n  ${asset.name} (${SizeFormatHelpers.formatSize(asset.size)})`).join(\"\");\r\n\t\tthis.message = `asset size limit: The following asset(s) exceed the recommended size limit (${SizeFormatHelpers.formatSize(assetLimit)}).\r\nThis can impact web performance.\r\nAssets: ${assetLists}`;\r\n\r\n\t\tError.captureStackTrace(this, this.constructor);\r\n\t}\r\n};\r\n","/home/travis/build/npmtest/node-npmtest-webpack/node_modules/webpack/lib/performance/NoAsyncChunksWarning.js":"/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Sean Larkin @thelarkinn\r\n*/\r\n\"use strict\";\r\n\r\nconst WebpackError = require(\"../WebpackError\");\r\n\r\nmodule.exports = class NoAsyncChunksWarning extends WebpackError {\r\n\tconstructor() {\r\n\t\tsuper();\r\n\r\n\t\tthis.name = \"NoAsyncChunksWarning\";\r\n\t\tthis.message = \"webpack performance recommendations: \\n\" +\r\n\t\t\t\"You can limit the size of your bundles by using import() or require.ensure to lazy load some parts of your application.\\n\" +\r\n\t\t\t\"For more info visit https://webpack.js.org/guides/code-splitting/\";\r\n\r\n\t\tError.captureStackTrace(this, this.constructor);\r\n\t}\r\n};\r\n","/home/travis/build/npmtest/node-npmtest-webpack/node_modules/webpack/lib/WebpackOptionsDefaulter.js":"/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\n\"use strict\";\r\n\r\nconst OptionsDefaulter = require(\"./OptionsDefaulter\");\r\nconst Template = require(\"./Template\");\r\n\r\nclass WebpackOptionsDefaulter extends OptionsDefaulter {\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.set(\"devtool\", false);\r\n\t\tthis.set(\"cache\", true);\r\n\r\n\t\tthis.set(\"context\", process.cwd());\r\n\t\tthis.set(\"target\", \"web\");\r\n\r\n\t\tthis.set(\"module.unknownContextRequest\", \".\");\r\n\t\tthis.set(\"module.unknownContextRegExp\", false);\r\n\t\tthis.set(\"module.unknownContextRecursive\", true);\r\n\t\tthis.set(\"module.unknownContextCritical\", true);\r\n\t\tthis.set(\"module.exprContextRequest\", \".\");\r\n\t\tthis.set(\"module.exprContextRegExp\", false);\r\n\t\tthis.set(\"module.exprContextRecursive\", true);\r\n\t\tthis.set(\"module.exprContextCritical\", true);\r\n\t\tthis.set(\"module.wrappedContextRegExp\", /.*/);\r\n\t\tthis.set(\"module.wrappedContextRecursive\", true);\r\n\t\tthis.set(\"module.wrappedContextCritical\", false);\r\n\t\tthis.set(\"module.strictExportPresence\", false);\r\n\r\n\t\tthis.set(\"module.unsafeCache\", true);\r\n\r\n\t\tthis.set(\"output\", \"call\", (value, options) => {\r\n\t\t\tif(typeof value === \"string\") {\r\n\t\t\t\treturn {\r\n\t\t\t\t\tfilename: value\r\n\t\t\t\t};\r\n\t\t\t} else if(typeof value !== \"object\") {\r\n\t\t\t\treturn {};\r\n\t\t\t} else {\r\n\t\t\t\treturn value;\r\n\t\t\t}\r\n\t\t});\r\n\t\tthis.set(\"output.filename\", \"[name].js\");\r\n\t\tthis.set(\"output.chunkFilename\", \"make\", (options) => {\r\n\t\t\tconst filename = options.output.filename;\r\n\t\t\treturn filename.indexOf(\"[name]\") >= 0 ? filename.replace(\"[name]\", \"[id]\") : \"[id].\" + filename;\r\n\t\t});\r\n\t\tthis.set(\"output.library\", \"\");\r\n\t\tthis.set(\"output.hotUpdateFunction\", \"make\", (options) => {\r\n\t\t\treturn Template.toIdentifier(\"webpackHotUpdate\" + options.output.library);\r\n\t\t});\r\n\t\tthis.set(\"output.jsonpFunction\", \"make\", (options) => {\r\n\t\t\treturn Template.toIdentifier(\"webpackJsonp\" + options.output.library);\r\n\t\t});\r\n\t\tthis.set(\"output.libraryTarget\", \"var\");\r\n\t\tthis.set(\"output.path\", process.cwd());\r\n\t\tthis.set(\"output.sourceMapFilename\", \"[file].map[query]\");\r\n\t\tthis.set(\"output.hotUpdateChunkFilename\", \"[id].[hash].hot-update.js\");\r\n\t\tthis.set(\"output.hotUpdateMainFilename\", \"[hash].hot-update.json\");\r\n\t\tthis.set(\"output.crossOriginLoading\", false);\r\n\t\tthis.set(\"output.hashFunction\", \"md5\");\r\n\t\tthis.set(\"output.hashDigest\", \"hex\");\r\n\t\tthis.set(\"output.hashDigestLength\", 20);\r\n\t\tthis.set(\"output.devtoolLineToLine\", false);\r\n\t\tthis.set(\"output.strictModuleExceptionHandling\", false);\r\n\r\n\t\tthis.set(\"node\", {});\r\n\t\tthis.set(\"node.console\", false);\r\n\t\tthis.set(\"node.process\", true);\r\n\t\tthis.set(\"node.global\", true);\r\n\t\tthis.set(\"node.Buffer\", true);\r\n\t\tthis.set(\"node.setImmediate\", true);\r\n\t\tthis.set(\"node.__filename\", \"mock\");\r\n\t\tthis.set(\"node.__dirname\", \"mock\");\r\n\r\n\t\tthis.set(\"performance.maxAssetSize\", 250000);\r\n\t\tthis.set(\"performance.maxEntrypointSize\", 250000);\r\n\t\tthis.set(\"performance.hints\", false);\r\n\r\n\t\tthis.set(\"resolve\", {});\r\n\t\tthis.set(\"resolve.unsafeCache\", true);\r\n\t\tthis.set(\"resolve.modules\", [\"node_modules\"]);\r\n\t\tthis.set(\"resolve.extensions\", [\".js\", \".json\"]);\r\n\t\tthis.set(\"resolve.aliasFields\", \"make\", (options) => {\r\n\t\t\tif(options.target === \"web\" || options.target === \"webworker\")\r\n\t\t\t\treturn [\"browser\"];\r\n\t\t\telse\r\n\t\t\t\treturn [];\r\n\t\t});\r\n\t\tthis.set(\"resolve.mainFields\", \"make\", (options) => {\r\n\t\t\tif(options.target === \"web\" || options.target === \"webworker\")\r\n\t\t\t\treturn [\"browser\", \"module\", \"main\"];\r\n\t\t\telse\r\n\t\t\t\treturn [\"module\", \"main\"];\r\n\t\t});\r\n\t\tthis.set(\"resolveLoader\", {});\r\n\t\tthis.set(\"resolveLoader.unsafeCache\", true);\r\n\t\tthis.set(\"resolveLoader.mainFields\", [\"loader\", \"main\"]);\r\n\t\tthis.set(\"resolveLoader.extensions\", [\".js\", \".json\"]);\r\n\t}\r\n}\r\n\r\nmodule.exports = WebpackOptionsDefaulter;\r\n","/home/travis/build/npmtest/node-npmtest-webpack/node_modules/webpack/lib/OptionsDefaulter.js":"/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\n\"use strict\";\r\n\r\nfunction getProperty(obj, name) {\r\n\tname = name.split(\".\");\r\n\tfor(var i = 0; i < name.length - 1; i++) {\r\n\t\tobj = obj[name[i]];\r\n\t\tif(typeof obj !== \"object\" || !obj) return;\r\n\t}\r\n\treturn obj[name.pop()];\r\n}\r\n\r\nfunction setProperty(obj, name, value) {\r\n\tname = name.split(\".\");\r\n\tfor(var i = 0; i < name.length - 1; i++) {\r\n\t\tif(typeof obj[name[i]] !== \"object\" && typeof obj[name[i]] !== \"undefined\") return;\r\n\t\tif(!obj[name[i]]) obj[name[i]] = {};\r\n\t\tobj = obj[name[i]];\r\n\t}\r\n\tobj[name.pop()] = value;\r\n}\r\n\r\nclass OptionsDefaulter {\r\n\tconstructor() {\r\n\t\tthis.defaults = {};\r\n\t\tthis.config = {};\r\n\t}\r\n\r\n\tprocess(options) {\r\n\t\tfor(let name in this.defaults) {\r\n\t\t\tswitch(this.config[name]) {\r\n\t\t\t\tcase undefined:\r\n\t\t\t\t\tif(getProperty(options, name) === undefined)\r\n\t\t\t\t\t\tsetProperty(options, name, this.defaults[name]);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"call\":\r\n\t\t\t\t\tsetProperty(options, name, this.defaults[name].call(this, getProperty(options, name), options), options);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"make\":\r\n\t\t\t\t\tif(getProperty(options, name) === undefined)\r\n\t\t\t\t\t\tsetProperty(options, name, this.defaults[name].call(this, options), options);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"append\":\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tlet oldValue = getProperty(options, name);\r\n\t\t\t\t\t\tif(!Array.isArray(oldValue)) oldValue = [];\r\n\t\t\t\t\t\toldValue.push.apply(oldValue, this.defaults[name]);\r\n\t\t\t\t\t\tsetProperty(options, name, oldValue);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tthrow new Error(\"OptionsDefaulter cannot process \" + this.config[name]);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tset(name, config, def) {\r\n\t\tif(arguments.length === 3) {\r\n\t\t\tthis.defaults[name] = def;\r\n\t\t\tthis.config[name] = config;\r\n\t\t} else {\r\n\t\t\tthis.defaults[name] = config;\r\n\t\t\tdelete this.config[name];\r\n\t\t}\r\n\t}\r\n}\r\n\r\nmodule.exports = OptionsDefaulter;\r\n","/home/travis/build/npmtest/node-npmtest-webpack/node_modules/webpack/lib/validateSchema.js":"/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Gajus Kuizinas @gajus\r\n*/\r\n\"use strict\";\r\n\r\nconst Ajv = require(\"ajv\");\r\nconst ajv = new Ajv({\r\n\terrorDataPath: \"configuration\",\r\n\tallErrors: true,\r\n\tverbose: true\r\n});\r\nrequire(\"ajv-keywords\")(ajv, [\"instanceof\"]);\r\nrequire(\"../schemas/ajv.absolutePath\")(ajv);\r\n\r\nfunction validateSchema(schema, options) {\r\n\tif(Array.isArray(options)) {\r\n\t\tconst errors = options.map((options) => validateObject(schema, options));\r\n\t\terrors.forEach((list, idx) => {\r\n\t\t\tlist.forEach(function applyPrefix(err) {\r\n\t\t\t\terr.dataPath = `[${idx}]${err.dataPath}`;\r\n\t\t\t\tif(err.children) {\r\n\t\t\t\t\terr.children.forEach(applyPrefix);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t});\r\n\t\treturn errors.reduce((arr, items) => {\r\n\t\t\treturn arr.concat(items);\r\n\t\t}, []);\r\n\t} else {\r\n\t\treturn validateObject(schema, options);\r\n\t}\r\n}\r\n\r\nfunction validateObject(schema, options) {\r\n\tconst validate = ajv.compile(schema);\r\n\tconst valid = validate(options);\r\n\treturn valid ? [] : filterErrors(validate.errors);\r\n}\r\n\r\nfunction filterErrors(errors) {\r\n\tlet newErrors = [];\r\n\terrors.forEach((err) => {\r\n\t\tconst dataPath = err.dataPath;\r\n\t\tlet children = [];\r\n\t\tnewErrors = newErrors.filter((oldError) => {\r\n\t\t\tif(oldError.dataPath.includes(dataPath)) {\r\n\t\t\t\tif(oldError.children) {\r\n\t\t\t\t\tchildren = children.concat(oldError.children.slice(0));\r\n\t\t\t\t}\r\n\t\t\t\toldError.children = undefined;\r\n\t\t\t\tchildren.push(oldError);\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\treturn true;\r\n\t\t});\r\n\t\tif(children.length) {\r\n\t\t\terr.children = children;\r\n\t\t}\r\n\t\tnewErrors.push(err);\r\n\t});\r\n\r\n\treturn newErrors;\r\n}\r\n\r\nmodule.exports = validateSchema;\r\n","/home/travis/build/npmtest/node-npmtest-webpack/node_modules/webpack/schemas/ajv.absolutePath.js":"\"use strict\";\r\n\r\nconst getErrorFor = (shouldBeAbsolute, data, schema) => {\r\n\tconst message = shouldBeAbsolute ?\r\n\t\t`The provided value ${JSON.stringify(data)} is not an absolute path!`\r\n\t\t: `A relative path is expected. However the provided value ${JSON.stringify(data)} is an absolute path!`;\r\n\r\n\treturn {\r\n\t\tkeyword: \"absolutePath\",\r\n\t\tparams: { absolutePath: data },\r\n\t\tmessage: message,\r\n\t\tparentSchema: schema,\r\n\t};\r\n};\r\nmodule.exports = (ajv) => ajv.addKeyword(\"absolutePath\", {\r\n\terrors: true,\r\n\ttype: \"string\",\r\n\tcompile(expected, schema) {\r\n\t\tfunction callback(data) {\r\n\t\t\tconst passes = expected === /^(?:[A-Za-z]:\\\\|\\/)/.test(data);\r\n\t\t\tif(!passes) {\r\n\t\t\t\tcallback.errors = [getErrorFor(expected, data, schema)];\r\n\t\t\t}\r\n\t\t\treturn passes;\r\n\t\t}\r\n\t\tcallback.errors = [];\r\n\t\treturn callback;\r\n\t}\r\n});\r\n","/home/travis/build/npmtest/node-npmtest-webpack/node_modules/webpack/lib/WebpackOptionsValidationError.js":"/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Gajus Kuizinas @gajus\r\n*/\r\n\"use strict\";\r\n\r\nconst WebpackError = require(\"./WebpackError\");\r\nconst webpackOptionsSchema = require(\"../schemas/webpackOptionsSchema.json\");\r\n\r\nconst getSchemaPart = (path, parents, additionalPath) => {\r\n\tparents = parents || 0;\r\n\tpath = path.split(\"/\");\r\n\tpath = path.slice(0, path.length - parents);\r\n\tif(additionalPath) {\r\n\t\tadditionalPath = additionalPath.split(\"/\");\r\n\t\tpath = path.concat(additionalPath);\r\n\t}\r\n\tlet schemaPart = webpackOptionsSchema;\r\n\tfor(let i = 1; i < path.length; i++) {\r\n\t\tconst inner = schemaPart[path[i]];\r\n\t\tif(inner)\r\n\t\t\tschemaPart = inner;\r\n\t}\r\n\treturn schemaPart;\r\n};\r\n\r\nconst getSchemaPartText = (schemaPart, additionalPath) => {\r\n\tif(additionalPath) {\r\n\t\tfor(let i = 0; i < additionalPath.length; i++) {\r\n\t\t\tconst inner = schemaPart[additionalPath[i]];\r\n\t\t\tif(inner)\r\n\t\t\t\tschemaPart = inner;\r\n\t\t}\r\n\t}\r\n\twhile(schemaPart.$ref) schemaPart = getSchemaPart(schemaPart.$ref);\r\n\tlet schemaText = WebpackOptionsValidationError.formatSchema(schemaPart);\r\n\tif(schemaPart.description)\r\n\t\tschemaText += `\\n${schemaPart.description}`;\r\n\treturn schemaText;\r\n};\r\n\r\nconst indent = (str, prefix, firstLine) => {\r\n\tif(firstLine) {\r\n\t\treturn prefix + str.replace(/\\n(?!$)/g, \"\\n\" + prefix);\r\n\t} else {\r\n\t\treturn str.replace(/\\n(?!$)/g, `\\n${prefix}`);\r\n\t}\r\n};\r\n\r\nclass WebpackOptionsValidationError extends WebpackError {\r\n\tconstructor(validationErrors) {\r\n\t\tsuper();\r\n\r\n\t\tthis.name = \"WebpackOptionsValidationError\";\r\n\t\tthis.message = \"Invalid configuration object. \" +\r\n\t\t\t\"Webpack has been initialised using a configuration object that does not match the API schema.\\n\" +\r\n\t\t\tvalidationErrors.map(err => \" - \" + indent(WebpackOptionsValidationError.formatValidationError(err), \"   \", false)).join(\"\\n\");\r\n\t\tthis.validationErrors = validationErrors;\r\n\r\n\t\tError.captureStackTrace(this, this.constructor);\r\n\t}\r\n\r\n\tstatic formatSchema(schema, prevSchemas) {\r\n\t\tprevSchemas = prevSchemas || [];\r\n\r\n\t\tconst formatInnerSchema = (innerSchema, addSelf) => {\r\n\t\t\tif(!addSelf) return WebpackOptionsValidationError.formatSchema(innerSchema, prevSchemas);\r\n\t\t\tif(prevSchemas.indexOf(innerSchema) >= 0) return \"(recursive)\";\r\n\t\t\treturn WebpackOptionsValidationError.formatSchema(innerSchema, prevSchemas.concat(schema));\r\n\t\t};\r\n\r\n\t\tif(schema.type === \"string\") {\r\n\t\t\tif(schema.minLength === 1)\r\n\t\t\t\treturn \"non-empty string\";\r\n\t\t\telse if(schema.minLength > 1)\r\n\t\t\t\treturn `string (min length ${schema.minLength})`;\r\n\t\t\treturn \"string\";\r\n\t\t} else if(schema.type === \"boolean\") {\r\n\t\t\treturn \"boolean\";\r\n\t\t} else if(schema.type === \"number\") {\r\n\t\t\treturn \"number\";\r\n\t\t} else if(schema.type === \"object\") {\r\n\t\t\tif(schema.properties) {\r\n\t\t\t\tconst required = schema.required || [];\r\n\t\t\t\treturn `object { ${Object.keys(schema.properties).map(property => {\r\n\t\t\t\t\tif(required.indexOf(property) < 0) return property + \"?\";\r\n\t\t\t\t\treturn property;\r\n\t\t\t\t}).concat(schema.additionalProperties ? [\"...\"] : []).join(\", \")} }`;\r\n\t\t\t}\r\n\t\t\tif(schema.additionalProperties) {\r\n\t\t\t\treturn `object { <key>: ${formatInnerSchema(schema.additionalProperties)} }`;\r\n\t\t\t}\r\n\t\t\treturn \"object\";\r\n\t\t} else if(schema.type === \"array\") {\r\n\t\t\treturn `[${formatInnerSchema(schema.items)}]`;\r\n\t\t}\r\n\r\n\t\tswitch(schema.instanceof) {\r\n\t\t\tcase \"Function\":\r\n\t\t\t\treturn \"function\";\r\n\t\t\tcase \"RegExp\":\r\n\t\t\t\treturn \"RegExp\";\r\n\t\t}\r\n\t\tif(schema.$ref) return formatInnerSchema(getSchemaPart(schema.$ref), true);\r\n\t\tif(schema.allOf) return schema.allOf.map(formatInnerSchema).join(\" & \");\r\n\t\tif(schema.oneOf) return schema.oneOf.map(formatInnerSchema).join(\" | \");\r\n\t\tif(schema.anyOf) return schema.anyOf.map(formatInnerSchema).join(\" | \");\r\n\t\tif(schema.enum) return schema.enum.map(item => JSON.stringify(item)).join(\" | \");\r\n\t\treturn JSON.stringify(schema, 0, 2);\r\n\t}\r\n\r\n\tstatic formatValidationError(err) {\r\n\t\tconst dataPath = `configuration${err.dataPath}`;\r\n\t\tif(err.keyword === \"additionalProperties\") {\r\n\t\t\tconst baseMessage = `${dataPath} has an unknown property '${err.params.additionalProperty}'. These properties are valid:\\n${getSchemaPartText(err.parentSchema)}`;\r\n\t\t\tif(!err.dataPath) {\r\n\t\t\t\tswitch(err.params.additionalProperty) {\r\n\t\t\t\t\tcase \"debug\":\r\n\t\t\t\t\t\treturn `${baseMessage}\\n` +\r\n\t\t\t\t\t\t\t\"The 'debug' property was removed in webpack 2.\\n\" +\r\n\t\t\t\t\t\t\t\"Loaders should be updated to allow passing this option via loader options in module.rules.\\n\" +\r\n\t\t\t\t\t\t\t\"Until loaders are updated one can use the LoaderOptionsPlugin to switch loaders into debug mode:\\n\" +\r\n\t\t\t\t\t\t\t\"plugins: [\\n\" +\r\n\t\t\t\t\t\t\t\"  new webpack.LoaderOptionsPlugin({\\n\" +\r\n\t\t\t\t\t\t\t\"    debug: true\\n\" +\r\n\t\t\t\t\t\t\t\"  })\\n\" +\r\n\t\t\t\t\t\t\t\"]\";\r\n\t\t\t\t}\r\n\t\t\t\treturn baseMessage + \"\\n\" +\r\n\t\t\t\t\t\"For typos: please correct them.\\n\" +\r\n\t\t\t\t\t\"For loader options: webpack 2 no longer allows custom properties in configuration.\\n\" +\r\n\t\t\t\t\t\"  Loaders should be updated to allow passing options via loader options in module.rules.\\n\" +\r\n\t\t\t\t\t\"  Until loaders are updated one can use the LoaderOptionsPlugin to pass these options to the loader:\\n\" +\r\n\t\t\t\t\t\"  plugins: [\\n\" +\r\n\t\t\t\t\t\"    new webpack.LoaderOptionsPlugin({\\n\" +\r\n\t\t\t\t\t\"      // test: /\\\\.xxx$/, // may apply this only for some modules\\n\" +\r\n\t\t\t\t\t\"      options: {\\n\" +\r\n\t\t\t\t\t`        ${err.params.additionalProperty}: ...\\n` +\r\n\t\t\t\t\t\"      }\\n\" +\r\n\t\t\t\t\t\"    })\\n\" +\r\n\t\t\t\t\t\"  ]\";\r\n\t\t\t}\r\n\t\t\treturn baseMessage;\r\n\t\t} else if(err.keyword === \"oneOf\" || err.keyword === \"anyOf\") {\r\n\t\t\tif(err.children && err.children.length > 0) {\r\n\t\t\t\treturn `${dataPath} should be one of these:\\n${getSchemaPartText(err.parentSchema)}\\n` +\r\n\t\t\t\t\t`Details:\\n${err.children.map(err => \" * \" + indent(WebpackOptionsValidationError.formatValidationError(err), \"   \", false)).join(\"\\n\")}`;\r\n\t\t\t}\r\n\t\t\treturn `${dataPath} should be one of these:\\n${getSchemaPartText(err.parentSchema)}`;\r\n\r\n\t\t} else if(err.keyword === \"enum\") {\r\n\t\t\tif(err.parentSchema && err.parentSchema.enum && err.parentSchema.enum.length === 1) {\r\n\t\t\t\treturn `${dataPath} should be ${getSchemaPartText(err.parentSchema)}`;\r\n\t\t\t}\r\n\t\t\treturn `${dataPath} should be one of these:\\n${getSchemaPartText(err.parentSchema)}`;\r\n\t\t} else if(err.keyword === \"allOf\") {\r\n\t\t\treturn `${dataPath} should be:\\n${getSchemaPartText(err.parentSchema)}`;\r\n\t\t} else if(err.keyword === \"type\") {\r\n\t\t\tswitch(err.params.type) {\r\n\t\t\t\tcase \"object\":\r\n\t\t\t\t\treturn `${dataPath} should be an object.`;\r\n\t\t\t\tcase \"string\":\r\n\t\t\t\t\treturn `${dataPath} should be a string.`;\r\n\t\t\t\tcase \"boolean\":\r\n\t\t\t\t\treturn `${dataPath} should be a boolean.`;\r\n\t\t\t\tcase \"number\":\r\n\t\t\t\t\treturn `${dataPath} should be a number.`;\r\n\t\t\t\tcase \"array\":\r\n\t\t\t\t\treturn `${dataPath} should be an array:\\n${getSchemaPartText(err.parentSchema)}`;\r\n\t\t\t}\r\n\t\t\treturn `${dataPath} should be ${err.params.type}:\\n${getSchemaPartText(err.parentSchema)}`;\r\n\t\t} else if(err.keyword === \"instanceof\") {\r\n\t\t\treturn `${dataPath} should be an instance of ${getSchemaPartText(err.parentSchema)}.`;\r\n\t\t} else if(err.keyword === \"required\") {\r\n\t\t\tconst missingProperty = err.params.missingProperty.replace(/^\\./, \"\");\r\n\t\t\treturn `${dataPath} misses the property '${missingProperty}'.\\n${getSchemaPartText(err.parentSchema, [\"properties\", missingProperty])}`;\r\n\t\t} else if(err.keyword === \"minLength\" || err.keyword === \"minItems\") {\r\n\t\t\tif(err.params.limit === 1)\r\n\t\t\t\treturn `${dataPath} should not be empty.`;\r\n\t\t\telse\r\n\t\t\t\treturn `${dataPath} ${err.message}`;\r\n\t\t} else if(err.keyword === \"absolutePath\") {\r\n\t\t\tconst baseMessage = `${dataPath}: ${err.message}`;\r\n\t\t\tif(dataPath === \"configuration.output.filename\") {\r\n\t\t\t\treturn `${baseMessage}\\n` +\r\n\t\t\t\t\t\"Please use output.path to specify absolute path and output.filename for the file name.\";\r\n\t\t\t}\r\n\t\t\treturn baseMessage;\r\n\t\t} else {\r\n\t\t\t// eslint-disable-line no-fallthrough\r\n\t\t\treturn `${dataPath} ${err.message} (${JSON.stringify(err, 0, 2)}).\\n${getSchemaPartText(err.parentSchema)}`;\r\n\t\t}\r\n\t}\r\n}\r\n\r\nmodule.exports = WebpackOptionsValidationError;\r\n","/home/travis/build/npmtest/node-npmtest-webpack/node_modules/webpack/lib/DefinePlugin.js":"/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\n\"use strict\";\r\n\r\nconst ConstDependency = require(\"./dependencies/ConstDependency\");\r\nconst BasicEvaluatedExpression = require(\"./BasicEvaluatedExpression\");\r\nconst ParserHelpers = require(\"./ParserHelpers\");\r\nconst NullFactory = require(\"./NullFactory\");\r\n\r\nclass DefinePlugin {\r\n\tconstructor(definitions) {\r\n\t\tthis.definitions = definitions;\r\n\t}\r\n\r\n\tapply(compiler) {\r\n\t\tconst definitions = this.definitions;\r\n\t\tcompiler.plugin(\"compilation\", (compilation, params) => {\r\n\t\t\tcompilation.dependencyFactories.set(ConstDependency, new NullFactory());\r\n\t\t\tcompilation.dependencyTemplates.set(ConstDependency, new ConstDependency.Template());\r\n\r\n\t\t\tparams.normalModuleFactory.plugin(\"parser\", (parser) => {\r\n\t\t\t\t(function walkDefinitions(definitions, prefix) {\r\n\t\t\t\t\tObject.keys(definitions).forEach((key) => {\r\n\t\t\t\t\t\tconst code = definitions[key];\r\n\t\t\t\t\t\tif(code && typeof code === \"object\" && !(code instanceof RegExp)) {\r\n\t\t\t\t\t\t\twalkDefinitions(code, prefix + key + \".\");\r\n\t\t\t\t\t\t\tapplyObjectDefine(prefix + key, code);\r\n\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tapplyDefineKey(prefix, key);\r\n\t\t\t\t\t\tapplyDefine(prefix + key, code);\r\n\t\t\t\t\t});\r\n\t\t\t\t}(definitions, \"\"));\r\n\r\n\t\t\t\tfunction stringifyObj(obj) {\r\n\t\t\t\t\treturn \"__webpack_require__.i({\" + Object.keys(obj).map((key) => {\r\n\t\t\t\t\t\tconst code = obj[key];\r\n\t\t\t\t\t\treturn JSON.stringify(key) + \":\" + toCode(code);\r\n\t\t\t\t\t}).join(\",\") + \"})\";\r\n\t\t\t\t}\r\n\r\n\t\t\t\tfunction toCode(code) {\r\n\t\t\t\t\tif(code === null) return \"null\";\r\n\t\t\t\t\telse if(code === undefined) return \"undefined\";\r\n\t\t\t\t\telse if(code instanceof RegExp && code.toString) return code.toString();\r\n\t\t\t\t\telse if(typeof code === \"function\" && code.toString) return \"(\" + code.toString() + \")\";\r\n\t\t\t\t\telse if(typeof code === \"object\") return stringifyObj(code);\r\n\t\t\t\t\telse return code + \"\";\r\n\t\t\t\t}\r\n\r\n\t\t\t\tfunction applyDefineKey(prefix, key) {\r\n\t\t\t\t\tconst splittedKey = key.split(\".\");\r\n\t\t\t\t\tsplittedKey.slice(1).forEach((_, i) => {\r\n\t\t\t\t\t\tconst fullKey = prefix + splittedKey.slice(0, i + 1).join(\".\");\r\n\t\t\t\t\t\tparser.plugin(\"can-rename \" + fullKey, ParserHelpers.approve);\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\r\n\t\t\t\tfunction applyDefine(key, code) {\r\n\t\t\t\t\tconst isTypeof = /^typeof\\s+/.test(key);\r\n\t\t\t\t\tif(isTypeof) key = key.replace(/^typeof\\s+/, \"\");\r\n\t\t\t\t\tlet recurse = false;\r\n\t\t\t\t\tlet recurseTypeof = false;\r\n\t\t\t\t\tcode = toCode(code);\r\n\t\t\t\t\tif(!isTypeof) {\r\n\t\t\t\t\t\tparser.plugin(\"can-rename \" + key, ParserHelpers.approve);\r\n\t\t\t\t\t\tparser.plugin(\"evaluate Identifier \" + key, (expr) => {\r\n\t\t\t\t\t\t\t/**\r\n\t\t\t\t\t\t\t * this is needed in case there is a recursion in the DefinePlugin\r\n\t\t\t\t\t\t\t * to prevent an endless recursion\r\n\t\t\t\t\t\t\t * e.g.: new DefinePlugin({\r\n\t\t\t\t\t\t\t * \"a\": \"b\",\r\n\t\t\t\t\t\t\t * \"b\": \"a\"\r\n\t\t\t\t\t\t\t * });\r\n\t\t\t\t\t\t\t */\r\n\t\t\t\t\t\t\tif(recurse) return;\r\n\t\t\t\t\t\t\trecurse = true;\r\n\t\t\t\t\t\t\tconst res = parser.evaluate(code);\r\n\t\t\t\t\t\t\trecurse = false;\r\n\t\t\t\t\t\t\tres.setRange(expr.range);\r\n\t\t\t\t\t\t\treturn res;\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t\tparser.plugin(\"expression \" + key, ParserHelpers.toConstantDependency(code));\r\n\t\t\t\t\t}\r\n\t\t\t\t\tconst typeofCode = isTypeof ? code : \"typeof (\" + code + \")\";\r\n\t\t\t\t\tparser.plugin(\"evaluate typeof \" + key, (expr) => {\r\n\t\t\t\t\t\t/**\r\n\t\t\t\t\t\t * this is needed in case there is a recursion in the DefinePlugin\r\n\t\t\t\t\t\t * to prevent an endless recursion\r\n\t\t\t\t\t\t * e.g.: new DefinePlugin({\r\n\t\t\t\t\t\t * \"typeof a\": \"tyepof b\",\r\n\t\t\t\t\t\t * \"typeof b\": \"typeof a\"\r\n\t\t\t\t\t\t * });\r\n\t\t\t\t\t\t */\r\n\t\t\t\t\t\tif(recurseTypeof) return;\r\n\t\t\t\t\t\trecurseTypeof = true;\r\n\t\t\t\t\t\tconst res = parser.evaluate(typeofCode);\r\n\t\t\t\t\t\trecurseTypeof = false;\r\n\t\t\t\t\t\tres.setRange(expr.range);\r\n\t\t\t\t\t\treturn res;\r\n\t\t\t\t\t});\r\n\t\t\t\t\tparser.plugin(\"typeof \" + key, (expr) => {\r\n\t\t\t\t\t\tconst res = parser.evaluate(typeofCode);\r\n\t\t\t\t\t\tif(!res.isString()) return;\r\n\t\t\t\t\t\treturn ParserHelpers.toConstantDependency(JSON.stringify(res.string)).bind(parser)(expr);\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\r\n\t\t\t\tfunction applyObjectDefine(key, obj) {\r\n\t\t\t\t\tconst code = stringifyObj(obj);\r\n\t\t\t\t\tparser.plugin(\"can-rename \" + key, ParserHelpers.approve);\r\n\t\t\t\t\tparser.plugin(\"evaluate Identifier \" + key, (expr) => new BasicEvaluatedExpression().setRange(expr.range));\r\n\t\t\t\t\tparser.plugin(\"evaluate typeof \" + key, ParserHelpers.evaluateToString(\"object\"));\r\n\t\t\t\t\tparser.plugin(\"expression \" + key, ParserHelpers.toConstantDependency(code));\r\n\t\t\t\t\tparser.plugin(\"typeof \" + key, ParserHelpers.toConstantDependency(JSON.stringify(\"object\")));\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n}\r\nmodule.exports = DefinePlugin;\r\n","/home/travis/build/npmtest/node-npmtest-webpack/node_modules/webpack/lib/NormalModuleReplacementPlugin.js":"/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\n\"use strict\";\r\n\r\nconst path = require(\"path\");\r\n\r\nclass NormalModuleReplacementPlugin {\r\n\tconstructor(resourceRegExp, newResource) {\r\n\t\tthis.resourceRegExp = resourceRegExp;\r\n\t\tthis.newResource = newResource;\r\n\t}\r\n\r\n\tapply(compiler) {\r\n\t\tconst resourceRegExp = this.resourceRegExp;\r\n\t\tconst newResource = this.newResource;\r\n\t\tcompiler.plugin(\"normal-module-factory\", (nmf) => {\r\n\t\t\tnmf.plugin(\"before-resolve\", (result, callback) => {\r\n\t\t\t\tif(!result) return callback();\r\n\t\t\t\tif(resourceRegExp.test(result.request)) {\r\n\t\t\t\t\tif(typeof newResource === \"function\") {\r\n\t\t\t\t\t\tnewResource(result);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tresult.request = newResource;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\treturn callback(null, result);\r\n\t\t\t});\r\n\t\t\tnmf.plugin(\"after-resolve\", (result, callback) => {\r\n\t\t\t\tif(!result) return callback();\r\n\t\t\t\tif(resourceRegExp.test(result.resource)) {\r\n\t\t\t\t\tif(typeof newResource === \"function\") {\r\n\t\t\t\t\t\tnewResource(result);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tresult.resource = path.resolve(path.dirname(result.resource), newResource);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\treturn callback(null, result);\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n}\r\n\r\nmodule.exports = NormalModuleReplacementPlugin;\r\n","/home/travis/build/npmtest/node-npmtest-webpack/node_modules/webpack/lib/ContextReplacementPlugin.js":"/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\n\"use strict\";\r\n\r\nconst path = require(\"path\");\r\nconst ContextElementDependency = require(\"./dependencies/ContextElementDependency\");\r\n\r\nclass ContextReplacementPlugin {\r\n\tconstructor(resourceRegExp, newContentResource, newContentRecursive, newContentRegExp) {\r\n\t\tthis.resourceRegExp = resourceRegExp;\r\n\r\n\t\tif(typeof newContentResource === \"function\") {\r\n\t\t\tthis.newContentCallback = newContentResource;\r\n\t\t} else if(typeof newContentResource === \"string\" && typeof newContentRecursive === \"object\") {\r\n\t\t\tthis.newContentResource = newContentResource;\r\n\t\t\tthis.newContentCreateContextMap = (fs, callback) => {\r\n\t\t\t\tcallback(null, newContentRecursive);\r\n\t\t\t};\r\n\t\t} else if(typeof newContentResource === \"string\" && typeof newContentRecursive === \"function\") {\r\n\t\t\tthis.newContentResource = newContentResource;\r\n\t\t\tthis.newContentCreateContextMap = newContentRecursive;\r\n\t\t} else {\r\n\t\t\tif(typeof newContentResource !== \"string\") {\r\n\t\t\t\tnewContentRegExp = newContentRecursive;\r\n\t\t\t\tnewContentRecursive = newContentResource;\r\n\t\t\t\tnewContentResource = undefined;\r\n\t\t\t}\r\n\t\t\tif(typeof newContentRecursive !== \"boolean\") {\r\n\t\t\t\tnewContentRegExp = newContentRecursive;\r\n\t\t\t\tnewContentRecursive = undefined;\r\n\t\t\t}\r\n\t\t\tthis.newContentResource = newContentResource;\r\n\t\t\tthis.newContentRecursive = newContentRecursive;\r\n\t\t\tthis.newContentRegExp = newContentRegExp;\r\n\t\t}\r\n\t}\r\n\r\n\tapply(compiler) {\r\n\t\tconst resourceRegExp = this.resourceRegExp;\r\n\t\tconst newContentCallback = this.newContentCallback;\r\n\t\tconst newContentResource = this.newContentResource;\r\n\t\tconst newContentRecursive = this.newContentRecursive;\r\n\t\tconst newContentRegExp = this.newContentRegExp;\r\n\t\tconst newContentCreateContextMap = this.newContentCreateContextMap;\r\n\r\n\t\tcompiler.plugin(\"context-module-factory\", (cmf) => {\r\n\t\t\tcmf.plugin(\"before-resolve\", (result, callback) => {\r\n\t\t\t\tif(!result) return callback();\r\n\t\t\t\tif(resourceRegExp.test(result.request)) {\r\n\t\t\t\t\tif(typeof newContentResource !== \"undefined\")\r\n\t\t\t\t\t\tresult.request = newContentResource;\r\n\t\t\t\t\tif(typeof newContentRecursive !== \"undefined\")\r\n\t\t\t\t\t\tresult.recursive = newContentRecursive;\r\n\t\t\t\t\tif(typeof newContentRegExp !== \"undefined\")\r\n\t\t\t\t\t\tresult.regExp = newContentRegExp;\r\n\t\t\t\t\tif(typeof newContentCallback === \"function\") {\r\n\t\t\t\t\t\tnewContentCallback(result);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tresult.dependencies.forEach((d) => {\r\n\t\t\t\t\t\t\tif(d.critical)\r\n\t\t\t\t\t\t\t\td.critical = false;\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\treturn callback(null, result);\r\n\t\t\t});\r\n\t\t\tcmf.plugin(\"after-resolve\", (result, callback) => {\r\n\t\t\t\tif(!result) return callback();\r\n\t\t\t\tif(resourceRegExp.test(result.resource)) {\r\n\t\t\t\t\tif(typeof newContentResource !== \"undefined\")\r\n\t\t\t\t\t\tresult.resource = path.resolve(result.resource, newContentResource);\r\n\t\t\t\t\tif(typeof newContentRecursive !== \"undefined\")\r\n\t\t\t\t\t\tresult.recursive = newContentRecursive;\r\n\t\t\t\t\tif(typeof newContentRegExp !== \"undefined\")\r\n\t\t\t\t\t\tresult.regExp = newContentRegExp;\r\n\t\t\t\t\tif(typeof newContentCreateContextMap === \"function\")\r\n\t\t\t\t\t\tresult.resolveDependencies = createResolveDependenciesFromContextMap(newContentCreateContextMap);\r\n\t\t\t\t\tif(typeof newContentCallback === \"function\") {\r\n\t\t\t\t\t\tconst origResource = result.resource;\r\n\t\t\t\t\t\tnewContentCallback(result);\r\n\t\t\t\t\t\tif(result.resource !== origResource) {\r\n\t\t\t\t\t\t\tresult.resource = path.resolve(origResource, result.resource);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tresult.dependencies.forEach((d) => {\r\n\t\t\t\t\t\t\tif(d.critical)\r\n\t\t\t\t\t\t\t\td.critical = false;\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\treturn callback(null, result);\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n}\r\n\r\nconst createResolveDependenciesFromContextMap = (createContextMap) => {\r\n\treturn function resolveDependenciesFromContextMap(fs, resource, recursive, regExp, callback) {\r\n\t\tcreateContextMap(fs, (err, map) => {\r\n\t\t\tif(err) return callback(err);\r\n\t\t\tconst dependencies = Object.keys(map).map((key) => {\r\n\t\t\t\treturn new ContextElementDependency(map[key], key);\r\n\t\t\t});\r\n\t\t\tcallback(null, dependencies);\r\n\t\t});\r\n\t};\r\n};\r\n\r\nmodule.exports = ContextReplacementPlugin;\r\n","/home/travis/build/npmtest/node-npmtest-webpack/node_modules/webpack/lib/IgnorePlugin.js":"/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\n\"use strict\";\r\n\r\nclass IgnorePlugin {\r\n\tconstructor(resourceRegExp, contextRegExp) {\r\n\t\tthis.resourceRegExp = resourceRegExp;\r\n\t\tthis.contextRegExp = contextRegExp;\r\n\r\n\t\tthis.checkIgnore = this.checkIgnore.bind(this);\r\n\t}\r\n\r\n\t/*\r\n\t * Only returns true if a \"resourceRegExp\" exists\r\n\t * and the resource given matches the regexp.\r\n\t */\r\n\tcheckResouce(resource) {\r\n\t\tif(!this.resourceRegExp) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\treturn this.resourceRegExp.test(resource);\r\n\t}\r\n\r\n\t/*\r\n\t * Returns true if contextRegExp does not exist\r\n\t * or if context matches the given regexp.\r\n\t */\r\n\tcheckContext(context) {\r\n\t\tif(!this.contextRegExp) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn this.contextRegExp.test(context);\r\n\t}\r\n\r\n\t/*\r\n\t * Returns true if result should be ignored.\r\n\t * false if it shouldn't.\r\n\t *\r\n\t * Not that if \"contextRegExp\" is given, both the \"resourceRegExp\"\r\n\t * and \"contextRegExp\" have to match.\r\n\t */\r\n\tcheckResult(result) {\r\n\t\tif(!result) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn this.checkResouce(result.request) && this.checkContext(result.context);\r\n\t}\r\n\r\n\tcheckIgnore(result, callback) {\r\n\t\t// check if result is ignored\r\n\t\tif(this.checkResult(result)) {\r\n\t\t\treturn callback();\r\n\t\t}\r\n\t\treturn callback(null, result);\r\n\t}\r\n\r\n\tapply(compiler) {\r\n\t\tcompiler.plugin(\"normal-module-factory\", (nmf) => {\r\n\t\t\tnmf.plugin(\"before-resolve\", this.checkIgnore);\r\n\t\t});\r\n\t\tcompiler.plugin(\"context-module-factory\", (cmf) => {\r\n\t\t\tcmf.plugin(\"before-resolve\", this.checkIgnore);\r\n\t\t});\r\n\t}\r\n}\r\n\r\nmodule.exports = IgnorePlugin;\r\n","/home/travis/build/npmtest/node-npmtest-webpack/node_modules/webpack/lib/WatchIgnorePlugin.js":"/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\n\"use strict\";\r\n\r\nclass WatchIgnorePlugin {\r\n\tconstructor(paths) {\r\n\t\tthis.paths = paths;\r\n\t}\r\n\r\n\tapply(compiler) {\r\n\t\tcompiler.plugin(\"after-environment\", () => {\r\n\t\t\tcompiler.watchFileSystem = new IgnoringWatchFileSystem(compiler.watchFileSystem, this.paths);\r\n\t\t});\r\n\t}\r\n}\r\n\r\nmodule.exports = WatchIgnorePlugin;\r\n\r\nclass IgnoringWatchFileSystem {\r\n\tconstructor(wfs, paths) {\r\n\t\tthis.wfs = wfs;\r\n\t\tthis.paths = paths;\r\n\t}\r\n\r\n\twatch(files, dirs, missing, startTime, options, callback, callbackUndelayed) {\r\n\t\tconst ignored = path => this.paths.some(p => p instanceof RegExp ? p.test(path) : path.indexOf(p) === 0);\r\n\r\n\t\tconst notIgnored = path => !ignored(path);\r\n\r\n\t\tconst ignoredFiles = files.filter(ignored);\r\n\t\tconst ignoredDirs = dirs.filter(ignored);\r\n\r\n\t\tthis.wfs.watch(files.filter(notIgnored), dirs.filter(notIgnored), missing, startTime, options, (err, filesModified, dirsModified, missingModified, fileTimestamps, dirTimestamps) => {\r\n\t\t\tif(err) return callback(err);\r\n\r\n\t\t\tignoredFiles.forEach(path => {\r\n\t\t\t\tfileTimestamps[path] = 1;\r\n\t\t\t});\r\n\r\n\t\t\tignoredDirs.forEach(path => {\r\n\t\t\t\tdirTimestamps[path] = 1;\r\n\t\t\t});\r\n\r\n\t\t\tcallback(err, filesModified, dirsModified, missingModified, fileTimestamps, dirTimestamps);\r\n\t\t}, callbackUndelayed);\r\n\t}\r\n}\r\n","/home/travis/build/npmtest/node-npmtest-webpack/node_modules/webpack/lib/BannerPlugin.js":"/*\r\n MIT License http://www.opensource.org/licenses/mit-license.php\r\n Author Tobias Koppers @sokra\r\n */\r\n\r\n\"use strict\";\r\n\r\nconst ConcatSource = require(\"webpack-sources\").ConcatSource;\r\nconst ModuleFilenameHelpers = require(\"./ModuleFilenameHelpers\");\r\n\r\nfunction wrapComment(str) {\r\n\tif(!str.includes(\"\\n\")) return `/*! ${str} */`;\r\n\treturn `/*!\\n * ${str.split(\"\\n\").join(\"\\n * \")}\\n */`;\r\n}\r\n\r\nclass BannerPlugin {\r\n\tconstructor(options) {\r\n\t\tif(arguments.length > 1)\r\n\t\t\tthrow new Error(\"BannerPlugin only takes one argument (pass an options object)\");\r\n\t\tif(typeof options === \"string\")\r\n\t\t\toptions = {\r\n\t\t\t\tbanner: options\r\n\t\t\t};\r\n\t\tthis.options = options || {};\r\n\t\tthis.banner = this.options.raw ? options.banner : wrapComment(options.banner);\r\n\t}\r\n\r\n\tapply(compiler) {\r\n\t\tconst options = this.options;\r\n\t\tconst banner = this.banner;\r\n\r\n\t\tcompiler.plugin(\"compilation\", (compilation) => {\r\n\t\t\tcompilation.plugin(\"optimize-chunk-assets\", (chunks, callback) => {\r\n\t\t\t\tchunks.forEach((chunk) => {\r\n\t\t\t\t\tif(options.entryOnly && !chunk.isInitial()) return;\r\n\r\n\t\t\t\t\tchunk.files\r\n\t\t\t\t\t\t.filter(ModuleFilenameHelpers.matchObject.bind(undefined, options))\r\n\t\t\t\t\t\t.forEach((file) =>\r\n\t\t\t\t\t\t\tcompilation.assets[file] = new ConcatSource(\r\n\t\t\t\t\t\t\t\tbanner, \"\\n\", compilation.assets[file]\r\n\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t);\r\n\t\t\t\t});\r\n\t\t\t\tcallback();\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n}\r\n\r\nmodule.exports = BannerPlugin;\r\n","/home/travis/build/npmtest/node-npmtest-webpack/node_modules/webpack/lib/PrefetchPlugin.js":"/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\n\"use strict\";\r\nconst PrefetchDependency = require(\"./dependencies/PrefetchDependency\");\r\n\r\nclass PrefetchPlugin {\r\n\r\n\tconstructor(context, request) {\r\n\t\tif(!request) {\r\n\t\t\tthis.request = context;\r\n\t\t} else {\r\n\t\t\tthis.context = context;\r\n\t\t\tthis.request = request;\r\n\t\t}\r\n\t}\r\n\r\n\tapply(compiler) {\r\n\t\tcompiler.plugin(\"compilation\", (compilation, params) => {\r\n\t\t\tconst normalModuleFactory = params.normalModuleFactory;\r\n\r\n\t\t\tcompilation.dependencyFactories.set(PrefetchDependency, normalModuleFactory);\r\n\t\t});\r\n\t\tcompiler.plugin(\"make\", (compilation, callback) => {\r\n\t\t\tcompilation.prefetch(this.context || compiler.context, new PrefetchDependency(this.request), callback);\r\n\t\t});\r\n\t}\r\n\r\n}\r\nmodule.exports = PrefetchPlugin;\r\n","/home/travis/build/npmtest/node-npmtest-webpack/node_modules/webpack/lib/dependencies/PrefetchDependency.js":"/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\n\"use strict\";\r\nconst ModuleDependency = require(\"./ModuleDependency\");\r\n\r\nclass PrefetchDependency extends ModuleDependency {\r\n\tconstructor(request) {\r\n\t\tsuper(request);\r\n\t}\r\n\r\n\tget type() {\r\n\t\treturn \"prefetch\";\r\n\t}\r\n}\r\n\r\nmodule.exports = PrefetchDependency;\r\n","/home/travis/build/npmtest/node-npmtest-webpack/node_modules/webpack/lib/AutomaticPrefetchPlugin.js":"/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\n\"use strict\";\r\n\r\nconst asyncLib = require(\"async\");\r\nconst PrefetchDependency = require(\"./dependencies/PrefetchDependency\");\r\nconst NormalModule = require(\"./NormalModule\");\r\n\r\nclass AutomaticPrefetchPlugin {\r\n\tapply(compiler) {\r\n\t\tcompiler.plugin(\"compilation\", (compilation, params) => {\r\n\t\t\tconst normalModuleFactory = params.normalModuleFactory;\r\n\r\n\t\t\tcompilation.dependencyFactories.set(PrefetchDependency, normalModuleFactory);\r\n\t\t});\r\n\t\tlet lastModules = null;\r\n\t\tcompiler.plugin(\"after-compile\", (compilation, callback) => {\r\n\t\t\tlastModules = compilation.modules\r\n\t\t\t\t.filter(m => m instanceof NormalModule)\r\n\t\t\t\t.map(m => ({\r\n\t\t\t\t\tcontext: m.context,\r\n\t\t\t\t\trequest: m.request\r\n\t\t\t\t}));\r\n\t\t\tcallback();\r\n\t\t});\r\n\t\tcompiler.plugin(\"make\", (compilation, callback) => {\r\n\t\t\tif(!lastModules) return callback();\r\n\t\t\tasyncLib.forEach(lastModules, (m, callback) => {\r\n\t\t\t\tcompilation.prefetch(m.context || compiler.context, new PrefetchDependency(m.request), callback);\r\n\t\t\t}, callback);\r\n\t\t});\r\n\t}\r\n}\r\nmodule.exports = AutomaticPrefetchPlugin;\r\n","/home/travis/build/npmtest/node-npmtest-webpack/node_modules/webpack/lib/ProvidePlugin.js":"/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\n\"use strict\";\r\n\r\nconst ParserHelpers = require(\"./ParserHelpers\");\r\nconst ConstDependency = require(\"./dependencies/ConstDependency\");\r\n\r\nconst NullFactory = require(\"./NullFactory\");\r\n\r\nclass ProvidePlugin {\r\n\tconstructor(definitions) {\r\n\t\tthis.definitions = definitions;\r\n\t}\r\n\r\n\tapply(compiler) {\r\n\t\tconst definitions = this.definitions;\r\n\t\tcompiler.plugin(\"compilation\", (compilation, params) => {\r\n\t\t\tcompilation.dependencyFactories.set(ConstDependency, new NullFactory());\r\n\t\t\tcompilation.dependencyTemplates.set(ConstDependency, new ConstDependency.Template());\r\n\t\t\tparams.normalModuleFactory.plugin(\"parser\", (parser, parserOptions) => {\r\n\t\t\t\tObject.keys(definitions).forEach(name => {\r\n\t\t\t\t\tvar request = [].concat(definitions[name]);\r\n\t\t\t\t\tvar splittedName = name.split(\".\");\r\n\t\t\t\t\tif(splittedName.length > 0) {\r\n\t\t\t\t\t\tsplittedName.slice(1).forEach((_, i) => {\r\n\t\t\t\t\t\t\tconst name = splittedName.slice(0, i + 1).join(\".\");\r\n\t\t\t\t\t\t\tparser.plugin(`can-rename ${name}`, ParserHelpers.approve);\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\t\t\t\t\tparser.plugin(`expression ${name}`, function(expr) {\r\n\t\t\t\t\t\tlet nameIdentifier = name;\r\n\t\t\t\t\t\tconst scopedName = name.indexOf(\".\") >= 0;\r\n\t\t\t\t\t\tlet expression = `require(${JSON.stringify(request[0])})`;\r\n\t\t\t\t\t\tif(scopedName) {\r\n\t\t\t\t\t\t\tnameIdentifier = `__webpack_provided_${name.replace(/\\./g, \"_dot_\")}`;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif(request.length > 1) {\r\n\t\t\t\t\t\t\texpression += request.slice(1).map(r => `[${JSON.stringify(r)}]`).join(\"\");\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif(!ParserHelpers.addParsedVariableToModule(this, nameIdentifier, expression)) {\r\n\t\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif(scopedName) {\r\n\t\t\t\t\t\t\tParserHelpers.toConstantDependency(nameIdentifier).bind(this)(expr);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\treturn true;\r\n\t\t\t\t\t});\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n}\r\nmodule.exports = ProvidePlugin;\r\n","/home/travis/build/npmtest/node-npmtest-webpack/node_modules/webpack/lib/HotModuleReplacementPlugin.js":"/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\n\"use strict\";\r\nvar Template = require(\"./Template\");\r\nvar ModuleHotAcceptDependency = require(\"./dependencies/ModuleHotAcceptDependency\");\r\nvar ModuleHotDeclineDependency = require(\"./dependencies/ModuleHotDeclineDependency\");\r\nvar RawSource = require(\"webpack-sources\").RawSource;\r\nvar ConstDependency = require(\"./dependencies/ConstDependency\");\r\nvar NullFactory = require(\"./NullFactory\");\r\nconst ParserHelpers = require(\"./ParserHelpers\");\r\n\r\nfunction HotModuleReplacementPlugin(options) {\r\n\toptions = options || {};\r\n\tthis.multiStep = options.multiStep;\r\n\tthis.fullBuildTimeout = options.fullBuildTimeout || 200;\r\n}\r\nmodule.exports = HotModuleReplacementPlugin;\r\n\r\nHotModuleReplacementPlugin.prototype.apply = function(compiler) {\r\n\tvar multiStep = this.multiStep;\r\n\tvar fullBuildTimeout = this.fullBuildTimeout;\r\n\tvar hotUpdateChunkFilename = compiler.options.output.hotUpdateChunkFilename;\r\n\tvar hotUpdateMainFilename = compiler.options.output.hotUpdateMainFilename;\r\n\tcompiler.plugin(\"compilation\", function(compilation, params) {\r\n\t\tvar hotUpdateChunkTemplate = compilation.hotUpdateChunkTemplate;\r\n\t\tif(!hotUpdateChunkTemplate) return;\r\n\r\n\t\tvar normalModuleFactory = params.normalModuleFactory;\r\n\r\n\t\tcompilation.dependencyFactories.set(ConstDependency, new NullFactory());\r\n\t\tcompilation.dependencyTemplates.set(ConstDependency, new ConstDependency.Template());\r\n\r\n\t\tcompilation.dependencyFactories.set(ModuleHotAcceptDependency, normalModuleFactory);\r\n\t\tcompilation.dependencyTemplates.set(ModuleHotAcceptDependency, new ModuleHotAcceptDependency.Template());\r\n\r\n\t\tcompilation.dependencyFactories.set(ModuleHotDeclineDependency, normalModuleFactory);\r\n\t\tcompilation.dependencyTemplates.set(ModuleHotDeclineDependency, new ModuleHotDeclineDependency.Template());\r\n\r\n\t\tcompilation.plugin(\"record\", function(compilation, records) {\r\n\t\t\tif(records.hash === this.hash) return;\r\n\t\t\trecords.hash = compilation.hash;\r\n\t\t\trecords.moduleHashs = {};\r\n\t\t\tthis.modules.forEach(function(module) {\r\n\t\t\t\tvar identifier = module.identifier();\r\n\t\t\t\tvar hash = require(\"crypto\").createHash(\"md5\");\r\n\t\t\t\tmodule.updateHash(hash);\r\n\t\t\t\trecords.moduleHashs[identifier] = hash.digest(\"hex\");\r\n\t\t\t});\r\n\t\t\trecords.chunkHashs = {};\r\n\t\t\tthis.chunks.forEach(function(chunk) {\r\n\t\t\t\trecords.chunkHashs[chunk.id] = chunk.hash;\r\n\t\t\t});\r\n\t\t\trecords.chunkModuleIds = {};\r\n\t\t\tthis.chunks.forEach(function(chunk) {\r\n\t\t\t\trecords.chunkModuleIds[chunk.id] = chunk.modules.map(function(m) {\r\n\t\t\t\t\treturn m.id;\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t});\r\n\t\tvar initialPass = false;\r\n\t\tvar recompilation = false;\r\n\t\tcompilation.plugin(\"after-hash\", function() {\r\n\t\t\tvar records = this.records;\r\n\t\t\tif(!records) {\r\n\t\t\t\tinitialPass = true;\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tif(!records.hash)\r\n\t\t\t\tinitialPass = true;\r\n\t\t\tvar preHash = records.preHash || \"x\";\r\n\t\t\tvar prepreHash = records.prepreHash || \"x\";\r\n\t\t\tif(preHash === this.hash) {\r\n\t\t\t\trecompilation = true;\r\n\t\t\t\tthis.modifyHash(prepreHash);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\trecords.prepreHash = records.hash || \"x\";\r\n\t\t\trecords.preHash = this.hash;\r\n\t\t\tthis.modifyHash(records.prepreHash);\r\n\t\t});\r\n\t\tcompilation.plugin(\"should-generate-chunk-assets\", function() {\r\n\t\t\tif(multiStep && !recompilation && !initialPass)\r\n\t\t\t\treturn false;\r\n\t\t});\r\n\t\tcompilation.plugin(\"need-additional-pass\", function() {\r\n\t\t\tif(multiStep && !recompilation && !initialPass)\r\n\t\t\t\treturn true;\r\n\t\t});\r\n\t\tcompiler.plugin(\"additional-pass\", function(callback) {\r\n\t\t\tif(multiStep)\r\n\t\t\t\treturn setTimeout(callback, fullBuildTimeout);\r\n\t\t\treturn callback();\r\n\t\t});\r\n\t\tcompilation.plugin(\"additional-chunk-assets\", function() {\r\n\t\t\tvar records = this.records;\r\n\t\t\tif(records.hash === this.hash) return;\r\n\t\t\tif(!records.moduleHashs || !records.chunkHashs || !records.chunkModuleIds) return;\r\n\t\t\tthis.modules.forEach(function(module) {\r\n\t\t\t\tvar identifier = module.identifier();\r\n\t\t\t\tvar hash = require(\"crypto\").createHash(\"md5\");\r\n\t\t\t\tmodule.updateHash(hash);\r\n\t\t\t\thash = hash.digest(\"hex\");\r\n\t\t\t\tmodule.hotUpdate = records.moduleHashs[identifier] !== hash;\r\n\t\t\t});\r\n\t\t\tvar hotUpdateMainContent = {\r\n\t\t\t\th: this.hash,\r\n\t\t\t\tc: {}\r\n\t\t\t};\r\n\t\t\tObject.keys(records.chunkHashs).forEach(function(chunkId) {\r\n\t\t\t\tchunkId = isNaN(+chunkId) ? chunkId : +chunkId;\r\n\t\t\t\tvar currentChunk = this.chunks.find(chunk => chunk.id === chunkId);\r\n\t\t\t\tif(currentChunk) {\r\n\t\t\t\t\tvar newModules = currentChunk.modules.filter(function(module) {\r\n\t\t\t\t\t\treturn module.hotUpdate;\r\n\t\t\t\t\t});\r\n\t\t\t\t\tvar allModules = {};\r\n\t\t\t\t\tcurrentChunk.modules.forEach(function(module) {\r\n\t\t\t\t\t\tallModules[module.id] = true;\r\n\t\t\t\t\t});\r\n\t\t\t\t\tvar removedModules = records.chunkModuleIds[chunkId].filter(function(id) {\r\n\t\t\t\t\t\treturn !allModules[id];\r\n\t\t\t\t\t});\r\n\t\t\t\t\tif(newModules.length > 0 || removedModules.length > 0) {\r\n\t\t\t\t\t\tvar source = hotUpdateChunkTemplate.render(chunkId, newModules, removedModules, this.hash, this.moduleTemplate, this.dependencyTemplates);\r\n\t\t\t\t\t\tvar filename = this.getPath(hotUpdateChunkFilename, {\r\n\t\t\t\t\t\t\thash: records.hash,\r\n\t\t\t\t\t\t\tchunk: currentChunk\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t\tthis.additionalChunkAssets.push(filename);\r\n\t\t\t\t\t\tthis.assets[filename] = source;\r\n\t\t\t\t\t\thotUpdateMainContent.c[chunkId] = true;\r\n\t\t\t\t\t\tcurrentChunk.files.push(filename);\r\n\t\t\t\t\t\tthis.applyPlugins(\"chunk-asset\", currentChunk, filename);\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\thotUpdateMainContent.c[chunkId] = false;\r\n\t\t\t\t}\r\n\t\t\t}, this);\r\n\t\t\tvar source = new RawSource(JSON.stringify(hotUpdateMainContent));\r\n\t\t\tvar filename = this.getPath(hotUpdateMainFilename, {\r\n\t\t\t\thash: records.hash\r\n\t\t\t});\r\n\t\t\tthis.assets[filename] = source;\r\n\t\t});\r\n\r\n\t\tcompilation.mainTemplate.plugin(\"hash\", function(hash) {\r\n\t\t\thash.update(\"HotMainTemplateDecorator\");\r\n\t\t});\r\n\r\n\t\tcompilation.mainTemplate.plugin(\"module-require\", function(_, chunk, hash, varModuleId) {\r\n\t\t\treturn \"hotCreateRequire(\" + varModuleId + \")\";\r\n\t\t});\r\n\r\n\t\tcompilation.mainTemplate.plugin(\"require-extensions\", function(source) {\r\n\t\t\tvar buf = [source];\r\n\t\t\tbuf.push(\"\");\r\n\t\t\tbuf.push(\"// __webpack_hash__\");\r\n\t\t\tbuf.push(this.requireFn + \".h = function() { return hotCurrentHash; };\");\r\n\t\t\treturn this.asString(buf);\r\n\t\t});\r\n\r\n\t\tcompilation.mainTemplate.plugin(\"bootstrap\", function(source, chunk, hash) {\r\n\t\t\tsource = this.applyPluginsWaterfall(\"hot-bootstrap\", source, chunk, hash);\r\n\t\t\treturn this.asString([\r\n\t\t\t\tsource,\r\n\t\t\t\t\"\",\r\n\t\t\t\thotInitCode\r\n\t\t\t\t.replace(/\\$require\\$/g, this.requireFn)\r\n\t\t\t\t.replace(/\\$hash\\$/g, JSON.stringify(hash))\r\n\t\t\t\t.replace(/\\/\\*foreachInstalledChunks\\*\\//g, chunk.chunks.length > 0 ? \"for(var chunkId in installedChunks)\" : \"var chunkId = \" + JSON.stringify(chunk.id) + \";\")\r\n\t\t\t]);\r\n\t\t});\r\n\r\n\t\tcompilation.mainTemplate.plugin(\"global-hash\", function() {\r\n\t\t\treturn true;\r\n\t\t});\r\n\r\n\t\tcompilation.mainTemplate.plugin(\"current-hash\", function(_, length) {\r\n\t\t\tif(isFinite(length))\r\n\t\t\t\treturn \"hotCurrentHash.substr(0, \" + length + \")\";\r\n\t\t\telse\r\n\t\t\t\treturn \"hotCurrentHash\";\r\n\t\t});\r\n\r\n\t\tcompilation.mainTemplate.plugin(\"module-obj\", function(source, chunk, hash, varModuleId) {\r\n\t\t\treturn this.asString([\r\n\t\t\t\tsource + \",\",\r\n\t\t\t\t\"hot: hotCreateModule(\" + varModuleId + \"),\",\r\n\t\t\t\t\"parents: (hotCurrentParentsTemp = hotCurrentParents, hotCurrentParents = [], hotCurrentParentsTemp),\",\r\n\t\t\t\t\"children: []\"\r\n\t\t\t]);\r\n\t\t});\r\n\r\n\t\tparams.normalModuleFactory.plugin(\"parser\", function(parser, parserOptions) {\r\n\t\t\tparser.plugin(\"expression __webpack_hash__\", ParserHelpers.toConstantDependency(\"__webpack_require__.h()\"));\r\n\t\t\tparser.plugin(\"evaluate typeof __webpack_hash__\", ParserHelpers.evaluateToString(\"string\"));\r\n\t\t\tparser.plugin(\"evaluate Identifier module.hot\", function(expr) {\r\n\t\t\t\treturn ParserHelpers.evaluateToBoolean(!!this.state.compilation.hotUpdateChunkTemplate)(expr);\r\n\t\t\t});\r\n\t\t\tparser.plugin(\"call module.hot.accept\", function(expr) {\r\n\t\t\t\tif(!this.state.compilation.hotUpdateChunkTemplate) return false;\r\n\t\t\t\tif(expr.arguments.length >= 1) {\r\n\t\t\t\t\tvar arg = this.evaluateExpression(expr.arguments[0]);\r\n\t\t\t\t\tvar params = [],\r\n\t\t\t\t\t\trequests = [];\r\n\t\t\t\t\tif(arg.isString()) {\r\n\t\t\t\t\t\tparams = [arg];\r\n\t\t\t\t\t} else if(arg.isArray()) {\r\n\t\t\t\t\t\tparams = arg.items.filter(function(param) {\r\n\t\t\t\t\t\t\treturn param.isString();\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif(params.length > 0) {\r\n\t\t\t\t\t\tparams.forEach(function(param, idx) {\r\n\t\t\t\t\t\t\tvar request = param.string;\r\n\t\t\t\t\t\t\tvar dep = new ModuleHotAcceptDependency(request, param.range);\r\n\t\t\t\t\t\t\tdep.optional = true;\r\n\t\t\t\t\t\t\tdep.loc = Object.create(expr.loc);\r\n\t\t\t\t\t\t\tdep.loc.index = idx;\r\n\t\t\t\t\t\t\tthis.state.module.addDependency(dep);\r\n\t\t\t\t\t\t\trequests.push(request);\r\n\t\t\t\t\t\t}.bind(this));\r\n\t\t\t\t\t\tif(expr.arguments.length > 1)\r\n\t\t\t\t\t\t\tthis.applyPluginsBailResult(\"hot accept callback\", expr.arguments[1], requests);\r\n\t\t\t\t\t\telse\r\n\t\t\t\t\t\t\tthis.applyPluginsBailResult(\"hot accept without callback\", expr, requests);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\tparser.plugin(\"call module.hot.decline\", function(expr) {\r\n\t\t\t\tif(!this.state.compilation.hotUpdateChunkTemplate) return false;\r\n\t\t\t\tif(expr.arguments.length === 1) {\r\n\t\t\t\t\tvar arg = this.evaluateExpression(expr.arguments[0]);\r\n\t\t\t\t\tvar params = [];\r\n\t\t\t\t\tif(arg.isString()) {\r\n\t\t\t\t\t\tparams = [arg];\r\n\t\t\t\t\t} else if(arg.isArray()) {\r\n\t\t\t\t\t\tparams = arg.items.filter(function(param) {\r\n\t\t\t\t\t\t\treturn param.isString();\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\t\t\t\t\tparams.forEach(function(param, idx) {\r\n\t\t\t\t\t\tvar dep = new ModuleHotDeclineDependency(param.string, param.range);\r\n\t\t\t\t\t\tdep.optional = true;\r\n\t\t\t\t\t\tdep.loc = Object.create(expr.loc);\r\n\t\t\t\t\t\tdep.loc.index = idx;\r\n\t\t\t\t\t\tthis.state.module.addDependency(dep);\r\n\t\t\t\t\t}.bind(this));\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\tparser.plugin(\"expression module.hot\", ParserHelpers.skipTraversal);\r\n\t\t});\r\n\t});\r\n\r\n};\r\n\r\nvar hotInitCode = Template.getFunctionContent(require(\"./HotModuleReplacement.runtime.js\"));\r\n","/home/travis/build/npmtest/node-npmtest-webpack/node_modules/webpack/lib/dependencies/ModuleHotAcceptDependency.js":"/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\n\"use strict\";\r\nconst ModuleDependency = require(\"./ModuleDependency\");\r\nconst ModuleDependencyTemplateAsId = require(\"./ModuleDependencyTemplateAsId\");\r\n\r\nclass ModuleHotAcceptDependency extends ModuleDependency {\r\n\tconstructor(request, range) {\r\n\t\tsuper(request);\r\n\t\tthis.range = range;\r\n\t\tthis.weak = true;\r\n\t}\r\n\r\n\tget type() {\r\n\t\treturn \"module.hot.accept\";\r\n\t}\r\n}\r\n\r\nModuleHotAcceptDependency.Template = ModuleDependencyTemplateAsId;\r\n\r\nmodule.exports = ModuleHotAcceptDependency;\r\n","/home/travis/build/npmtest/node-npmtest-webpack/node_modules/webpack/lib/dependencies/ModuleHotDeclineDependency.js":"/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\n\"use strict\";\r\nconst ModuleDependency = require(\"./ModuleDependency\");\r\nconst ModuleDependencyTemplateAsId = require(\"./ModuleDependencyTemplateAsId\");\r\n\r\nclass ModuleHotDeclineDependency extends ModuleDependency {\r\n\tconstructor(request, range) {\r\n\t\tsuper(request);\r\n\t\tthis.range = range;\r\n\t\tthis.weak = true;\r\n\t}\r\n\r\n\tget type() {\r\n\t\treturn \"module.hot.decline\";\r\n\t}\r\n}\r\n\r\nModuleHotDeclineDependency.Template = ModuleDependencyTemplateAsId;\r\n\r\nmodule.exports = ModuleHotDeclineDependency;\r\n","/home/travis/build/npmtest/node-npmtest-webpack/node_modules/webpack/lib/HotModuleReplacement.runtime.js":"/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\n/*global $hash$ installedModules $require$ hotDownloadManifest hotDownloadUpdateChunk hotDisposeChunk modules */\r\nmodule.exports = function() {\r\n\r\n\tvar hotApplyOnUpdate = true;\r\n\tvar hotCurrentHash = $hash$; // eslint-disable-line no-unused-vars\r\n\tvar hotCurrentModuleData = {};\r\n\tvar hotCurrentChildModule; // eslint-disable-line no-unused-vars\r\n\tvar hotCurrentParents = []; // eslint-disable-line no-unused-vars\r\n\tvar hotCurrentParentsTemp = []; // eslint-disable-line no-unused-vars\r\n\r\n\tfunction hotCreateRequire(moduleId) { // eslint-disable-line no-unused-vars\r\n\t\tvar me = installedModules[moduleId];\r\n\t\tif(!me) return $require$;\r\n\t\tvar fn = function(request) {\r\n\t\t\tif(me.hot.active) {\r\n\t\t\t\tif(installedModules[request]) {\r\n\t\t\t\t\tif(installedModules[request].parents.indexOf(moduleId) < 0)\r\n\t\t\t\t\t\tinstalledModules[request].parents.push(moduleId);\r\n\t\t\t\t} else {\r\n\t\t\t\t\thotCurrentParents = [moduleId];\r\n\t\t\t\t\thotCurrentChildModule = request;\r\n\t\t\t\t}\r\n\t\t\t\tif(me.children.indexOf(request) < 0)\r\n\t\t\t\t\tme.children.push(request);\r\n\t\t\t} else {\r\n\t\t\t\tconsole.warn(\"[HMR] unexpected require(\" + request + \") from disposed module \" + moduleId);\r\n\t\t\t\thotCurrentParents = [];\r\n\t\t\t}\r\n\t\t\treturn $require$(request);\r\n\t\t};\r\n\t\tvar ObjectFactory = function ObjectFactory(name) {\r\n\t\t\treturn {\r\n\t\t\t\tconfigurable: true,\r\n\t\t\t\tenumerable: true,\r\n\t\t\t\tget: function() {\r\n\t\t\t\t\treturn $require$[name];\r\n\t\t\t\t},\r\n\t\t\t\tset: function(value) {\r\n\t\t\t\t\t$require$[name] = value;\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t};\r\n\t\tfor(var name in $require$) {\r\n\t\t\tif(Object.prototype.hasOwnProperty.call($require$, name) && name !== \"e\") {\r\n\t\t\t\tObject.defineProperty(fn, name, ObjectFactory(name));\r\n\t\t\t}\r\n\t\t}\r\n\t\tfn.e = function(chunkId) {\r\n\t\t\tif(hotStatus === \"ready\")\r\n\t\t\t\thotSetStatus(\"prepare\");\r\n\t\t\thotChunksLoading++;\r\n\t\t\treturn $require$.e(chunkId).then(finishChunkLoading, function(err) {\r\n\t\t\t\tfinishChunkLoading();\r\n\t\t\t\tthrow err;\r\n\t\t\t});\r\n\r\n\t\t\tfunction finishChunkLoading() {\r\n\t\t\t\thotChunksLoading--;\r\n\t\t\t\tif(hotStatus === \"prepare\") {\r\n\t\t\t\t\tif(!hotWaitingFilesMap[chunkId]) {\r\n\t\t\t\t\t\thotEnsureUpdateChunk(chunkId);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif(hotChunksLoading === 0 && hotWaitingFiles === 0) {\r\n\t\t\t\t\t\thotUpdateDownloaded();\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t};\r\n\t\treturn fn;\r\n\t}\r\n\r\n\tfunction hotCreateModule(moduleId) { // eslint-disable-line no-unused-vars\r\n\t\tvar hot = {\r\n\t\t\t// private stuff\r\n\t\t\t_acceptedDependencies: {},\r\n\t\t\t_declinedDependencies: {},\r\n\t\t\t_selfAccepted: false,\r\n\t\t\t_selfDeclined: false,\r\n\t\t\t_disposeHandlers: [],\r\n\t\t\t_main: hotCurrentChildModule !== moduleId,\r\n\r\n\t\t\t// Module API\r\n\t\t\tactive: true,\r\n\t\t\taccept: function(dep, callback) {\r\n\t\t\t\tif(typeof dep === \"undefined\")\r\n\t\t\t\t\thot._selfAccepted = true;\r\n\t\t\t\telse if(typeof dep === \"function\")\r\n\t\t\t\t\thot._selfAccepted = dep;\r\n\t\t\t\telse if(typeof dep === \"object\")\r\n\t\t\t\t\tfor(var i = 0; i < dep.length; i++)\r\n\t\t\t\t\t\thot._acceptedDependencies[dep[i]] = callback || function() {};\r\n\t\t\t\telse\r\n\t\t\t\t\thot._acceptedDependencies[dep] = callback || function() {};\r\n\t\t\t},\r\n\t\t\tdecline: function(dep) {\r\n\t\t\t\tif(typeof dep === \"undefined\")\r\n\t\t\t\t\thot._selfDeclined = true;\r\n\t\t\t\telse if(typeof dep === \"object\")\r\n\t\t\t\t\tfor(var i = 0; i < dep.length; i++)\r\n\t\t\t\t\t\thot._declinedDependencies[dep[i]] = true;\r\n\t\t\t\telse\r\n\t\t\t\t\thot._declinedDependencies[dep] = true;\r\n\t\t\t},\r\n\t\t\tdispose: function(callback) {\r\n\t\t\t\thot._disposeHandlers.push(callback);\r\n\t\t\t},\r\n\t\t\taddDisposeHandler: function(callback) {\r\n\t\t\t\thot._disposeHandlers.push(callback);\r\n\t\t\t},\r\n\t\t\tremoveDisposeHandler: function(callback) {\r\n\t\t\t\tvar idx = hot._disposeHandlers.indexOf(callback);\r\n\t\t\t\tif(idx >= 0) hot._disposeHandlers.splice(idx, 1);\r\n\t\t\t},\r\n\r\n\t\t\t// Management API\r\n\t\t\tcheck: hotCheck,\r\n\t\t\tapply: hotApply,\r\n\t\t\tstatus: function(l) {\r\n\t\t\t\tif(!l) return hotStatus;\r\n\t\t\t\thotStatusHandlers.push(l);\r\n\t\t\t},\r\n\t\t\taddStatusHandler: function(l) {\r\n\t\t\t\thotStatusHandlers.push(l);\r\n\t\t\t},\r\n\t\t\tremoveStatusHandler: function(l) {\r\n\t\t\t\tvar idx = hotStatusHandlers.indexOf(l);\r\n\t\t\t\tif(idx >= 0) hotStatusHandlers.splice(idx, 1);\r\n\t\t\t},\r\n\r\n\t\t\t//inherit from previous dispose call\r\n\t\t\tdata: hotCurrentModuleData[moduleId]\r\n\t\t};\r\n\t\thotCurrentChildModule = undefined;\r\n\t\treturn hot;\r\n\t}\r\n\r\n\tvar hotStatusHandlers = [];\r\n\tvar hotStatus = \"idle\";\r\n\r\n\tfunction hotSetStatus(newStatus) {\r\n\t\thotStatus = newStatus;\r\n\t\tfor(var i = 0; i < hotStatusHandlers.length; i++)\r\n\t\t\thotStatusHandlers[i].call(null, newStatus);\r\n\t}\r\n\r\n\t// while downloading\r\n\tvar hotWaitingFiles = 0;\r\n\tvar hotChunksLoading = 0;\r\n\tvar hotWaitingFilesMap = {};\r\n\tvar hotRequestedFilesMap = {};\r\n\tvar hotAvailableFilesMap = {};\r\n\tvar hotDeferred;\r\n\r\n\t// The update info\r\n\tvar hotUpdate, hotUpdateNewHash;\r\n\r\n\tfunction toModuleId(id) {\r\n\t\tvar isNumber = (+id) + \"\" === id;\r\n\t\treturn isNumber ? +id : id;\r\n\t}\r\n\r\n\tfunction hotCheck(apply) {\r\n\t\tif(hotStatus !== \"idle\") throw new Error(\"check() is only allowed in idle status\");\r\n\t\thotApplyOnUpdate = apply;\r\n\t\thotSetStatus(\"check\");\r\n\t\treturn hotDownloadManifest().then(function(update) {\r\n\t\t\tif(!update) {\r\n\t\t\t\thotSetStatus(\"idle\");\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\t\t\thotRequestedFilesMap = {};\r\n\t\t\thotWaitingFilesMap = {};\r\n\t\t\thotAvailableFilesMap = update.c;\r\n\t\t\thotUpdateNewHash = update.h;\r\n\r\n\t\t\thotSetStatus(\"prepare\");\r\n\t\t\tvar promise = new Promise(function(resolve, reject) {\r\n\t\t\t\thotDeferred = {\r\n\t\t\t\t\tresolve: resolve,\r\n\t\t\t\t\treject: reject\r\n\t\t\t\t};\r\n\t\t\t});\r\n\t\t\thotUpdate = {};\r\n\t\t\t/*foreachInstalledChunks*/\r\n\t\t\t{ // eslint-disable-line no-lone-blocks\r\n\t\t\t\t/*globals chunkId */\r\n\t\t\t\thotEnsureUpdateChunk(chunkId);\r\n\t\t\t}\r\n\t\t\tif(hotStatus === \"prepare\" && hotChunksLoading === 0 && hotWaitingFiles === 0) {\r\n\t\t\t\thotUpdateDownloaded();\r\n\t\t\t}\r\n\t\t\treturn promise;\r\n\t\t});\r\n\t}\r\n\r\n\tfunction hotAddUpdateChunk(chunkId, moreModules) { // eslint-disable-line no-unused-vars\r\n\t\tif(!hotAvailableFilesMap[chunkId] || !hotRequestedFilesMap[chunkId])\r\n\t\t\treturn;\r\n\t\thotRequestedFilesMap[chunkId] = false;\r\n\t\tfor(var moduleId in moreModules) {\r\n\t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\r\n\t\t\t\thotUpdate[moduleId] = moreModules[moduleId];\r\n\t\t\t}\r\n\t\t}\r\n\t\tif(--hotWaitingFiles === 0 && hotChunksLoading === 0) {\r\n\t\t\thotUpdateDownloaded();\r\n\t\t}\r\n\t}\r\n\r\n\tfunction hotEnsureUpdateChunk(chunkId) {\r\n\t\tif(!hotAvailableFilesMap[chunkId]) {\r\n\t\t\thotWaitingFilesMap[chunkId] = true;\r\n\t\t} else {\r\n\t\t\thotRequestedFilesMap[chunkId] = true;\r\n\t\t\thotWaitingFiles++;\r\n\t\t\thotDownloadUpdateChunk(chunkId);\r\n\t\t}\r\n\t}\r\n\r\n\tfunction hotUpdateDownloaded() {\r\n\t\thotSetStatus(\"ready\");\r\n\t\tvar deferred = hotDeferred;\r\n\t\thotDeferred = null;\r\n\t\tif(!deferred) return;\r\n\t\tif(hotApplyOnUpdate) {\r\n\t\t\thotApply(hotApplyOnUpdate).then(function(result) {\r\n\t\t\t\tdeferred.resolve(result);\r\n\t\t\t}, function(err) {\r\n\t\t\t\tdeferred.reject(err);\r\n\t\t\t});\r\n\t\t} else {\r\n\t\t\tvar outdatedModules = [];\r\n\t\t\tfor(var id in hotUpdate) {\r\n\t\t\t\tif(Object.prototype.hasOwnProperty.call(hotUpdate, id)) {\r\n\t\t\t\t\toutdatedModules.push(toModuleId(id));\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tdeferred.resolve(outdatedModules);\r\n\t\t}\r\n\t}\r\n\r\n\tfunction hotApply(options) {\r\n\t\tif(hotStatus !== \"ready\") throw new Error(\"apply() is only allowed in ready status\");\r\n\t\toptions = options || {};\r\n\r\n\t\tvar cb;\r\n\t\tvar i;\r\n\t\tvar j;\r\n\t\tvar module;\r\n\t\tvar moduleId;\r\n\r\n\t\tfunction getAffectedStuff(updateModuleId) {\r\n\t\t\tvar outdatedModules = [updateModuleId];\r\n\t\t\tvar outdatedDependencies = {};\r\n\r\n\t\t\tvar queue = outdatedModules.slice().map(function(id) {\r\n\t\t\t\treturn {\r\n\t\t\t\t\tchain: [id],\r\n\t\t\t\t\tid: id\r\n\t\t\t\t};\r\n\t\t\t});\r\n\t\t\twhile(queue.length > 0) {\r\n\t\t\t\tvar queueItem = queue.pop();\r\n\t\t\t\tvar moduleId = queueItem.id;\r\n\t\t\t\tvar chain = queueItem.chain;\r\n\t\t\t\tmodule = installedModules[moduleId];\r\n\t\t\t\tif(!module || module.hot._selfAccepted)\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\tif(module.hot._selfDeclined) {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\ttype: \"self-declined\",\r\n\t\t\t\t\t\tchain: chain,\r\n\t\t\t\t\t\tmoduleId: moduleId\r\n\t\t\t\t\t};\r\n\t\t\t\t}\r\n\t\t\t\tif(module.hot._main) {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\ttype: \"unaccepted\",\r\n\t\t\t\t\t\tchain: chain,\r\n\t\t\t\t\t\tmoduleId: moduleId\r\n\t\t\t\t\t};\r\n\t\t\t\t}\r\n\t\t\t\tfor(var i = 0; i < module.parents.length; i++) {\r\n\t\t\t\t\tvar parentId = module.parents[i];\r\n\t\t\t\t\tvar parent = installedModules[parentId];\r\n\t\t\t\t\tif(!parent) continue;\r\n\t\t\t\t\tif(parent.hot._declinedDependencies[moduleId]) {\r\n\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\ttype: \"declined\",\r\n\t\t\t\t\t\t\tchain: chain.concat([parentId]),\r\n\t\t\t\t\t\t\tmoduleId: moduleId,\r\n\t\t\t\t\t\t\tparentId: parentId\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif(outdatedModules.indexOf(parentId) >= 0) continue;\r\n\t\t\t\t\tif(parent.hot._acceptedDependencies[moduleId]) {\r\n\t\t\t\t\t\tif(!outdatedDependencies[parentId])\r\n\t\t\t\t\t\t\toutdatedDependencies[parentId] = [];\r\n\t\t\t\t\t\taddAllToSet(outdatedDependencies[parentId], [moduleId]);\r\n\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tdelete outdatedDependencies[parentId];\r\n\t\t\t\t\toutdatedModules.push(parentId);\r\n\t\t\t\t\tqueue.push({\r\n\t\t\t\t\t\tchain: chain.concat([parentId]),\r\n\t\t\t\t\t\tid: parentId\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\treturn {\r\n\t\t\t\ttype: \"accepted\",\r\n\t\t\t\tmoduleId: updateModuleId,\r\n\t\t\t\toutdatedModules: outdatedModules,\r\n\t\t\t\toutdatedDependencies: outdatedDependencies\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tfunction addAllToSet(a, b) {\r\n\t\t\tfor(var i = 0; i < b.length; i++) {\r\n\t\t\t\tvar item = b[i];\r\n\t\t\t\tif(a.indexOf(item) < 0)\r\n\t\t\t\t\ta.push(item);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// at begin all updates modules are outdated\r\n\t\t// the \"outdated\" status can propagate to parents if they don't accept the children\r\n\t\tvar outdatedDependencies = {};\r\n\t\tvar outdatedModules = [];\r\n\t\tvar appliedUpdate = {};\r\n\r\n\t\tvar warnUnexpectedRequire = function warnUnexpectedRequire() {\r\n\t\t\tconsole.warn(\"[HMR] unexpected require(\" + result.moduleId + \") to disposed module\");\r\n\t\t};\r\n\r\n\t\tfor(var id in hotUpdate) {\r\n\t\t\tif(Object.prototype.hasOwnProperty.call(hotUpdate, id)) {\r\n\t\t\t\tmoduleId = toModuleId(id);\r\n\t\t\t\tvar result;\r\n\t\t\t\tif(hotUpdate[id]) {\r\n\t\t\t\t\tresult = getAffectedStuff(moduleId);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tresult = {\r\n\t\t\t\t\t\ttype: \"disposed\",\r\n\t\t\t\t\t\tmoduleId: id\r\n\t\t\t\t\t};\r\n\t\t\t\t}\r\n\t\t\t\tvar abortError = false;\r\n\t\t\t\tvar doApply = false;\r\n\t\t\t\tvar doDispose = false;\r\n\t\t\t\tvar chainInfo = \"\";\r\n\t\t\t\tif(result.chain) {\r\n\t\t\t\t\tchainInfo = \"\\nUpdate propagation: \" + result.chain.join(\" -> \");\r\n\t\t\t\t}\r\n\t\t\t\tswitch(result.type) {\r\n\t\t\t\t\tcase \"self-declined\":\r\n\t\t\t\t\t\tif(options.onDeclined)\r\n\t\t\t\t\t\t\toptions.onDeclined(result);\r\n\t\t\t\t\t\tif(!options.ignoreDeclined)\r\n\t\t\t\t\t\t\tabortError = new Error(\"Aborted because of self decline: \" + result.moduleId + chainInfo);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"declined\":\r\n\t\t\t\t\t\tif(options.onDeclined)\r\n\t\t\t\t\t\t\toptions.onDeclined(result);\r\n\t\t\t\t\t\tif(!options.ignoreDeclined)\r\n\t\t\t\t\t\t\tabortError = new Error(\"Aborted because of declined dependency: \" + result.moduleId + \" in \" + result.parentId + chainInfo);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"unaccepted\":\r\n\t\t\t\t\t\tif(options.onUnaccepted)\r\n\t\t\t\t\t\t\toptions.onUnaccepted(result);\r\n\t\t\t\t\t\tif(!options.ignoreUnaccepted)\r\n\t\t\t\t\t\t\tabortError = new Error(\"Aborted because \" + moduleId + \" is not accepted\" + chainInfo);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"accepted\":\r\n\t\t\t\t\t\tif(options.onAccepted)\r\n\t\t\t\t\t\t\toptions.onAccepted(result);\r\n\t\t\t\t\t\tdoApply = true;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"disposed\":\r\n\t\t\t\t\t\tif(options.onDisposed)\r\n\t\t\t\t\t\t\toptions.onDisposed(result);\r\n\t\t\t\t\t\tdoDispose = true;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tdefault:\r\n\t\t\t\t\t\tthrow new Error(\"Unexception type \" + result.type);\r\n\t\t\t\t}\r\n\t\t\t\tif(abortError) {\r\n\t\t\t\t\thotSetStatus(\"abort\");\r\n\t\t\t\t\treturn Promise.reject(abortError);\r\n\t\t\t\t}\r\n\t\t\t\tif(doApply) {\r\n\t\t\t\t\tappliedUpdate[moduleId] = hotUpdate[moduleId];\r\n\t\t\t\t\taddAllToSet(outdatedModules, result.outdatedModules);\r\n\t\t\t\t\tfor(moduleId in result.outdatedDependencies) {\r\n\t\t\t\t\t\tif(Object.prototype.hasOwnProperty.call(result.outdatedDependencies, moduleId)) {\r\n\t\t\t\t\t\t\tif(!outdatedDependencies[moduleId])\r\n\t\t\t\t\t\t\t\toutdatedDependencies[moduleId] = [];\r\n\t\t\t\t\t\t\taddAllToSet(outdatedDependencies[moduleId], result.outdatedDependencies[moduleId]);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tif(doDispose) {\r\n\t\t\t\t\taddAllToSet(outdatedModules, [result.moduleId]);\r\n\t\t\t\t\tappliedUpdate[moduleId] = warnUnexpectedRequire;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Store self accepted outdated modules to require them later by the module system\r\n\t\tvar outdatedSelfAcceptedModules = [];\r\n\t\tfor(i = 0; i < outdatedModules.length; i++) {\r\n\t\t\tmoduleId = outdatedModules[i];\r\n\t\t\tif(installedModules[moduleId] && installedModules[moduleId].hot._selfAccepted)\r\n\t\t\t\toutdatedSelfAcceptedModules.push({\r\n\t\t\t\t\tmodule: moduleId,\r\n\t\t\t\t\terrorHandler: installedModules[moduleId].hot._selfAccepted\r\n\t\t\t\t});\r\n\t\t}\r\n\r\n\t\t// Now in \"dispose\" phase\r\n\t\thotSetStatus(\"dispose\");\r\n\t\tObject.keys(hotAvailableFilesMap).forEach(function(chunkId) {\r\n\t\t\tif(hotAvailableFilesMap[chunkId] === false) {\r\n\t\t\t\thotDisposeChunk(chunkId);\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tvar idx;\r\n\t\tvar queue = outdatedModules.slice();\r\n\t\twhile(queue.length > 0) {\r\n\t\t\tmoduleId = queue.pop();\r\n\t\t\tmodule = installedModules[moduleId];\r\n\t\t\tif(!module) continue;\r\n\r\n\t\t\tvar data = {};\r\n\r\n\t\t\t// Call dispose handlers\r\n\t\t\tvar disposeHandlers = module.hot._disposeHandlers;\r\n\t\t\tfor(j = 0; j < disposeHandlers.length; j++) {\r\n\t\t\t\tcb = disposeHandlers[j];\r\n\t\t\t\tcb(data);\r\n\t\t\t}\r\n\t\t\thotCurrentModuleData[moduleId] = data;\r\n\r\n\t\t\t// disable module (this disables requires from this module)\r\n\t\t\tmodule.hot.active = false;\r\n\r\n\t\t\t// remove module from cache\r\n\t\t\tdelete installedModules[moduleId];\r\n\r\n\t\t\t// remove \"parents\" references from all children\r\n\t\t\tfor(j = 0; j < module.children.length; j++) {\r\n\t\t\t\tvar child = installedModules[module.children[j]];\r\n\t\t\t\tif(!child) continue;\r\n\t\t\t\tidx = child.parents.indexOf(moduleId);\r\n\t\t\t\tif(idx >= 0) {\r\n\t\t\t\t\tchild.parents.splice(idx, 1);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// remove outdated dependency from module children\r\n\t\tvar dependency;\r\n\t\tvar moduleOutdatedDependencies;\r\n\t\tfor(moduleId in outdatedDependencies) {\r\n\t\t\tif(Object.prototype.hasOwnProperty.call(outdatedDependencies, moduleId)) {\r\n\t\t\t\tmodule = installedModules[moduleId];\r\n\t\t\t\tif(module) {\r\n\t\t\t\t\tmoduleOutdatedDependencies = outdatedDependencies[moduleId];\r\n\t\t\t\t\tfor(j = 0; j < moduleOutdatedDependencies.length; j++) {\r\n\t\t\t\t\t\tdependency = moduleOutdatedDependencies[j];\r\n\t\t\t\t\t\tidx = module.children.indexOf(dependency);\r\n\t\t\t\t\t\tif(idx >= 0) module.children.splice(idx, 1);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Not in \"apply\" phase\r\n\t\thotSetStatus(\"apply\");\r\n\r\n\t\thotCurrentHash = hotUpdateNewHash;\r\n\r\n\t\t// insert new code\r\n\t\tfor(moduleId in appliedUpdate) {\r\n\t\t\tif(Object.prototype.hasOwnProperty.call(appliedUpdate, moduleId)) {\r\n\t\t\t\tmodules[moduleId] = appliedUpdate[moduleId];\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// call accept handlers\r\n\t\tvar error = null;\r\n\t\tfor(moduleId in outdatedDependencies) {\r\n\t\t\tif(Object.prototype.hasOwnProperty.call(outdatedDependencies, moduleId)) {\r\n\t\t\t\tmodule = installedModules[moduleId];\r\n\t\t\t\tmoduleOutdatedDependencies = outdatedDependencies[moduleId];\r\n\t\t\t\tvar callbacks = [];\r\n\t\t\t\tfor(i = 0; i < moduleOutdatedDependencies.length; i++) {\r\n\t\t\t\t\tdependency = moduleOutdatedDependencies[i];\r\n\t\t\t\t\tcb = module.hot._acceptedDependencies[dependency];\r\n\t\t\t\t\tif(callbacks.indexOf(cb) >= 0) continue;\r\n\t\t\t\t\tcallbacks.push(cb);\r\n\t\t\t\t}\r\n\t\t\t\tfor(i = 0; i < callbacks.length; i++) {\r\n\t\t\t\t\tcb = callbacks[i];\r\n\t\t\t\t\ttry {\r\n\t\t\t\t\t\tcb(moduleOutdatedDependencies);\r\n\t\t\t\t\t} catch(err) {\r\n\t\t\t\t\t\tif(options.onErrored) {\r\n\t\t\t\t\t\t\toptions.onErrored({\r\n\t\t\t\t\t\t\t\ttype: \"accept-errored\",\r\n\t\t\t\t\t\t\t\tmoduleId: moduleId,\r\n\t\t\t\t\t\t\t\tdependencyId: moduleOutdatedDependencies[i],\r\n\t\t\t\t\t\t\t\terror: err\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif(!options.ignoreErrored) {\r\n\t\t\t\t\t\t\tif(!error)\r\n\t\t\t\t\t\t\t\terror = err;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Load self accepted modules\r\n\t\tfor(i = 0; i < outdatedSelfAcceptedModules.length; i++) {\r\n\t\t\tvar item = outdatedSelfAcceptedModules[i];\r\n\t\t\tmoduleId = item.module;\r\n\t\t\thotCurrentParents = [moduleId];\r\n\t\t\ttry {\r\n\t\t\t\t$require$(moduleId);\r\n\t\t\t} catch(err) {\r\n\t\t\t\tif(typeof item.errorHandler === \"function\") {\r\n\t\t\t\t\ttry {\r\n\t\t\t\t\t\titem.errorHandler(err);\r\n\t\t\t\t\t} catch(err2) {\r\n\t\t\t\t\t\tif(options.onErrored) {\r\n\t\t\t\t\t\t\toptions.onErrored({\r\n\t\t\t\t\t\t\t\ttype: \"self-accept-error-handler-errored\",\r\n\t\t\t\t\t\t\t\tmoduleId: moduleId,\r\n\t\t\t\t\t\t\t\terror: err2,\r\n\t\t\t\t\t\t\t\torginalError: err\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif(!options.ignoreErrored) {\r\n\t\t\t\t\t\t\tif(!error)\r\n\t\t\t\t\t\t\t\terror = err2;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif(!error)\r\n\t\t\t\t\t\t\terror = err;\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tif(options.onErrored) {\r\n\t\t\t\t\t\toptions.onErrored({\r\n\t\t\t\t\t\t\ttype: \"self-accept-errored\",\r\n\t\t\t\t\t\t\tmoduleId: moduleId,\r\n\t\t\t\t\t\t\terror: err\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif(!options.ignoreErrored) {\r\n\t\t\t\t\t\tif(!error)\r\n\t\t\t\t\t\t\terror = err;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// handle errors in accept handlers and self accepted module load\r\n\t\tif(error) {\r\n\t\t\thotSetStatus(\"fail\");\r\n\t\t\treturn Promise.reject(error);\r\n\t\t}\r\n\r\n\t\thotSetStatus(\"idle\");\r\n\t\treturn Promise.resolve(outdatedModules);\r\n\t}\r\n};\r\n","/home/travis/build/npmtest/node-npmtest-webpack/node_modules/webpack/lib/CachePlugin.js":"/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\n\"use strict\";\r\n\r\nconst asyncLib = require(\"async\");\r\n\r\nclass CachePlugin {\r\n\tconstructor(cache) {\r\n\t\tthis.cache = cache || {};\r\n\t\tthis.FS_ACCURENCY = 2000;\r\n\t}\r\n\r\n\tapply(compiler) {\r\n\t\tif(Array.isArray(compiler.compilers)) {\r\n\t\t\tcompiler.compilers.forEach((c, idx) => {\r\n\t\t\t\tc.apply(new CachePlugin(this.cache[idx] = this.cache[idx] || {}));\r\n\t\t\t});\r\n\t\t} else {\r\n\t\t\tcompiler.plugin(\"compilation\", compilation => {\r\n\t\t\t\tif(!compilation.notCacheable) {\r\n\t\t\t\t\tcompilation.cache = this.cache;\r\n\t\t\t\t} else if(this.watching) {\r\n\t\t\t\t\tcompilation.warnings.push(\r\n\t\t\t\t\t\tnew Error(`CachePlugin - Cache cannot be used because of: ${compilation.notCacheable}`)\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\tcompiler.plugin(\"watch-run\", (compiler, callback) => {\r\n\t\t\t\tthis.watching = true;\r\n\t\t\t\tcallback();\r\n\t\t\t});\r\n\t\t\tcompiler.plugin(\"run\", (compiler, callback) => {\r\n\t\t\t\tif(!compiler._lastCompilationFileDependencies) return callback();\r\n\t\t\t\tconst fs = compiler.inputFileSystem;\r\n\t\t\t\tconst fileTs = compiler.fileTimestamps = {};\r\n\t\t\t\tasyncLib.forEach(compiler._lastCompilationFileDependencies, (file, callback) => {\r\n\t\t\t\t\tfs.stat(file, (err, stat) => {\r\n\t\t\t\t\t\tif(err) {\r\n\t\t\t\t\t\t\tif(err.code === \"ENOENT\") return callback();\r\n\t\t\t\t\t\t\treturn callback(err);\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif(stat.mtime)\r\n\t\t\t\t\t\t\tthis.applyMtime(+stat.mtime);\r\n\r\n\t\t\t\t\t\tfileTs[file] = +stat.mtime || Infinity;\r\n\t\t\t\t\t\tcallback();\r\n\t\t\t\t\t});\r\n\t\t\t\t}, err => {\r\n\t\t\t\t\tif(err) return callback(err);\r\n\t\t\t\t\tObject.keys(fileTs).forEach(key => {\r\n\t\t\t\t\t\tfileTs[key] += this.FS_ACCURENCY;\r\n\t\t\t\t\t});\r\n\t\t\t\t\tcallback();\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t\tcompiler.plugin(\"after-compile\", function(compilation, callback) {\r\n\t\t\t\tcompilation.compiler._lastCompilationFileDependencies = compilation.fileDependencies;\r\n\t\t\t\tcompilation.compiler._lastCompilationContextDependencies = compilation.contextDependencies;\r\n\t\t\t\tcallback();\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\t/* istanbul ignore next */\r\n\tapplyMtime(mtime) {\r\n\t\tif(this.FS_ACCURENCY > 1 && mtime % 2 !== 0)\r\n\t\t\tthis.FS_ACCURENCY = 1;\r\n\t\telse if(this.FS_ACCURENCY > 10 && mtime % 20 !== 0)\r\n\t\t\tthis.FS_ACCURENCY = 10;\r\n\t\telse if(this.FS_ACCURENCY > 100 && mtime % 200 !== 0)\r\n\t\t\tthis.FS_ACCURENCY = 100;\r\n\t\telse if(this.FS_ACCURENCY > 1000 && mtime % 2000 !== 0)\r\n\t\t\tthis.FS_ACCURENCY = 1000;\r\n\t}\r\n}\r\nmodule.exports = CachePlugin;\r\n","/home/travis/build/npmtest/node-npmtest-webpack/node_modules/webpack/lib/ExtendedAPIPlugin.js":"/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\n\"use strict\";\r\n\r\nconst ConstDependency = require(\"./dependencies/ConstDependency\");\r\nconst ParserHelpers = require(\"./ParserHelpers\");\r\nconst NullFactory = require(\"./NullFactory\");\r\n\r\nconst REPLACEMENTS = {\r\n\t__webpack_hash__: \"__webpack_require__.h\", // eslint-disable-line camelcase\r\n\t__webpack_chunkname__: \"__webpack_require__.cn\" // eslint-disable-line camelcase\r\n};\r\nconst REPLACEMENT_TYPES = {\r\n\t__webpack_hash__: \"string\", // eslint-disable-line camelcase\r\n\t__webpack_chunkname__: \"string\" // eslint-disable-line camelcase\r\n};\r\n\r\nclass ExtendedAPIPlugin {\r\n\tapply(compiler) {\r\n\t\tcompiler.plugin(\"compilation\", (compilation, params) => {\r\n\t\t\tcompilation.dependencyFactories.set(ConstDependency, new NullFactory());\r\n\t\t\tcompilation.dependencyTemplates.set(ConstDependency, new ConstDependency.Template());\r\n\t\t\tcompilation.mainTemplate.plugin(\"require-extensions\", function(source, chunk, hash) {\r\n\t\t\t\tconst buf = [source];\r\n\t\t\t\tbuf.push(\"\");\r\n\t\t\t\tbuf.push(\"// __webpack_hash__\");\r\n\t\t\t\tbuf.push(`${this.requireFn}.h = ${JSON.stringify(hash)};`);\r\n\t\t\t\tbuf.push(\"\");\r\n\t\t\t\tbuf.push(\"// __webpack_chunkname__\");\r\n\t\t\t\tbuf.push(`${this.requireFn}.cn = ${JSON.stringify(chunk.name)};`);\r\n\t\t\t\treturn this.asString(buf);\r\n\t\t\t});\r\n\t\t\tcompilation.mainTemplate.plugin(\"global-hash\", () => true);\r\n\r\n\t\t\tparams.normalModuleFactory.plugin(\"parser\", (parser, parserOptions) => {\r\n\t\t\t\tObject.keys(REPLACEMENTS).forEach(key => {\r\n\t\t\t\t\tparser.plugin(`expression ${key}`, ParserHelpers.toConstantDependency(REPLACEMENTS[key]));\r\n\t\t\t\t\tparser.plugin(`evaluate typeof ${key}`, ParserHelpers.evaluateToString(REPLACEMENT_TYPES[key]));\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n}\r\n\r\nmodule.exports = ExtendedAPIPlugin;\r\n","/home/travis/build/npmtest/node-npmtest-webpack/node_modules/webpack/lib/ExternalsPlugin.js":"/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\n\"use strict\";\r\n\r\nvar ExternalModuleFactoryPlugin = require(\"./ExternalModuleFactoryPlugin\");\r\n\r\nclass ExternalsPlugin {\r\n\tconstructor(type, externals) {\r\n\t\tthis.type = type;\r\n\t\tthis.externals = externals;\r\n\t}\r\n\tapply(compiler) {\r\n\t\tcompiler.plugin(\"compile\", (params) => {\r\n\t\t\tparams.normalModuleFactory.apply(new ExternalModuleFactoryPlugin(this.type, this.externals));\r\n\t\t});\r\n\t}\r\n}\r\n\r\nmodule.exports = ExternalsPlugin;\r\n","/home/travis/build/npmtest/node-npmtest-webpack/node_modules/webpack/lib/ExternalModuleFactoryPlugin.js":"/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\n\"use strict\";\r\n\r\nconst ExternalModule = require(\"./ExternalModule\");\r\n\r\nclass ExternalModuleFactoryPlugin {\r\n\tconstructor(type, externals) {\r\n\t\tthis.type = type;\r\n\t\tthis.externals = externals;\r\n\t}\r\n\r\n\tapply(normalModuleFactory) {\r\n\t\tconst globalType = this.type;\r\n\t\tnormalModuleFactory.plugin(\"factory\", factory => (data, callback) => {\r\n\t\t\tconst context = data.context;\r\n\t\t\tconst dependency = data.dependencies[0];\r\n\r\n\t\t\tfunction handleExternal(value, type, callback) {\r\n\t\t\t\tif(typeof type === \"function\") {\r\n\t\t\t\t\tcallback = type;\r\n\t\t\t\t\ttype = undefined;\r\n\t\t\t\t}\r\n\t\t\t\tif(value === false) return factory(data, callback);\r\n\t\t\t\tif(value === true) value = dependency.request;\r\n\t\t\t\tif(typeof type === \"undefined\" && /^[a-z0-9]+ /.test(value)) {\r\n\t\t\t\t\tconst idx = value.indexOf(\" \");\r\n\t\t\t\t\ttype = value.substr(0, idx);\r\n\t\t\t\t\tvalue = value.substr(idx + 1);\r\n\t\t\t\t}\r\n\t\t\t\tcallback(null, new ExternalModule(value, type || globalType));\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t\t(function handleExternals(externals, callback) {\r\n\t\t\t\tif(typeof externals === \"string\") {\r\n\t\t\t\t\tif(externals === dependency.request) {\r\n\t\t\t\t\t\treturn handleExternal(dependency.request, callback);\r\n\t\t\t\t\t}\r\n\t\t\t\t} else if(Array.isArray(externals)) {\r\n\t\t\t\t\tlet i = 0;\r\n\t\t\t\t\t(function next() {\r\n\t\t\t\t\t\tlet asyncFlag;\r\n\t\t\t\t\t\tconst handleExternalsAndCallback = function handleExternalsAndCallback(err, module) {\r\n\t\t\t\t\t\t\tif(err) return callback(err);\r\n\t\t\t\t\t\t\tif(!module) {\r\n\t\t\t\t\t\t\t\tif(asyncFlag) {\r\n\t\t\t\t\t\t\t\t\tasyncFlag = false;\r\n\t\t\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\treturn next();\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tcallback(null, module);\r\n\t\t\t\t\t\t};\r\n\r\n\t\t\t\t\t\tdo {\r\n\t\t\t\t\t\t\tasyncFlag = true;\r\n\t\t\t\t\t\t\tif(i >= externals.length) return callback();\r\n\t\t\t\t\t\t\thandleExternals(externals[i++], handleExternalsAndCallback);\r\n\t\t\t\t\t\t} while (!asyncFlag); // eslint-disable-line keyword-spacing\r\n\t\t\t\t\t\tasyncFlag = false;\r\n\t\t\t\t\t}());\r\n\t\t\t\t\treturn;\r\n\t\t\t\t} else if(externals instanceof RegExp) {\r\n\t\t\t\t\tif(externals.test(dependency.request)) {\r\n\t\t\t\t\t\treturn handleExternal(dependency.request, callback);\r\n\t\t\t\t\t}\r\n\t\t\t\t} else if(typeof externals === \"function\") {\r\n\t\t\t\t\texternals.call(null, context, dependency.request, function(err, value, type) {\r\n\t\t\t\t\t\tif(err) return callback(err);\r\n\t\t\t\t\t\tif(typeof value !== \"undefined\") {\r\n\t\t\t\t\t\t\thandleExternal(value, type, callback);\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tcallback();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\t\treturn;\r\n\t\t\t\t} else if(typeof externals === \"object\" && Object.prototype.hasOwnProperty.call(externals, dependency.request)) {\r\n\t\t\t\t\treturn handleExternal(externals[dependency.request], callback);\r\n\t\t\t\t}\r\n\t\t\t\tcallback();\r\n\t\t\t}(this.externals, function(err, module) {\r\n\t\t\t\tif(err) return callback(err);\r\n\t\t\t\tif(!module) return handleExternal(false, callback);\r\n\t\t\t\treturn callback(null, module);\r\n\t\t\t}));\r\n\t\t});\r\n\t}\r\n}\r\nmodule.exports = ExternalModuleFactoryPlugin;\r\n","/home/travis/build/npmtest/node-npmtest-webpack/node_modules/webpack/lib/ExternalModule.js":"/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\n\"use strict\";\r\nconst Module = require(\"./Module\");\r\nconst OriginalSource = require(\"webpack-sources\").OriginalSource;\r\nconst RawSource = require(\"webpack-sources\").RawSource;\r\nconst WebpackMissingModule = require(\"./dependencies/WebpackMissingModule\");\r\nconst Template = require(\"./Template\");\r\n\r\nclass ExternalModule extends Module {\r\n\tconstructor(request, type) {\r\n\t\tsuper();\r\n\t\tthis.request = request;\r\n\t\tthis.type = type;\r\n\t\tthis.built = false;\r\n\t\tthis.external = true;\r\n\t}\r\n\r\n\tchunkCondition(chunk) {\r\n\t\treturn chunk.hasEntryModule();\r\n\t}\r\n\r\n\tidentifier() {\r\n\t\treturn \"external \" + JSON.stringify(this.request);\r\n\t}\r\n\r\n\treadableIdentifier() {\r\n\t\treturn \"external \" + JSON.stringify(this.request);\r\n\t}\r\n\r\n\tneedRebuild() {\r\n\t\treturn false;\r\n\t}\r\n\r\n\tbuild(options, compilation, resolver, fs, callback) {\r\n\t\tthis.builtTime = new Date().getTime();\r\n\t\tcallback();\r\n\t}\r\n\r\n\tgetSourceForGlobalVariableExternal(variableName, type) {\r\n\t\tif(!Array.isArray(variableName)) {\r\n\t\t\t// make it an array as the look up works the same basically\r\n\t\t\tvariableName = [variableName];\r\n\t\t}\r\n\r\n\t\t// needed for e.g. window[\"some\"][\"thing\"]\r\n\t\tconst objectLookup = variableName.map(r => `[${JSON.stringify(r)}]`).join(\"\");\r\n\t\treturn `(function() { module.exports = ${type}${objectLookup}; }());`;\r\n\t}\r\n\r\n\tgetSourceForCommonJsExternal(moduleAndSpecifiers) {\r\n\t\tif(!Array.isArray(moduleAndSpecifiers)) {\r\n\t\t\treturn `module.exports = require(${JSON.stringify(moduleAndSpecifiers)});`;\r\n\t\t}\r\n\r\n\t\tconst moduleName = moduleAndSpecifiers[0];\r\n\t\tconst objectLookup = moduleAndSpecifiers.slice(1).map(r => `[${JSON.stringify(r)}]`).join(\"\");\r\n\t\treturn `module.exports = require(${moduleName})${objectLookup};`;\r\n\t}\r\n\r\n\tcheckExternalVariable(variableToCheck, request) {\r\n\t\treturn `if(typeof ${variableToCheck} === 'undefined') {${WebpackMissingModule.moduleCode(request)}}\\n`;\r\n\t}\r\n\r\n\tgetSourceForAmdOrUmdExternal(id, optional, request) {\r\n\t\tconst externalVariable = Template.toIdentifier(`__WEBPACK_EXTERNAL_MODULE_${id}__`);\r\n\t\tconst missingModuleError = optional ? this.checkExternalVariable(externalVariable, request) : \"\";\r\n\t\treturn `${missingModuleError}module.exports = ${externalVariable};`;\r\n\t}\r\n\r\n\tgetSourceForDefaultCase(optional, request) {\r\n\t\tconst missingModuleError = optional ? this.checkExternalVariable(request, request) : \"\";\r\n\t\treturn `${missingModuleError}module.exports = ${request};`;\r\n\t}\r\n\r\n\tgetSourceString() {\r\n\t\tconst request = typeof this.request === \"object\" ? this.request[this.type] : this.request;\r\n\t\tswitch(this.type) {\r\n\t\t\tcase \"this\":\r\n\t\t\tcase \"window\":\r\n\t\t\tcase \"global\":\r\n\t\t\t\treturn this.getSourceForGlobalVariableExternal(request, this.type);\r\n\t\t\tcase \"commonjs\":\r\n\t\t\tcase \"commonjs2\":\r\n\t\t\t\treturn this.getSourceForCommonJsExternal(request);\r\n\t\t\tcase \"amd\":\r\n\t\t\tcase \"umd\":\r\n\t\t\tcase \"umd2\":\r\n\t\t\t\treturn this.getSourceForAmdOrUmdExternal(this.id, this.optional, request);\r\n\t\t\tdefault:\r\n\t\t\t\treturn this.getSourceForDefaultCase(this.optional, request);\r\n\t\t}\r\n\t}\r\n\r\n\tgetSource(sourceString) {\r\n\t\tif(this.useSourceMap) {\r\n\t\t\treturn new OriginalSource(sourceString, this.identifier());\r\n\t\t}\r\n\r\n\t\treturn new RawSource(sourceString);\r\n\t}\r\n\r\n\tsource() {\r\n\t\treturn this.getSource(\r\n\t\t\tthis.getSourceString()\r\n\t\t);\r\n\t}\r\n\r\n\tsize() {\r\n\t\treturn 42;\r\n\t}\r\n}\r\n\r\nmodule.exports = ExternalModule;\r\n","/home/travis/build/npmtest/node-npmtest-webpack/node_modules/webpack/lib/JsonpTemplatePlugin.js":"/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\n\"use strict\";\r\n\r\nconst JsonpMainTemplatePlugin = require(\"./JsonpMainTemplatePlugin\");\r\nconst JsonpChunkTemplatePlugin = require(\"./JsonpChunkTemplatePlugin\");\r\nconst JsonpHotUpdateChunkTemplatePlugin = require(\"./JsonpHotUpdateChunkTemplatePlugin\");\r\n\r\nclass JsonpTemplatePlugin {\r\n\tapply(compiler) {\r\n\t\tcompiler.plugin(\"this-compilation\", (compilation) => {\r\n\t\t\tcompilation.mainTemplate.apply(new JsonpMainTemplatePlugin());\r\n\t\t\tcompilation.chunkTemplate.apply(new JsonpChunkTemplatePlugin());\r\n\t\t\tcompilation.hotUpdateChunkTemplate.apply(new JsonpHotUpdateChunkTemplatePlugin());\r\n\t\t});\r\n\t}\r\n}\r\n\r\nmodule.exports = JsonpTemplatePlugin;\r\n","/home/travis/build/npmtest/node-npmtest-webpack/node_modules/webpack/lib/JsonpMainTemplatePlugin.js":"/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\n\"use strict\";\r\n\r\nconst Template = require(\"./Template\");\r\n\r\nclass JsonpMainTemplatePlugin {\r\n\r\n\tapply(mainTemplate) {\r\n\t\tmainTemplate.plugin(\"local-vars\", function(source, chunk) {\r\n\t\t\tif(chunk.chunks.length > 0) {\r\n\t\t\t\treturn this.asString([\r\n\t\t\t\t\tsource,\r\n\t\t\t\t\t\"\",\r\n\t\t\t\t\t\"// objects to store loaded and loading chunks\",\r\n\t\t\t\t\t\"var installedChunks = {\",\r\n\t\t\t\t\tthis.indent(\r\n\t\t\t\t\t\tchunk.ids.map(id => `${JSON.stringify(id)}: 0`).join(\",\\n\")\r\n\t\t\t\t\t),\r\n\t\t\t\t\t\"};\"\r\n\t\t\t\t]);\r\n\t\t\t}\r\n\t\t\treturn source;\r\n\t\t});\r\n\t\tmainTemplate.plugin(\"jsonp-script\", function(_, chunk, hash) {\r\n\t\t\tconst chunkFilename = this.outputOptions.chunkFilename;\r\n\t\t\tconst chunkMaps = chunk.getChunkMaps();\r\n\t\t\tconst crossOriginLoading = this.outputOptions.crossOriginLoading;\r\n\t\t\tconst chunkLoadTimeout = this.outputOptions.chunkLoadTimeout || 120000;\r\n\t\t\tconst scriptSrcPath = this.applyPluginsWaterfall(\"asset-path\", JSON.stringify(chunkFilename), {\r\n\t\t\t\thash: `\" + ${this.renderCurrentHashCode(hash)} + \"`,\r\n\t\t\t\thashWithLength: length => `\" + ${this.renderCurrentHashCode(hash, length)} + \"`,\r\n\t\t\t\tchunk: {\r\n\t\t\t\t\tid: \"\\\" + chunkId + \\\"\",\r\n\t\t\t\t\thash: `\" + ${JSON.stringify(chunkMaps.hash)}[chunkId] + \"`,\r\n\t\t\t\t\thashWithLength(length) {\r\n\t\t\t\t\t\tconst shortChunkHashMap = Object.create(null);\r\n\t\t\t\t\t\tObject.keys(chunkMaps.hash).forEach(chunkId => {\r\n\t\t\t\t\t\t\tif(typeof chunkMaps.hash[chunkId] === \"string\")\r\n\t\t\t\t\t\t\t\tshortChunkHashMap[chunkId] = chunkMaps.hash[chunkId].substr(0, length);\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t\treturn `\" + ${JSON.stringify(shortChunkHashMap)}[chunkId] + \"`;\r\n\t\t\t\t\t},\r\n\t\t\t\t\tname: `\" + (${JSON.stringify(chunkMaps.name)}[chunkId]||chunkId) + \"`\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\treturn this.asString([\r\n\t\t\t\t\"var script = document.createElement('script');\",\r\n\t\t\t\t\"script.type = 'text/javascript';\",\r\n\t\t\t\t\"script.charset = 'utf-8';\",\r\n\t\t\t\t\"script.async = true;\",\r\n\t\t\t\t`script.timeout = ${chunkLoadTimeout};`,\r\n\t\t\t\tcrossOriginLoading ? `script.crossOrigin = ${JSON.stringify(crossOriginLoading)};` : \"\",\r\n\t\t\t\t`if (${this.requireFn}.nc) {`,\r\n\t\t\t\tthis.indent(`script.setAttribute(\"nonce\", ${this.requireFn}.nc);`),\r\n\t\t\t\t\"}\",\r\n\t\t\t\t`script.src = ${this.requireFn}.p + ${scriptSrcPath};`,\r\n\t\t\t\t`var timeout = setTimeout(onScriptComplete, ${chunkLoadTimeout});`,\r\n\t\t\t\t\"script.onerror = script.onload = onScriptComplete;\",\r\n\t\t\t\t\"function onScriptComplete() {\",\r\n\t\t\t\tthis.indent([\r\n\t\t\t\t\t\"// avoid mem leaks in IE.\",\r\n\t\t\t\t\t\"script.onerror = script.onload = null;\",\r\n\t\t\t\t\t\"clearTimeout(timeout);\",\r\n\t\t\t\t\t\"var chunk = installedChunks[chunkId];\",\r\n\t\t\t\t\t\"if(chunk !== 0) {\",\r\n\t\t\t\t\tthis.indent([\r\n\t\t\t\t\t\t\"if(chunk) {\",\r\n\t\t\t\t\t\tthis.indent(\"chunk[1](new Error('Loading chunk ' + chunkId + ' failed.'));\"),\r\n\t\t\t\t\t\t\"}\",\r\n\t\t\t\t\t\t\"installedChunks[chunkId] = undefined;\"\r\n\t\t\t\t\t]),\r\n\t\t\t\t\t\"}\"\r\n\t\t\t\t]),\r\n\t\t\t\t\"};\",\r\n\t\t\t]);\r\n\t\t});\r\n\t\tmainTemplate.plugin(\"require-ensure\", function(_, chunk, hash) {\r\n\t\t\treturn this.asString([\r\n\t\t\t\t\"if(installedChunks[chunkId] === 0) {\",\r\n\t\t\t\tthis.indent([\r\n\t\t\t\t\t\"return Promise.resolve();\"\r\n\t\t\t\t]),\r\n\t\t\t\t\"}\",\r\n\t\t\t\t\"\",\r\n\t\t\t\t\"// a Promise means \\\"currently loading\\\".\",\r\n\t\t\t\t\"if(installedChunks[chunkId]) {\",\r\n\t\t\t\tthis.indent([\r\n\t\t\t\t\t\"return installedChunks[chunkId][2];\"\r\n\t\t\t\t]),\r\n\t\t\t\t\"}\",\r\n\t\t\t\t\"\",\r\n\t\t\t\t\"// setup Promise in chunk cache\",\r\n\t\t\t\t\"var promise = new Promise(function(resolve, reject) {\",\r\n\t\t\t\tthis.indent([\r\n\t\t\t\t\t\"installedChunks[chunkId] = [resolve, reject];\"\r\n\t\t\t\t]),\r\n\t\t\t\t\"});\",\r\n\t\t\t\t\"installedChunks[chunkId][2] = promise;\",\r\n\t\t\t\t\"\",\r\n\t\t\t\t\"// start chunk loading\",\r\n\t\t\t\t\"var head = document.getElementsByTagName('head')[0];\",\r\n\t\t\t\tthis.applyPluginsWaterfall(\"jsonp-script\", \"\", chunk, hash),\r\n\t\t\t\t\"head.appendChild(script);\",\r\n\t\t\t\t\"\",\r\n\t\t\t\t\"return promise;\"\r\n\t\t\t]);\r\n\t\t});\r\n\t\tmainTemplate.plugin(\"require-extensions\", function(source, chunk) {\r\n\t\t\tif(chunk.chunks.length === 0) return source;\r\n\r\n\t\t\treturn this.asString([\r\n\t\t\t\tsource,\r\n\t\t\t\t\"\",\r\n\t\t\t\t\"// on error function for async loading\",\r\n\t\t\t\t`${this.requireFn}.oe = function(err) { console.error(err); throw err; };`\r\n\t\t\t]);\r\n\t\t});\r\n\t\tmainTemplate.plugin(\"bootstrap\", function(source, chunk, hash) {\r\n\t\t\tif(chunk.chunks.length > 0) {\r\n\t\t\t\tvar jsonpFunction = this.outputOptions.jsonpFunction;\r\n\t\t\t\treturn this.asString([\r\n\t\t\t\t\tsource,\r\n\t\t\t\t\t\"\",\r\n\t\t\t\t\t\"// install a JSONP callback for chunk loading\",\r\n\t\t\t\t\t`var parentJsonpFunction = window[${JSON.stringify(jsonpFunction)}];`,\r\n\t\t\t\t\t`window[${JSON.stringify(jsonpFunction)}] = function webpackJsonpCallback(chunkIds, moreModules, executeModules) {`,\r\n\t\t\t\t\tthis.indent([\r\n\t\t\t\t\t\t\"// add \\\"moreModules\\\" to the modules object,\",\r\n\t\t\t\t\t\t\"// then flag all \\\"chunkIds\\\" as loaded and fire callback\",\r\n\t\t\t\t\t\t\"var moduleId, chunkId, i = 0, resolves = [], result;\",\r\n\t\t\t\t\t\t\"for(;i < chunkIds.length; i++) {\",\r\n\t\t\t\t\t\tthis.indent([\r\n\t\t\t\t\t\t\t\"chunkId = chunkIds[i];\",\r\n\t\t\t\t\t\t\t\"if(installedChunks[chunkId]) {\",\r\n\t\t\t\t\t\t\tthis.indent(\"resolves.push(installedChunks[chunkId][0]);\"),\r\n\t\t\t\t\t\t\t\"}\",\r\n\t\t\t\t\t\t\t\"installedChunks[chunkId] = 0;\"\r\n\t\t\t\t\t\t]),\r\n\t\t\t\t\t\t\"}\",\r\n\t\t\t\t\t\t\"for(moduleId in moreModules) {\",\r\n\t\t\t\t\t\tthis.indent([\r\n\t\t\t\t\t\t\t\"if(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\",\r\n\t\t\t\t\t\t\tthis.indent(this.renderAddModule(hash, chunk, \"moduleId\", \"moreModules[moduleId]\")),\r\n\t\t\t\t\t\t\t\"}\"\r\n\t\t\t\t\t\t]),\r\n\t\t\t\t\t\t\"}\",\r\n\t\t\t\t\t\t\"if(parentJsonpFunction) parentJsonpFunction(chunkIds, moreModules, executeModules);\",\r\n\t\t\t\t\t\t\"while(resolves.length) {\",\r\n\t\t\t\t\t\tthis.indent(\"resolves.shift()();\"),\r\n\t\t\t\t\t\t\"}\",\r\n\t\t\t\t\t\tthis.entryPointInChildren(chunk) ? [\r\n\t\t\t\t\t\t\t\"if(executeModules) {\",\r\n\t\t\t\t\t\t\tthis.indent([\r\n\t\t\t\t\t\t\t\t\"for(i=0; i < executeModules.length; i++) {\",\r\n\t\t\t\t\t\t\t\tthis.indent(`result = ${this.requireFn}(${this.requireFn}.s = executeModules[i]);`),\r\n\t\t\t\t\t\t\t\t\"}\"\r\n\t\t\t\t\t\t\t]),\r\n\t\t\t\t\t\t\t\"}\",\r\n\t\t\t\t\t\t\t\"return result;\",\r\n\t\t\t\t\t\t] : \"\"\r\n\t\t\t\t\t]),\r\n\t\t\t\t\t\"};\"\r\n\t\t\t\t]);\r\n\t\t\t}\r\n\t\t\treturn source;\r\n\t\t});\r\n\t\tmainTemplate.plugin(\"hot-bootstrap\", function(source, chunk, hash) {\r\n\t\t\tconst hotUpdateChunkFilename = this.outputOptions.hotUpdateChunkFilename;\r\n\t\t\tconst hotUpdateMainFilename = this.outputOptions.hotUpdateMainFilename;\r\n\t\t\tconst hotUpdateFunction = this.outputOptions.hotUpdateFunction;\r\n\t\t\tconst currentHotUpdateChunkFilename = this.applyPluginsWaterfall(\"asset-path\", JSON.stringify(hotUpdateChunkFilename), {\r\n\t\t\t\thash: `\" + ${this.renderCurrentHashCode(hash)} + \"`,\r\n\t\t\t\thashWithLength: length => `\" + ${this.renderCurrentHashCode(hash, length)} + \"`,\r\n\t\t\t\tchunk: {\r\n\t\t\t\t\tid: \"\\\" + chunkId + \\\"\"\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\tconst currentHotUpdateMainFilename = this.applyPluginsWaterfall(\"asset-path\", JSON.stringify(hotUpdateMainFilename), {\r\n\t\t\t\thash: `\" + ${this.renderCurrentHashCode(hash)} + \"`,\r\n\t\t\t\thashWithLength: length => `\" + ${this.renderCurrentHashCode(hash, length)} + \"`\r\n\t\t\t});\r\n\t\t\tconst runtimeSource = Template.getFunctionContent(require(\"./JsonpMainTemplate.runtime.js\"))\r\n\t\t\t\t.replace(/\\/\\/\\$semicolon/g, \";\")\r\n\t\t\t\t.replace(/\\$require\\$/g, this.requireFn)\r\n\t\t\t\t.replace(/\\$hotMainFilename\\$/g, currentHotUpdateMainFilename)\r\n\t\t\t\t.replace(/\\$hotChunkFilename\\$/g, currentHotUpdateChunkFilename)\r\n\t\t\t\t.replace(/\\$hash\\$/g, JSON.stringify(hash));\r\n\t\t\treturn `${source}\r\nfunction hotDisposeChunk(chunkId) {\r\n\tdelete installedChunks[chunkId];\r\n}\r\nvar parentHotUpdateCallback = this[${JSON.stringify(hotUpdateFunction)}];\r\nthis[${JSON.stringify(hotUpdateFunction)}] = ${runtimeSource}`;\r\n\t\t});\r\n\t\tmainTemplate.plugin(\"hash\", function(hash) {\r\n\t\t\thash.update(\"jsonp\");\r\n\t\t\thash.update(\"4\");\r\n\t\t\thash.update(`${this.outputOptions.filename}`);\r\n\t\t\thash.update(`${this.outputOptions.chunkFilename}`);\r\n\t\t\thash.update(`${this.outputOptions.jsonpFunction}`);\r\n\t\t\thash.update(`${this.outputOptions.hotUpdateFunction}`);\r\n\t\t});\r\n\t}\r\n}\r\nmodule.exports = JsonpMainTemplatePlugin;\r\n","/home/travis/build/npmtest/node-npmtest-webpack/node_modules/webpack/lib/JsonpChunkTemplatePlugin.js":"/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\n\"use strict\";\r\n\r\nconst ConcatSource = require(\"webpack-sources\").ConcatSource;\r\n\r\nclass JsonpChunkTemplatePlugin {\r\n\tapply(chunkTemplate) {\r\n\t\tchunkTemplate.plugin(\"render\", function(modules, chunk) {\r\n\t\t\tconst jsonpFunction = this.outputOptions.jsonpFunction;\r\n\t\t\tconst source = new ConcatSource();\r\n\t\t\tsource.add(`${jsonpFunction}(${JSON.stringify(chunk.ids)},`);\r\n\t\t\tsource.add(modules);\r\n\t\t\tconst entries = [chunk.entryModule].filter(Boolean).map(m => m.id);\r\n\t\t\tif(entries.length > 0) {\r\n\t\t\t\tsource.add(`,${JSON.stringify(entries)}`);\r\n\t\t\t}\r\n\t\t\tsource.add(\")\");\r\n\t\t\treturn source;\r\n\t\t});\r\n\t\tchunkTemplate.plugin(\"hash\", function(hash) {\r\n\t\t\thash.update(\"JsonpChunkTemplatePlugin\");\r\n\t\t\thash.update(\"3\");\r\n\t\t\thash.update(`${this.outputOptions.jsonpFunction}`);\r\n\t\t\thash.update(`${this.outputOptions.library}`);\r\n\t\t});\r\n\t}\r\n}\r\nmodule.exports = JsonpChunkTemplatePlugin;\r\n","/home/travis/build/npmtest/node-npmtest-webpack/node_modules/webpack/lib/JsonpHotUpdateChunkTemplatePlugin.js":"/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\n\"use strict\";\r\n\r\nconst ConcatSource = require(\"webpack-sources\").ConcatSource;\r\n\r\nclass JsonpHotUpdateChunkTemplatePlugin {\r\n\tapply(hotUpdateChunkTemplate) {\r\n\t\thotUpdateChunkTemplate.plugin(\"render\", function(modulesSource, modules, removedModules, hash, id) {\r\n\t\t\tconst source = new ConcatSource();\r\n\t\t\tsource.add(`${this.outputOptions.hotUpdateFunction}(${JSON.stringify(id)},`);\r\n\t\t\tsource.add(modulesSource);\r\n\t\t\tsource.add(\")\");\r\n\t\t\treturn source;\r\n\t\t});\r\n\t\thotUpdateChunkTemplate.plugin(\"hash\", function(hash) {\r\n\t\t\thash.update(\"JsonpHotUpdateChunkTemplatePlugin\");\r\n\t\t\thash.update(\"3\");\r\n\t\t\thash.update(`${this.outputOptions.hotUpdateFunction}`);\r\n\t\t\thash.update(`${this.outputOptions.library}`);\r\n\t\t});\r\n\t}\r\n}\r\n\r\nmodule.exports = JsonpHotUpdateChunkTemplatePlugin;\r\n","/home/travis/build/npmtest/node-npmtest-webpack/node_modules/webpack/lib/LibraryTemplatePlugin.js":"/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\n\"use strict\";\r\n\r\nconst SetVarMainTemplatePlugin = require(\"./SetVarMainTemplatePlugin\");\r\n\r\nfunction accessorToObjectAccess(accessor) {\r\n\treturn accessor.map((a) => {\r\n\t\treturn `[${JSON.stringify(a)}]`;\r\n\t}).join(\"\");\r\n}\r\n\r\nfunction accessorAccess(base, accessor, joinWith) {\r\n\taccessor = [].concat(accessor);\r\n\treturn accessor.map((a, idx) => {\r\n\t\ta = base ?\r\n\t\t\tbase + accessorToObjectAccess(accessor.slice(0, idx + 1)) :\r\n\t\t\taccessor[0] + accessorToObjectAccess(accessor.slice(1, idx + 1));\r\n\t\tif(idx === accessor.length - 1) return a;\r\n\t\tif(idx === 0 && typeof base === \"undefined\") return `${a} = typeof ${a} === \"object\" ? ${a} : {}`;\r\n\t\treturn `${a} = ${a} || {}`;\r\n\t}).join(joinWith || \"; \");\r\n}\r\n\r\nclass LibraryTemplatePlugin {\r\n\r\n\tconstructor(name, target, umdNamedDefine, auxiliaryComment) {\r\n\t\tthis.name = name;\r\n\t\tthis.target = target;\r\n\t\tthis.umdNamedDefine = umdNamedDefine;\r\n\t\tthis.auxiliaryComment = auxiliaryComment;\r\n\t}\r\n\r\n\tapply(compiler) {\r\n\t\tcompiler.plugin(\"this-compilation\", (compilation) => {\r\n\t\t\tswitch(this.target) {\r\n\t\t\t\tcase \"var\":\r\n\t\t\t\t\tcompilation.apply(new SetVarMainTemplatePlugin(`var ${accessorAccess(false, this.name)}`));\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"assign\":\r\n\t\t\t\t\tcompilation.apply(new SetVarMainTemplatePlugin(accessorAccess(undefined, this.name)));\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"this\":\r\n\t\t\t\tcase \"window\":\r\n\t\t\t\tcase \"global\":\r\n\t\t\t\t\tif(this.name)\r\n\t\t\t\t\t\tcompilation.apply(new SetVarMainTemplatePlugin(accessorAccess(this.target, this.name)));\r\n\t\t\t\t\telse\r\n\t\t\t\t\t\tcompilation.apply(new SetVarMainTemplatePlugin(this.target, true));\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"commonjs\":\r\n\t\t\t\t\tif(this.name)\r\n\t\t\t\t\t\tcompilation.apply(new SetVarMainTemplatePlugin(accessorAccess(\"exports\", this.name)));\r\n\t\t\t\t\telse\r\n\t\t\t\t\t\tcompilation.apply(new SetVarMainTemplatePlugin(\"exports\", true));\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"commonjs2\":\r\n\t\t\t\tcase \"commonjs-module\":\r\n\t\t\t\t\tcompilation.apply(new SetVarMainTemplatePlugin(\"module.exports\"));\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"amd\":\r\n\t\t\t\t\tvar AmdMainTemplatePlugin = require(\"./AmdMainTemplatePlugin\");\r\n\t\t\t\t\tcompilation.apply(new AmdMainTemplatePlugin(this.name));\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"umd\":\r\n\t\t\t\tcase \"umd2\":\r\n\t\t\t\t\tvar UmdMainTemplatePlugin = require(\"./UmdMainTemplatePlugin\");\r\n\t\t\t\t\tcompilation.apply(new UmdMainTemplatePlugin(this.name, {\r\n\t\t\t\t\t\toptionalAmdExternalAsGlobal: this.target === \"umd2\",\r\n\t\t\t\t\t\tnamedDefine: this.umdNamedDefine,\r\n\t\t\t\t\t\tauxiliaryComment: this.auxiliaryComment\r\n\t\t\t\t\t}));\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"jsonp\":\r\n\t\t\t\t\tvar JsonpExportMainTemplatePlugin = require(\"./JsonpExportMainTemplatePlugin\");\r\n\t\t\t\t\tcompilation.apply(new JsonpExportMainTemplatePlugin(this.name));\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tthrow new Error(`${this.target} is not a valid Library target`);\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n}\r\n\r\nmodule.exports = LibraryTemplatePlugin;\r\n","/home/travis/build/npmtest/node-npmtest-webpack/node_modules/webpack/lib/SetVarMainTemplatePlugin.js":"/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\n\"use strict\";\r\n\r\nconst ConcatSource = require(\"webpack-sources\").ConcatSource;\r\n\r\nclass SetVarMainTemplatePlugin {\r\n\tconstructor(varExpression, copyObject) {\r\n\t\tthis.varExpression = varExpression;\r\n\t\tthis.copyObject = copyObject;\r\n\t}\r\n\r\n\tapply(compilation) {\r\n\t\tconst mainTemplate = compilation.mainTemplate;\r\n\t\tcompilation.templatesPlugin(\"render-with-entry\", (source, chunk, hash) => {\r\n\t\t\tconst varExpression = mainTemplate.applyPluginsWaterfall(\"asset-path\", this.varExpression, {\r\n\t\t\t\thash,\r\n\t\t\t\tchunk\r\n\t\t\t});\r\n\t\t\tif(this.copyObject) {\r\n\t\t\t\treturn new ConcatSource(`(function(e, a) { for(var i in a) e[i] = a[i]; }(${varExpression}, `, source, \"))\");\r\n\t\t\t} else {\r\n\t\t\t\tconst prefix = `${varExpression} =\\n`;\r\n\t\t\t\treturn new ConcatSource(prefix, source);\r\n\t\t\t}\r\n\t\t});\r\n\t\tmainTemplate.plugin(\"global-hash-paths\", (paths) => {\r\n\t\t\tif(this.varExpression) paths.push(this.varExpression);\r\n\t\t\treturn paths;\r\n\t\t});\r\n\t\tmainTemplate.plugin(\"hash\", hash => {\r\n\t\t\thash.update(\"set var\");\r\n\t\t\thash.update(`${this.varExpression}`);\r\n\t\t\thash.update(`${this.copyObject}`);\r\n\t\t});\r\n\t}\r\n}\r\n\r\nmodule.exports = SetVarMainTemplatePlugin;\r\n","/home/travis/build/npmtest/node-npmtest-webpack/node_modules/webpack/lib/MemoryOutputFileSystem.js":"/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\nmodule.exports = require(\"memory-fs\");\r\n","/home/travis/build/npmtest/node-npmtest-webpack/node_modules/webpack/lib/ProgressPlugin.js":"/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\n\"use strict\";\r\n\r\nclass ProgressPlugin {\r\n\r\n\tconstructor(options) {\r\n\t\tif(typeof options === \"function\") {\r\n\t\t\toptions = {\r\n\t\t\t\thandler: options\r\n\t\t\t};\r\n\t\t}\r\n\t\toptions = options || {};\r\n\t\tthis.profile = options.profile;\r\n\t\tthis.handler = options.handler;\r\n\t}\r\n\r\n\tapply(compiler) {\r\n\t\tconst handler = this.handler || defaultHandler;\r\n\t\tconst profile = this.profile;\r\n\t\tif(compiler.compilers) {\r\n\t\t\tconst states = new Array(compiler.compilers.length);\r\n\t\t\tcompiler.compilers.forEach(function(compiler, idx) {\r\n\t\t\t\tcompiler.apply(new ProgressPlugin(function(p, msg) {\r\n\t\t\t\t\tstates[idx] = Array.prototype.slice.apply(arguments);\r\n\t\t\t\t\thandler.apply(null, [\r\n\t\t\t\t\t\tstates.map(state => state && state[0] || 0).reduce((a, b) => a + b) / states.length,\r\n\t\t\t\t\t\t`[${idx}] ${msg}`\r\n\t\t\t\t\t].concat(Array.prototype.slice.call(arguments, 2)));\r\n\t\t\t\t}));\r\n\t\t\t});\r\n\t\t} else {\r\n\t\t\tlet lastModulesCount = 0;\r\n\t\t\tlet moduleCount = 500;\r\n\t\t\tlet doneModules = 0;\r\n\t\t\tconst activeModules = [];\r\n\r\n\t\t\tconst update = function update(module) {\r\n\t\t\t\thandler(\r\n\t\t\t\t\t0.1 + (doneModules / Math.max(lastModulesCount, moduleCount)) * 0.6,\r\n\t\t\t\t\t\"building modules\",\r\n\t\t\t\t\t`${doneModules}/${moduleCount} modules`,\r\n\t\t\t\t\t`${activeModules.length} active`,\r\n\t\t\t\t\tactiveModules[activeModules.length - 1]\r\n\t\t\t\t);\r\n\t\t\t};\r\n\r\n\t\t\tconst moduleDone = function moduleDone(module) {\r\n\t\t\t\tdoneModules++;\r\n\t\t\t\tconst ident = module.identifier();\r\n\t\t\t\tif(ident) {\r\n\t\t\t\t\tconst idx = activeModules.indexOf(ident);\r\n\t\t\t\t\tif(idx >= 0) activeModules.splice(idx, 1);\r\n\t\t\t\t}\r\n\t\t\t\tupdate();\r\n\t\t\t};\r\n\t\t\tcompiler.plugin(\"compilation\", function(compilation) {\r\n\t\t\t\tif(compilation.compiler.isChild()) return;\r\n\t\t\t\tlastModulesCount = moduleCount;\r\n\t\t\t\tmoduleCount = 0;\r\n\t\t\t\tdoneModules = 0;\r\n\t\t\t\thandler(0, \"compiling\");\r\n\t\t\t\tcompilation.plugin(\"build-module\", function(module) {\r\n\t\t\t\t\tmoduleCount++;\r\n\t\t\t\t\tconst ident = module.identifier();\r\n\t\t\t\t\tif(ident) {\r\n\t\t\t\t\t\tactiveModules.push(ident);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tupdate();\r\n\t\t\t\t});\r\n\t\t\t\tcompilation.plugin(\"failed-module\", moduleDone);\r\n\t\t\t\tcompilation.plugin(\"succeed-module\", moduleDone);\r\n\t\t\t\tconst syncHooks = {\r\n\t\t\t\t\t\"seal\": [0.71, \"sealing\"],\r\n\t\t\t\t\t\"optimize\": [0.72, \"optimizing\"],\r\n\t\t\t\t\t\"optimize-modules-basic\": [0.73, \"basic module optimization\"],\r\n\t\t\t\t\t\"optimize-modules\": [0.74, \"module optimization\"],\r\n\t\t\t\t\t\"optimize-modules-advanced\": [0.75, \"advanced module optimization\"],\r\n\t\t\t\t\t\"optimize-chunks-basic\": [0.76, \"basic chunk optimization\"],\r\n\t\t\t\t\t\"optimize-chunks\": [0.77, \"chunk optimization\"],\r\n\t\t\t\t\t\"optimize-chunks-advanced\": [0.78, \"advanced chunk optimization\"],\r\n\t\t\t\t\t// optimize-tree\r\n\t\t\t\t\t\"revive-modules\": [0.80, \"module reviving\"],\r\n\t\t\t\t\t\"optimize-module-order\": [0.81, \"module order optimization\"],\r\n\t\t\t\t\t\"optimize-module-ids\": [0.82, \"module id optimization\"],\r\n\t\t\t\t\t\"revive-chunks\": [0.83, \"chunk reviving\"],\r\n\t\t\t\t\t\"optimize-chunk-order\": [0.84, \"chunk order optimization\"],\r\n\t\t\t\t\t\"optimize-chunk-ids\": [0.85, \"chunk id optimization\"],\r\n\t\t\t\t\t\"before-hash\": [0.86, \"hashing\"],\r\n\t\t\t\t\t\"before-module-assets\": [0.87, \"module assets processing\"],\r\n\t\t\t\t\t\"before-chunk-assets\": [0.88, \"chunk assets processing\"],\r\n\t\t\t\t\t\"additional-chunk-assets\": [0.89, \"additional chunk assets processing\"],\r\n\t\t\t\t\t\"record\": [0.90, \"recording\"]\r\n\t\t\t\t};\r\n\t\t\t\tObject.keys(syncHooks).forEach(name => {\r\n\t\t\t\t\tlet pass = 0;\r\n\t\t\t\t\tconst settings = syncHooks[name];\r\n\t\t\t\t\tcompilation.plugin(name, () => {\r\n\t\t\t\t\t\tif(pass++ > 0)\r\n\t\t\t\t\t\t\thandler(settings[0], settings[1], `pass ${pass}`);\r\n\t\t\t\t\t\telse\r\n\t\t\t\t\t\t\thandler(settings[0], settings[1]);\r\n\t\t\t\t\t});\r\n\t\t\t\t});\r\n\t\t\t\tcompilation.plugin(\"optimize-tree\", (chunks, modules, callback) => {\r\n\t\t\t\t\thandler(0.79, \"module and chunk tree optimization\");\r\n\t\t\t\t\tcallback();\r\n\t\t\t\t});\r\n\t\t\t\tcompilation.plugin(\"additional-assets\", callback => {\r\n\t\t\t\t\thandler(0.91, \"additional asset processing\");\r\n\t\t\t\t\tcallback();\r\n\t\t\t\t});\r\n\t\t\t\tcompilation.plugin(\"optimize-chunk-assets\", (chunks, callback) => {\r\n\t\t\t\t\thandler(0.92, \"chunk asset optimization\");\r\n\t\t\t\t\tcallback();\r\n\t\t\t\t});\r\n\t\t\t\tcompilation.plugin(\"optimize-assets\", (assets, callback) => {\r\n\t\t\t\t\thandler(0.94, \"asset optimization\");\r\n\t\t\t\t\tcallback();\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t\tcompiler.plugin(\"emit\", (compilation, callback) => {\r\n\t\t\t\thandler(0.95, \"emitting\");\r\n\t\t\t\tcallback();\r\n\t\t\t});\r\n\t\t\tcompiler.plugin(\"done\", () => {\r\n\t\t\t\thandler(1, \"\");\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tlet lineCaretPosition = 0,\r\n\t\t\tlastState, lastStateTime;\r\n\r\n\t\tfunction defaultHandler(percentage, msg) {\r\n\t\t\tlet state = msg;\r\n\t\t\tconst details = Array.prototype.slice.call(arguments, 2);\r\n\t\t\tif(percentage < 1) {\r\n\t\t\t\tpercentage = Math.floor(percentage * 100);\r\n\t\t\t\tmsg = `${percentage}% ${msg}`;\r\n\t\t\t\tif(percentage < 100) {\r\n\t\t\t\t\tmsg = ` ${msg}`;\r\n\t\t\t\t}\r\n\t\t\t\tif(percentage < 10) {\r\n\t\t\t\t\tmsg = ` ${msg}`;\r\n\t\t\t\t}\r\n\t\t\t\tdetails.forEach(detail => {\r\n\t\t\t\t\tif(!detail) return;\r\n\t\t\t\t\tif(detail.length > 40) {\r\n\t\t\t\t\t\tdetail = `...${detail.substr(detail.length - 37)}`;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tmsg += ` ${detail}`;\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\tif(profile) {\r\n\t\t\t\tstate = state.replace(/^\\d+\\/\\d+\\s+/, \"\");\r\n\t\t\t\tif(percentage === 0) {\r\n\t\t\t\t\tlastState = null;\r\n\t\t\t\t\tlastStateTime = +new Date();\r\n\t\t\t\t} else if(state !== lastState || percentage === 1) {\r\n\t\t\t\t\tconst now = +new Date();\r\n\t\t\t\t\tif(lastState) {\r\n\t\t\t\t\t\tconst stateMsg = `${now - lastStateTime}ms ${lastState}`;\r\n\t\t\t\t\t\tgoToLineStart(stateMsg);\r\n\t\t\t\t\t\tprocess.stderr.write(stateMsg + \"\\n\");\r\n\t\t\t\t\t\tlineCaretPosition = 0;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tlastState = state;\r\n\t\t\t\t\tlastStateTime = now;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tgoToLineStart(msg);\r\n\t\t\tprocess.stderr.write(msg);\r\n\t\t}\r\n\r\n\t\tfunction goToLineStart(nextMessage) {\r\n\t\t\tlet str = \"\";\r\n\t\t\tfor(; lineCaretPosition > nextMessage.length; lineCaretPosition--) {\r\n\t\t\t\tstr += \"\\b \\b\";\r\n\t\t\t}\r\n\t\t\tfor(var i = 0; i < lineCaretPosition; i++) {\r\n\t\t\t\tstr += \"\\b\";\r\n\t\t\t}\r\n\t\t\tlineCaretPosition = nextMessage.length;\r\n\t\t\tif(str) process.stderr.write(str);\r\n\t\t}\r\n\t}\r\n}\r\nmodule.exports = ProgressPlugin;\r\n","/home/travis/build/npmtest/node-npmtest-webpack/node_modules/webpack/lib/UmdMainTemplatePlugin.js":"/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\n\"use strict\";\r\n\r\nconst ConcatSource = require(\"webpack-sources\").ConcatSource;\r\nconst OriginalSource = require(\"webpack-sources\").OriginalSource;\r\nconst Template = require(\"./Template\");\r\n\r\nfunction accessorToObjectAccess(accessor) {\r\n\treturn accessor.map(a => `[${JSON.stringify(a)}]`).join(\"\");\r\n}\r\n\r\nfunction accessorAccess(base, accessor) {\r\n\taccessor = [].concat(accessor);\r\n\treturn accessor.map((a, idx) => {\r\n\t\ta = base + accessorToObjectAccess(accessor.slice(0, idx + 1));\r\n\t\tif(idx === accessor.length - 1) return a;\r\n\t\treturn `${a} = ${a} || {}`;\r\n\t}).join(\", \");\r\n}\r\n\r\nclass UmdMainTemplatePlugin {\r\n\tconstructor(name, options) {\r\n\t\tthis.name = name;\r\n\t\tthis.optionalAmdExternalAsGlobal = options.optionalAmdExternalAsGlobal;\r\n\t\tthis.namedDefine = options.namedDefine;\r\n\t\tthis.auxiliaryComment = options.auxiliaryComment;\r\n\t}\r\n\r\n\tapply(compilation) {\r\n\t\tconst mainTemplate = compilation.mainTemplate;\r\n\t\tcompilation.templatesPlugin(\"render-with-entry\", function(source, chunk, hash) {\r\n\t\t\tlet externals = chunk.modules.filter(m => m.external);\r\n\t\t\tconst optionalExternals = [];\r\n\t\t\tlet requiredExternals = [];\r\n\t\t\tif(this.optionalAmdExternalAsGlobal) {\r\n\t\t\t\texternals.forEach(m => {\r\n\t\t\t\t\tif(m.optional) {\r\n\t\t\t\t\t\toptionalExternals.push(m);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\trequiredExternals.push(m);\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t\texternals = requiredExternals.concat(optionalExternals);\r\n\t\t\t} else {\r\n\t\t\t\trequiredExternals = externals;\r\n\t\t\t}\r\n\r\n\t\t\tfunction replaceKeys(str) {\r\n\t\t\t\treturn mainTemplate.applyPluginsWaterfall(\"asset-path\", str, {\r\n\t\t\t\t\thash,\r\n\t\t\t\t\tchunk\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\tfunction externalsDepsArray(modules) {\r\n\t\t\t\treturn `[${replaceKeys(modules.map(m => JSON.stringify(typeof m.request === \"object\" ? m.request.amd : m.request)).join(\", \"))}]`;\r\n\t\t\t}\r\n\r\n\t\t\tfunction externalsRootArray(modules) {\r\n\t\t\t\treturn replaceKeys(modules.map(m => {\r\n\t\t\t\t\tlet request = m.request;\r\n\t\t\t\t\tif(typeof request === \"object\") request = request.root;\r\n\t\t\t\t\treturn `root${accessorToObjectAccess([].concat(request))}`;\r\n\t\t\t\t}).join(\", \"));\r\n\t\t\t}\r\n\r\n\t\t\tfunction externalsRequireArray(type) {\r\n\t\t\t\treturn replaceKeys(externals.map(m => {\r\n\t\t\t\t\tlet expr;\r\n\t\t\t\t\tlet request = m.request;\r\n\t\t\t\t\tif(typeof request === \"object\") request = request[type];\r\n\t\t\t\t\tif(Array.isArray(request)) {\r\n\t\t\t\t\t\texpr = `require(${JSON.stringify(request[0])})${accessorToObjectAccess(request.slice(1))}`;\r\n\t\t\t\t\t} else\r\n\t\t\t\t\t\texpr = `require(${JSON.stringify(request)})`;\r\n\t\t\t\t\tif(m.optional) {\r\n\t\t\t\t\t\texpr = `(function webpackLoadOptionalExternalModule() { try { return ${expr}; } catch(e) {} }())`;\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn expr;\r\n\t\t\t\t}).join(\", \"));\r\n\t\t\t}\r\n\r\n\t\t\tfunction externalsArguments(modules) {\r\n\t\t\t\treturn modules.map(m => Template.toIdentifier(`__WEBPACK_EXTERNAL_MODULE_${m.id}__`)).join(\", \");\r\n\t\t\t}\r\n\r\n\t\t\tfunction libraryName(library) {\r\n\t\t\t\treturn JSON.stringify(replaceKeys([].concat(library).pop()));\r\n\t\t\t}\r\n\r\n\t\t\tlet amdFactory;\r\n\t\t\tif(optionalExternals.length > 0) {\r\n\t\t\t\tconst wrapperArguments = externalsArguments(requiredExternals);\r\n\t\t\t\tconst factoryArguments = requiredExternals.length > 0 ?\r\n\t\t\t\t\texternalsArguments(requiredExternals) + \", \" + externalsRootArray(optionalExternals) :\r\n\t\t\t\t\texternalsRootArray(optionalExternals);\r\n\t\t\t\tamdFactory = `function webpackLoadOptionalExternalModuleAmd(${wrapperArguments}) {\\n` +\r\n\t\t\t\t\t`\t\t\treturn factory(${factoryArguments});\\n` +\r\n\t\t\t\t\t\"\t\t}\";\r\n\t\t\t} else {\r\n\t\t\t\tamdFactory = \"factory\";\r\n\t\t\t}\r\n\r\n\t\t\treturn new ConcatSource(new OriginalSource(\r\n\t\t\t\t\"(function webpackUniversalModuleDefinition(root, factory) {\\n\" +\r\n\t\t\t\t(this.auxiliaryComment &&\r\n\t\t\t\t\ttypeof this.auxiliaryComment === \"string\" ?\r\n\t\t\t\t\t\"   //\" + this.auxiliaryComment + \"\\n\" :\r\n\t\t\t\t\tthis.auxiliaryComment.commonjs2 ?\r\n\t\t\t\t\t\"   //\" + this.auxiliaryComment.commonjs2 + \"\\n\" :\r\n\t\t\t\t\t\"\"\r\n\t\t\t\t) +\r\n\t\t\t\t\"\tif(typeof exports === 'object' && typeof module === 'object')\\n\" +\r\n\t\t\t\t\"\t\tmodule.exports = factory(\" + externalsRequireArray(\"commonjs2\") + \");\\n\" +\r\n\t\t\t\t(this.auxiliaryComment &&\r\n\t\t\t\t\ttypeof this.auxiliaryComment === \"string\" ?\r\n\t\t\t\t\t\"   //\" + this.auxiliaryComment + \"\\n\" :\r\n\t\t\t\t\tthis.auxiliaryComment.amd ?\r\n\t\t\t\t\t\"   //\" + this.auxiliaryComment.amd + \"\\n\" :\r\n\t\t\t\t\t\"\"\r\n\t\t\t\t) +\r\n\t\t\t\t\"\telse if(typeof define === 'function' && define.amd)\\n\" +\r\n\t\t\t\t(requiredExternals.length > 0 ?\r\n\t\t\t\t\t(this.name && this.namedDefine === true ?\r\n\t\t\t\t\t\t\"\t\tdefine(\" + libraryName(this.name) + \", \" + externalsDepsArray(requiredExternals) + \", \" + amdFactory + \");\\n\" :\r\n\t\t\t\t\t\t\"\t\tdefine(\" + externalsDepsArray(requiredExternals) + \", \" + amdFactory + \");\\n\"\r\n\t\t\t\t\t) :\r\n\t\t\t\t\t(this.name && this.namedDefine === true ?\r\n\t\t\t\t\t\t\"\t\tdefine(\" + libraryName(this.name) + \", [], \" + amdFactory + \");\\n\" :\r\n\t\t\t\t\t\t\"\t\tdefine([], \" + amdFactory + \");\\n\"\r\n\t\t\t\t\t)\r\n\t\t\t\t) +\r\n\t\t\t\t(this.name ?\r\n\t\t\t\t\t(this.auxiliaryComment &&\r\n\t\t\t\t\t\ttypeof this.auxiliaryComment === \"string\" ?\r\n\t\t\t\t\t\t\"   //\" + this.auxiliaryComment + \"\\n\" :\r\n\t\t\t\t\t\tthis.auxiliaryComment.commonjs ?\r\n\t\t\t\t\t\t\"   //\" + this.auxiliaryComment.commonjs + \"\\n\" :\r\n\t\t\t\t\t\t\"\"\r\n\t\t\t\t\t) +\r\n\t\t\t\t\t\"\telse if(typeof exports === 'object')\\n\" +\r\n\t\t\t\t\t\"\t\texports[\" + libraryName(this.name) + \"] = factory(\" + externalsRequireArray(\"commonjs\") + \");\\n\" +\r\n\t\t\t\t\t(this.auxiliaryComment &&\r\n\t\t\t\t\t\ttypeof this.auxiliaryComment === \"string\" ?\r\n\t\t\t\t\t\t\"   //\" + this.auxiliaryComment + \"\\n\" :\r\n\t\t\t\t\t\tthis.auxiliaryComment.root ?\r\n\t\t\t\t\t\t\"   //\" + this.auxiliaryComment.root + \"\\n\" :\r\n\t\t\t\t\t\t\"\"\r\n\t\t\t\t\t) +\r\n\t\t\t\t\t\"\telse\\n\" +\r\n\t\t\t\t\t\"\t\t\" + replaceKeys(accessorAccess(\"root\", this.name)) + \" = factory(\" + externalsRootArray(externals) + \");\\n\" :\r\n\t\t\t\t\t\"\telse {\\n\" +\r\n\t\t\t\t\t(externals.length > 0 ?\r\n\t\t\t\t\t\t\"\t\tvar a = typeof exports === 'object' ? factory(\" + externalsRequireArray(\"commonjs\") + \") : factory(\" + externalsRootArray(externals) + \");\\n\" :\r\n\t\t\t\t\t\t\"\t\tvar a = factory();\\n\"\r\n\t\t\t\t\t) +\r\n\t\t\t\t\t\"\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\\n\" +\r\n\t\t\t\t\t\"\t}\\n\"\r\n\t\t\t\t) +\r\n\t\t\t\t\"})(this, function(\" + externalsArguments(externals) + \") {\\nreturn \", \"webpack/universalModuleDefinition\"), source, \";\\n})\");\r\n\t\t}.bind(this));\r\n\t\tmainTemplate.plugin(\"global-hash-paths\", function(paths) {\r\n\t\t\tif(this.name) paths = paths.concat(this.name);\r\n\t\t\treturn paths;\r\n\t\t}.bind(this));\r\n\t\tmainTemplate.plugin(\"hash\", function(hash) {\r\n\t\t\thash.update(\"umd\");\r\n\t\t\thash.update(`${this.name}`);\r\n\t\t}.bind(this));\r\n\t}\r\n}\r\n\r\nmodule.exports = UmdMainTemplatePlugin;\r\n","/home/travis/build/npmtest/node-npmtest-webpack/node_modules/webpack/lib/NoErrorsPlugin.js":"/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\n\"use strict\";\r\n\r\nlet deprecationReported = false;\r\n\r\nclass NoErrorsPlugin {\r\n\tapply(compiler) {\r\n\t\tcompiler.plugin(\"should-emit\", (compilation) => {\r\n\t\t\tif(!deprecationReported) {\r\n\t\t\t\tcompilation.warnings.push(\"webpack: Using NoErrorsPlugin is deprecated.\\n\" +\r\n\t\t\t\t\t\"Use NoEmitOnErrorsPlugin instead.\\n\");\r\n\t\t\t\tdeprecationReported = true;\r\n\t\t\t}\r\n\t\t\tif(compilation.errors.length > 0)\r\n\t\t\t\treturn false;\r\n\t\t});\r\n\t\tcompiler.plugin(\"compilation\", (compilation) => {\r\n\t\t\tcompilation.plugin(\"should-record\", () => {\r\n\t\t\t\tif(compilation.errors.length > 0)\r\n\t\t\t\t\treturn false;\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n}\r\n\r\nmodule.exports = NoErrorsPlugin;\r\n","/home/travis/build/npmtest/node-npmtest-webpack/node_modules/webpack/lib/NoEmitOnErrorsPlugin.js":"/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\n\"use strict\";\r\n\r\nclass NoEmitOnErrorsPlugin {\r\n\tapply(compiler) {\r\n\t\tcompiler.plugin(\"should-emit\", (compilation) => {\r\n\t\t\tif(compilation.errors.length > 0)\r\n\t\t\t\treturn false;\r\n\t\t});\r\n\t\tcompiler.plugin(\"compilation\", (compilation) => {\r\n\t\t\tcompilation.plugin(\"should-record\", () => {\r\n\t\t\t\tif(compilation.errors.length > 0)\r\n\t\t\t\t\treturn false;\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n}\r\n\r\nmodule.exports = NoEmitOnErrorsPlugin;\r\n","/home/travis/build/npmtest/node-npmtest-webpack/node_modules/webpack/lib/NewWatchingPlugin.js":"/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\n\"use strict\";\r\n\r\nclass NewWatchingPlugin {\r\n\tapply(compiler) {\r\n\t\tcompiler.plugin(\"compilation\", function(compilation) {\r\n\t\t\tcompilation.warnings.push(new Error(\"The 'NewWatchingPlugin' is no longer necessary (now default)\"));\r\n\t\t});\r\n\t}\r\n}\r\n\r\nmodule.exports = NewWatchingPlugin;\r\n","/home/travis/build/npmtest/node-npmtest-webpack/node_modules/webpack/lib/EnvironmentPlugin.js":"/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthors Simen Brekken @simenbrekken, Einar Löve @einarlove\r\n*/\r\n\r\n\"use strict\";\r\n\r\nconst DefinePlugin = require(\"./DefinePlugin\");\r\n\r\nclass EnvironmentPlugin {\r\n\tconstructor(keys) {\r\n\t\tif(Array.isArray(keys)) {\r\n\t\t\tthis.keys = keys;\r\n\t\t\tthis.defaultValues = {};\r\n\t\t} else if(keys && typeof keys === \"object\") {\r\n\t\t\tthis.keys = Object.keys(keys);\r\n\t\t\tthis.defaultValues = keys;\r\n\t\t} else {\r\n\t\t\tthis.keys = Array.prototype.slice.call(arguments);\r\n\t\t\tthis.defaultValues = {};\r\n\t\t}\r\n\t}\r\n\r\n\tapply(compiler) {\r\n\t\tconst definitions = this.keys.reduce((defs, key) => {\r\n\t\t\tconst value = process.env[key] !== undefined ? process.env[key] : this.defaultValues[key];\r\n\r\n\t\t\tif(value === undefined) {\r\n\t\t\t\tcompiler.plugin(\"this-compilation\", compilation => {\r\n\t\t\t\t\tconst error = new Error(\r\n\t\t\t\t\t\t`EnvironmentPlugin - ${key} environment variable is undefined.\\n\\n` +\r\n\t\t\t\t\t\t\"You can pass an object with default values to suppress this warning.\\n\" +\r\n\t\t\t\t\t\t\"See https://webpack.js.org/plugins/environment-plugin for example.\"\r\n\t\t\t\t\t);\r\n\r\n\t\t\t\t\terror.name = \"EnvVariableNotDefinedError\";\r\n\t\t\t\t\tcompilation.warnings.push(error);\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\tdefs[`process.env.${key}`] = typeof value === \"undefined\" ? \"undefined\" : JSON.stringify(value);\r\n\r\n\t\t\treturn defs;\r\n\t\t}, {});\r\n\r\n\t\tcompiler.apply(new DefinePlugin(definitions));\r\n\t}\r\n}\r\n\r\nmodule.exports = EnvironmentPlugin;\r\n","/home/travis/build/npmtest/node-npmtest-webpack/node_modules/webpack/lib/DllPlugin.js":"/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n\t*/\r\n\"use strict\";\r\n\r\nconst DllEntryPlugin = require(\"./DllEntryPlugin\");\r\nconst LibManifestPlugin = require(\"./LibManifestPlugin\");\r\nconst FlagInitialModulesAsUsedPlugin = require(\"./FlagInitialModulesAsUsedPlugin\");\r\n\r\nclass DllPlugin {\r\n\tconstructor(options) {\r\n\t\tthis.options = options;\r\n\t}\r\n\r\n\tapply(compiler) {\r\n\t\tcompiler.plugin(\"entry-option\", (context, entry) => {\r\n\t\t\tfunction itemToPlugin(item, name) {\r\n\t\t\t\tif(Array.isArray(item))\r\n\t\t\t\t\treturn new DllEntryPlugin(context, item, name);\r\n\t\t\t\telse\r\n\t\t\t\t\tthrow new Error(\"DllPlugin: supply an Array as entry\");\r\n\t\t\t}\r\n\t\t\tif(typeof entry === \"object\" && !Array.isArray(entry)) {\r\n\t\t\t\tObject.keys(entry).forEach(name => {\r\n\t\t\t\t\tcompiler.apply(itemToPlugin(entry[name], name));\r\n\t\t\t\t});\r\n\t\t\t} else {\r\n\t\t\t\tcompiler.apply(itemToPlugin(entry, \"main\"));\r\n\t\t\t}\r\n\t\t\treturn true;\r\n\t\t});\r\n\t\tcompiler.apply(new LibManifestPlugin(this.options));\r\n\t\tcompiler.apply(new FlagInitialModulesAsUsedPlugin());\r\n\t}\r\n}\r\n\r\nmodule.exports = DllPlugin;\r\n","/home/travis/build/npmtest/node-npmtest-webpack/node_modules/webpack/lib/DllEntryPlugin.js":"/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\n\"use strict\";\r\n\r\nconst DllEntryDependency = require(\"./dependencies/DllEntryDependency\");\r\nconst SingleEntryDependency = require(\"./dependencies/SingleEntryDependency\");\r\nconst DllModuleFactory = require(\"./DllModuleFactory\");\r\n\r\nclass DllEntryPlugin {\r\n\tconstructor(context, entries, name) {\r\n\t\tthis.context = context;\r\n\t\tthis.entries = entries;\r\n\t\tthis.name = name;\r\n\t}\r\n\r\n\tapply(compiler) {\r\n\t\tcompiler.plugin(\"compilation\", (compilation, params) => {\r\n\t\t\tconst dllModuleFactory = new DllModuleFactory();\r\n\t\t\tconst normalModuleFactory = params.normalModuleFactory;\r\n\r\n\t\t\tcompilation.dependencyFactories.set(DllEntryDependency, dllModuleFactory);\r\n\r\n\t\t\tcompilation.dependencyFactories.set(SingleEntryDependency, normalModuleFactory);\r\n\t\t});\r\n\t\tcompiler.plugin(\"make\", (compilation, callback) => {\r\n\t\t\tcompilation.addEntry(this.context, new DllEntryDependency(this.entries.map((e, idx) => {\r\n\t\t\t\tconst dep = new SingleEntryDependency(e);\r\n\t\t\t\tdep.loc = `${this.name}:${idx}`;\r\n\t\t\t\treturn dep;\r\n\t\t\t}), this.name), this.name, callback);\r\n\t\t});\r\n\t}\r\n}\r\n\r\nmodule.exports = DllEntryPlugin;\r\n","/home/travis/build/npmtest/node-npmtest-webpack/node_modules/webpack/lib/dependencies/DllEntryDependency.js":"/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\n\"use strict\";\r\nconst Dependency = require(\"../Dependency\");\r\n\r\nclass DllEntryDependency extends Dependency {\r\n\tconstructor(dependencies, name) {\r\n\t\tsuper();\r\n\t\tthis.dependencies = dependencies;\r\n\t\tthis.name = name;\r\n\t}\r\n\r\n\tget type() {\r\n\t\treturn \"dll entry\";\r\n\t}\r\n}\r\n\r\nmodule.exports = DllEntryDependency;\r\n","/home/travis/build/npmtest/node-npmtest-webpack/node_modules/webpack/lib/DllModuleFactory.js":"/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\n\"use strict\";\r\n\r\nvar Tapable = require(\"tapable\");\r\nvar DllModule = require(\"./DllModule\");\r\n\r\nclass DllModuleFactory extends Tapable {\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t}\r\n\tcreate(data, callback) {\r\n\t\tconst dependency = data.dependencies[0];\r\n\t\tcallback(null, new DllModule(data.context, dependency.dependencies, dependency.name, dependency.type));\r\n\t}\r\n}\r\n\r\nmodule.exports = DllModuleFactory;\r\n","/home/travis/build/npmtest/node-npmtest-webpack/node_modules/webpack/lib/DllModule.js":"/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n\t*/\r\n\"use strict\";\r\n\r\nconst Module = require(\"./Module\");\r\nconst RawSource = require(\"webpack-sources\").RawSource;\r\n\r\nclass DllModule extends Module {\r\n\tconstructor(context, dependencies, name, type) {\r\n\t\tsuper();\r\n\t\tthis.context = context;\r\n\t\tthis.dependencies = dependencies;\r\n\t\tthis.name = name;\r\n\t\tthis.built = false;\r\n\t\tthis.cacheable = true;\r\n\t\tthis.type = type;\r\n\t}\r\n\r\n\tidentifier() {\r\n\t\treturn `dll ${this.name}`;\r\n\t}\r\n\r\n\treadableIdentifier() {\r\n\t\treturn `dll ${this.name}`;\r\n\t}\r\n\r\n\tdisconnect() {\r\n\t\tthis.built = false;\r\n\t\tsuper.disconnect();\r\n\t}\r\n\r\n\tbuild(options, compilation, resolver, fs, callback) {\r\n\t\tthis.built = true;\r\n\t\treturn callback();\r\n\t}\r\n\r\n\tsource() {\r\n\t\treturn new RawSource(\"module.exports = __webpack_require__;\");\r\n\t}\r\n\r\n\tneedRebuild() {\r\n\t\treturn false;\r\n\t}\r\n\r\n\tsize() {\r\n\t\treturn 12;\r\n\t}\r\n\r\n\tupdateHash(hash) {\r\n\t\thash.update(\"dll module\");\r\n\t\thash.update(this.name || \"\");\r\n\t\tsuper.updateHash(hash);\r\n\t}\r\n}\r\n\r\nmodule.exports = DllModule;\r\n","/home/travis/build/npmtest/node-npmtest-webpack/node_modules/webpack/lib/LibManifestPlugin.js":"/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\n\"use strict\";\r\n\r\nconst path = require(\"path\");\r\nconst asyncLib = require(\"async\");\r\n\r\nclass LibManifestPlugin {\r\n\tconstructor(options) {\r\n\t\tthis.options = options;\r\n\t}\r\n\r\n\tapply(compiler) {\r\n\t\tcompiler.plugin(\"emit\", (compilation, callback) => {\r\n\t\t\tasyncLib.forEach(compilation.chunks, (chunk, callback) => {\r\n\t\t\t\tif(!chunk.isInitial()) {\r\n\t\t\t\t\tcallback();\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\tconst targetPath = compilation.getPath(this.options.path, {\r\n\t\t\t\t\thash: compilation.hash,\r\n\t\t\t\t\tchunk\r\n\t\t\t\t});\r\n\t\t\t\tconst name = this.options.name && compilation.getPath(this.options.name, {\r\n\t\t\t\t\thash: compilation.hash,\r\n\t\t\t\t\tchunk\r\n\t\t\t\t});\r\n\t\t\t\tconst manifest = {\r\n\t\t\t\t\tname,\r\n\t\t\t\t\ttype: this.options.type,\r\n\t\t\t\t\tcontent: chunk.modules.reduce((obj, module) => {\r\n\t\t\t\t\t\tif(module.libIdent) {\r\n\t\t\t\t\t\t\tconst ident = module.libIdent({\r\n\t\t\t\t\t\t\t\tcontext: this.options.context || compiler.options.context\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\tif(ident) {\r\n\t\t\t\t\t\t\t\tobj[ident] = {\r\n\t\t\t\t\t\t\t\t\tid: module.id,\r\n\t\t\t\t\t\t\t\t\tmeta: module.meta,\r\n\t\t\t\t\t\t\t\t\texports: Array.isArray(module.providedExports) ? module.providedExports : undefined\r\n\t\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\treturn obj;\r\n\t\t\t\t\t}, {})\r\n\t\t\t\t};\r\n\t\t\t\tconst content = new Buffer(JSON.stringify(manifest, null, 2), \"utf8\"); //eslint-disable-line\r\n\t\t\t\tcompiler.outputFileSystem.mkdirp(path.dirname(targetPath), err => {\r\n\t\t\t\t\tif(err) return callback(err);\r\n\t\t\t\t\tcompiler.outputFileSystem.writeFile(targetPath, content, callback);\r\n\t\t\t\t});\r\n\t\t\t}, callback);\r\n\t\t});\r\n\t}\r\n}\r\nmodule.exports = LibManifestPlugin;\r\n","/home/travis/build/npmtest/node-npmtest-webpack/node_modules/webpack/lib/FlagInitialModulesAsUsedPlugin.js":"/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\n\"use strict\";\r\n\r\nclass FlagInitialModulesAsUsedPlugin {\r\n\tapply(compiler) {\r\n\t\tcompiler.plugin(\"compilation\", (compilation) => {\r\n\t\t\tcompilation.plugin(\"after-optimize-chunks\", (chunks) => {\r\n\t\t\t\tchunks.forEach((chunk) => {\r\n\t\t\t\t\tif(!chunk.isInitial()) {\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tchunk.modules.forEach((module) => {\r\n\t\t\t\t\t\tmodule.usedExports = true;\r\n\t\t\t\t\t});\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n}\r\n\r\nmodule.exports = FlagInitialModulesAsUsedPlugin;\r\n","/home/travis/build/npmtest/node-npmtest-webpack/node_modules/webpack/lib/DllReferencePlugin.js":"/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\n\"use strict\";\r\n\r\nconst DelegatedSourceDependency = require(\"./dependencies/DelegatedSourceDependency\");\r\nconst DelegatedModuleFactoryPlugin = require(\"./DelegatedModuleFactoryPlugin\");\r\nconst ExternalModuleFactoryPlugin = require(\"./ExternalModuleFactoryPlugin\");\r\n\r\nclass DllReferencePlugin {\r\n\tconstructor(options) {\r\n\t\tthis.options = options;\r\n\t}\r\n\r\n\tapply(compiler) {\r\n\t\tcompiler.plugin(\"compilation\", (compilation, params) => {\r\n\t\t\tconst normalModuleFactory = params.normalModuleFactory;\r\n\t\t\tcompilation.dependencyFactories.set(DelegatedSourceDependency, normalModuleFactory);\r\n\t\t});\r\n\r\n\t\tcompiler.plugin(\"before-compile\", (params, callback) => {\r\n\t\t\tconst manifest = this.options.manifest;\r\n\t\t\tif(typeof manifest === \"string\") {\r\n\t\t\t\tparams.compilationDependencies.push(manifest);\r\n\t\t\t\tcompiler.inputFileSystem.readFile(manifest, function(err, result) {\r\n\t\t\t\t\tif(err) return callback(err);\r\n\t\t\t\t\tparams[\"dll reference \" + manifest] = JSON.parse(result.toString(\"utf-8\"));\r\n\t\t\t\t\treturn callback();\r\n\t\t\t\t});\r\n\t\t\t} else {\r\n\t\t\t\treturn callback();\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tcompiler.plugin(\"compile\", (params) => {\r\n\t\t\tlet manifest = this.options.manifest;\r\n\t\t\tif(typeof manifest === \"string\") {\r\n\t\t\t\tmanifest = params[\"dll reference \" + manifest];\r\n\t\t\t}\r\n\t\t\tconst name = this.options.name || manifest.name;\r\n\t\t\tconst sourceType = this.options.sourceType || \"var\";\r\n\t\t\tconst externals = {};\r\n\t\t\tconst source = \"dll-reference \" + name;\r\n\t\t\texternals[source] = name;\r\n\t\t\tparams.normalModuleFactory.apply(new ExternalModuleFactoryPlugin(sourceType, externals));\r\n\t\t\tparams.normalModuleFactory.apply(new DelegatedModuleFactoryPlugin({\r\n\t\t\t\tsource: source,\r\n\t\t\t\ttype: this.options.type,\r\n\t\t\t\tscope: this.options.scope,\r\n\t\t\t\tcontext: this.options.context || compiler.options.context,\r\n\t\t\t\tcontent: this.options.content || manifest.content,\r\n\t\t\t\textensions: this.options.extensions\r\n\t\t\t}));\r\n\t\t});\r\n\t}\r\n}\r\n\r\nmodule.exports = DllReferencePlugin;\r\n","/home/travis/build/npmtest/node-npmtest-webpack/node_modules/webpack/lib/dependencies/DelegatedSourceDependency.js":"/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\n\"use strict\";\r\nconst ModuleDependency = require(\"./ModuleDependency\");\r\n\r\nclass DelegatedSourceDependency extends ModuleDependency {\r\n\tconstructor(request) {\r\n\t\tsuper(request);\r\n\t}\r\n\r\n\tget type() {\r\n\t\treturn \"delegated source\";\r\n\t}\r\n}\r\n\r\nmodule.exports = DelegatedSourceDependency;\r\n","/home/travis/build/npmtest/node-npmtest-webpack/node_modules/webpack/lib/DelegatedModuleFactoryPlugin.js":"/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\n\"use strict\";\r\n\r\nconst DelegatedModule = require(\"./DelegatedModule\");\r\n\r\n// options.source\r\n// options.type\r\n// options.context\r\n// options.scope\r\n// options.content\r\nclass DelegatedModuleFactoryPlugin {\r\n\tconstructor(options) {\r\n\t\tthis.options = options;\r\n\t\toptions.type = options.type || \"require\";\r\n\t\toptions.extensions = options.extensions || [\"\", \".js\"];\r\n\t}\r\n\r\n\tapply(normalModuleFactory) {\r\n\t\tconst scope = this.options.scope;\r\n\t\tif(scope) {\r\n\t\t\tnormalModuleFactory.plugin(\"factory\", factory => (data, callback) => {\r\n\t\t\t\tconst dependency = data.dependencies[0];\r\n\t\t\t\tconst request = dependency.request;\r\n\t\t\t\tif(request && request.indexOf(scope + \"/\") === 0) {\r\n\t\t\t\t\tconst innerRequest = \".\" + request.substr(scope.length);\r\n\t\t\t\t\tlet resolved;\r\n\t\t\t\t\tif(innerRequest in this.options.content) {\r\n\t\t\t\t\t\tresolved = this.options.content[innerRequest];\r\n\t\t\t\t\t\treturn callback(null, new DelegatedModule(this.options.source, resolved, this.options.type, innerRequest));\r\n\t\t\t\t\t}\r\n\t\t\t\t\tfor(let i = 0; i < this.options.extensions.length; i++) {\r\n\t\t\t\t\t\tconst requestPlusExt = innerRequest + this.options.extensions[i];\r\n\t\t\t\t\t\tif(requestPlusExt in this.options.content) {\r\n\t\t\t\t\t\t\tresolved = this.options.content[requestPlusExt];\r\n\t\t\t\t\t\t\treturn callback(null, new DelegatedModule(this.options.source, resolved, this.options.type, requestPlusExt));\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\treturn factory(data, callback);\r\n\t\t\t});\r\n\t\t} else {\r\n\t\t\tnormalModuleFactory.plugin(\"module\", module => {\r\n\t\t\t\tif(module.libIdent) {\r\n\t\t\t\t\tconst request = module.libIdent(this.options);\r\n\t\t\t\t\tif(request && request in this.options.content) {\r\n\t\t\t\t\t\tconst resolved = this.options.content[request];\r\n\t\t\t\t\t\treturn new DelegatedModule(this.options.source, resolved, this.options.type, request);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\treturn module;\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n}\r\nmodule.exports = DelegatedModuleFactoryPlugin;\r\n","/home/travis/build/npmtest/node-npmtest-webpack/node_modules/webpack/lib/DelegatedModule.js":"/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\n\"use strict\";\r\n\r\nconst Module = require(\"./Module\");\r\nconst OriginalSource = require(\"webpack-sources\").OriginalSource;\r\nconst RawSource = require(\"webpack-sources\").RawSource;\r\nconst WebpackMissingModule = require(\"./dependencies/WebpackMissingModule\");\r\nconst DelegatedSourceDependency = require(\"./dependencies/DelegatedSourceDependency\");\r\n\r\nclass DelegatedModule extends Module {\r\n\tconstructor(sourceRequest, data, type, userRequest) {\r\n\t\tsuper();\r\n\t\tthis.sourceRequest = sourceRequest;\r\n\t\tthis.request = data.id;\r\n\t\tthis.meta = data.meta;\r\n\t\tthis.type = type;\r\n\t\tthis.userRequest = userRequest;\r\n\t\tthis.built = false;\r\n\t\tthis.delegated = true;\r\n\t\tthis.delegateData = data;\r\n\t}\r\n\r\n\tidentifier() {\r\n\t\treturn `delegated ${JSON.stringify(this.request)} from ${this.sourceRequest}`;\r\n\t}\r\n\r\n\treadableIdentifier() {\r\n\t\treturn `delegated ${this.userRequest} from ${this.sourceRequest}`;\r\n\t}\r\n\r\n\tneedRebuild() {\r\n\t\treturn false;\r\n\t}\r\n\r\n\tbuild(options, compilation, resolver, fs, callback) {\r\n\t\tthis.built = true;\r\n\t\tthis.builtTime = new Date().getTime();\r\n\t\tthis.usedExports = true;\r\n\t\tthis.providedExports = this.delegateData.exports || true;\r\n\t\tthis.dependencies.length = 0;\r\n\t\tthis.addDependency(new DelegatedSourceDependency(this.sourceRequest));\r\n\t\tcallback();\r\n\t}\r\n\r\n\tunbuild() {\r\n\t\tthis.built = false;\r\n\t\tsuper.unbuild();\r\n\t}\r\n\r\n\tsource() {\r\n\t\tconst sourceModule = this.dependencies[0].module;\r\n\t\tlet str;\r\n\r\n\t\tif(!sourceModule) {\r\n\t\t\tstr = WebpackMissingModule.moduleCode(this.sourceRequest);\r\n\t\t} else {\r\n\t\t\tstr = `module.exports = (__webpack_require__(${sourceModule.id}))`;\r\n\r\n\t\t\tswitch(this.type) {\r\n\t\t\t\tcase \"require\":\r\n\t\t\t\t\tstr += `(${JSON.stringify(this.request)})`;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"object\":\r\n\t\t\t\t\tstr += `[${JSON.stringify(this.request)}]`;\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif(this.useSourceMap) {\r\n\t\t\treturn new OriginalSource(str, this.identifier());\r\n\t\t} else {\r\n\t\t\treturn new RawSource(str);\r\n\t\t}\r\n\t}\r\n\r\n\tsize() {\r\n\t\treturn 42;\r\n\t}\r\n}\r\n\r\nmodule.exports = DelegatedModule;\r\n","/home/travis/build/npmtest/node-npmtest-webpack/node_modules/webpack/lib/LoaderOptionsPlugin.js":"/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\n\"use strict\";\r\n\r\nconst ModuleFilenameHelpers = require(\"./ModuleFilenameHelpers\");\r\n\r\nclass LoaderOptionsPlugin {\r\n\tconstructor(options) {\r\n\t\tif(typeof options !== \"object\") options = {};\r\n\t\tif(!options.test) options.test = {\r\n\t\t\ttest: () => true\r\n\t\t};\r\n\t\tthis.options = options;\r\n\t}\r\n\r\n\tapply(compiler) {\r\n\t\tconst options = this.options;\r\n\t\tcompiler.plugin(\"compilation\", (compilation) => {\r\n\t\t\tcompilation.plugin(\"normal-module-loader\", (context, module) => {\r\n\t\t\t\tconst resource = module.resource;\r\n\t\t\t\tif(!resource) return;\r\n\t\t\t\tconst i = resource.indexOf(\"?\");\r\n\t\t\t\tif(ModuleFilenameHelpers.matchObject(options, i < 0 ? resource : resource.substr(0, i))) {\r\n\t\t\t\t\tconst filterSet = new Set([\"include\", \"exclude\", \"test\"]);\r\n\t\t\t\t\tObject.keys(options)\r\n\t\t\t\t\t\t.filter((key) => !filterSet.has(key))\r\n\t\t\t\t\t\t.forEach((key) => context[key] = options[key]);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n}\r\n\r\nmodule.exports = LoaderOptionsPlugin;\r\n","/home/travis/build/npmtest/node-npmtest-webpack/node_modules/webpack/lib/NamedModulesPlugin.js":"/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\n\"use strict\";\r\n\r\nclass NamedModulesPlugin {\r\n\tconstructor(options) {\r\n\t\tthis.options = options || {};\r\n\t}\r\n\r\n\tapply(compiler) {\r\n\t\tcompiler.plugin(\"compilation\", (compilation) => {\r\n\t\t\tcompilation.plugin(\"before-module-ids\", (modules) => {\r\n\t\t\t\tmodules.forEach((module) => {\r\n\t\t\t\t\tif(module.id === null && module.libIdent) {\r\n\t\t\t\t\t\tmodule.id = module.libIdent({\r\n\t\t\t\t\t\t\tcontext: this.options.context || compiler.options.context\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n}\r\n\r\nmodule.exports = NamedModulesPlugin;\r\n","/home/travis/build/npmtest/node-npmtest-webpack/node_modules/webpack/lib/NamedChunksPlugin.js":"/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\n\"use strict\";\r\n\r\nclass NamedChunksPlugin {\r\n\r\n\tstatic defaultNameResolver(chunk) {\r\n\t\treturn chunk.name || null;\r\n\t}\r\n\r\n\tconstructor(nameResolver) {\r\n\t\tthis.nameResolver = nameResolver || NamedChunksPlugin.defaultNameResolver;\r\n\t}\r\n\r\n\tapply(compiler) {\r\n\t\tcompiler.plugin(\"compilation\", (compilation) => {\r\n\t\t\tcompilation.plugin(\"before-chunk-ids\", (chunks) => {\r\n\t\t\t\tchunks.forEach((chunk) => {\r\n\t\t\t\t\tif(chunk.id === null) {\r\n\t\t\t\t\t\tchunk.id = this.nameResolver(chunk);\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n}\r\n\r\nmodule.exports = NamedChunksPlugin;\r\n","/home/travis/build/npmtest/node-npmtest-webpack/node_modules/webpack/lib/HashedModuleIdsPlugin.js":"/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\n\"use strict\";\r\nconst createHash = require(\"crypto\").createHash;\r\n\r\nclass HashedModuleIdsPlugin {\r\n\tconstructor(options) {\r\n\t\tthis.options = Object.assign({\r\n\t\t\thashFunction: \"md5\",\r\n\t\t\thashDigest: \"base64\",\r\n\t\t\thashDigestLength: 4\r\n\t\t}, options);\r\n\t}\r\n\r\n\tapply(compiler) {\r\n\t\tconst options = this.options;\r\n\t\tcompiler.plugin(\"compilation\", (compilation) => {\r\n\t\t\tconst usedIds = new Set();\r\n\t\t\tcompilation.plugin(\"before-module-ids\", (modules) => {\r\n\t\t\t\tmodules.forEach((module) => {\r\n\t\t\t\t\tif(module.id === null && module.libIdent) {\r\n\t\t\t\t\t\tconst id = module.libIdent({\r\n\t\t\t\t\t\t\tcontext: this.options.context || compiler.options.context\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t\tconst hash = createHash(options.hashFunction);\r\n\t\t\t\t\t\thash.update(id);\r\n\t\t\t\t\t\tconst hashId = hash.digest(options.hashDigest);\r\n\t\t\t\t\t\tlet len = options.hashDigestLength;\r\n\t\t\t\t\t\twhile(usedIds.has(hashId.substr(0, len)))\r\n\t\t\t\t\t\t\tlen++;\r\n\t\t\t\t\t\tmodule.id = hashId.substr(0, len);\r\n\t\t\t\t\t\tusedIds.add(module.id);\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n}\r\n\r\nmodule.exports = HashedModuleIdsPlugin;\r\n","/home/travis/build/npmtest/node-npmtest-webpack/node_modules/webpack/lib/optimize/AggressiveMergingPlugin.js":"/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\n\"use strict\";\r\n\r\nclass AggressiveMergingPlugin {\r\n\tconstructor(options) {\r\n\t\tif(options !== undefined && typeof options !== \"object\" || Array.isArray(options)) {\r\n\t\t\tthrow new Error(\"Argument should be an options object. To use defaults, pass in nothing.\\nFor more info on options, see https://webpack.js.org/plugins/\");\r\n\t\t}\r\n\t\tthis.options = options || {};\r\n\t}\r\n\r\n\tapply(compiler) {\r\n\t\tconst options = this.options;\r\n\t\tconst minSizeReduce = options.minSizeReduce || 1.5;\r\n\r\n\t\tfunction getParentsWeight(chunk) {\r\n\t\t\treturn chunk.parents.map((p) => {\r\n\t\t\t\treturn p.isInitial() ? options.entryChunkMultiplicator || 10 : 1;\r\n\t\t\t}).reduce((a, b) => {\r\n\t\t\t\treturn a + b;\r\n\t\t\t}, 0);\r\n\t\t}\r\n\t\tcompiler.plugin(\"compilation\", (compilation) => {\r\n\t\t\tcompilation.plugin(\"optimize-chunks-advanced\", (chunks) => {\r\n\t\t\t\tlet combinations = [];\r\n\t\t\t\tchunks.forEach((a, idx) => {\r\n\t\t\t\t\tif(a.isInitial()) return;\r\n\t\t\t\t\tfor(let i = 0; i < idx; i++) {\r\n\t\t\t\t\t\tconst b = chunks[i];\r\n\t\t\t\t\t\tif(b.isInitial()) continue;\r\n\t\t\t\t\t\tcombinations.push([b, a]);\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\r\n\t\t\t\tcombinations.forEach((pair) => {\r\n\t\t\t\t\tconst a = pair[0].size({\r\n\t\t\t\t\t\tchunkOverhead: 0\r\n\t\t\t\t\t});\r\n\t\t\t\t\tconst b = pair[1].size({\r\n\t\t\t\t\t\tchunkOverhead: 0\r\n\t\t\t\t\t});\r\n\t\t\t\t\tconst ab = pair[0].integratedSize(pair[1], {\r\n\t\t\t\t\t\tchunkOverhead: 0\r\n\t\t\t\t\t});\r\n\t\t\t\t\tpair.push({\r\n\t\t\t\t\t\ta: a,\r\n\t\t\t\t\t\tb: b,\r\n\t\t\t\t\t\tab: ab\r\n\t\t\t\t\t});\r\n\t\t\t\t\tlet newSize;\r\n\t\t\t\t\tif(ab === false) {\r\n\t\t\t\t\t\tpair.unshift(false);\r\n\t\t\t\t\t} else if(options.moveToParents) {\r\n\t\t\t\t\t\tconst aOnly = ab - b;\r\n\t\t\t\t\t\tconst bOnly = ab - a;\r\n\t\t\t\t\t\tconst common = a + b - ab;\r\n\t\t\t\t\t\tnewSize = common + getParentsWeight(pair[0]) * aOnly + getParentsWeight(pair[1]) * bOnly;\r\n\t\t\t\t\t\tpair.push({\r\n\t\t\t\t\t\t\taOnly: aOnly,\r\n\t\t\t\t\t\t\tbOnly: bOnly,\r\n\t\t\t\t\t\t\tcommon: common,\r\n\t\t\t\t\t\t\tnewSize: newSize\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tnewSize = ab;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tpair.unshift((a + b) / newSize);\r\n\t\t\t\t});\r\n\t\t\t\tcombinations = combinations.filter((pair) => {\r\n\t\t\t\t\treturn pair[0] !== false;\r\n\t\t\t\t});\r\n\t\t\t\tcombinations.sort((a, b) => {\r\n\t\t\t\t\treturn b[0] - a[0];\r\n\t\t\t\t});\r\n\r\n\t\t\t\tconst pair = combinations[0];\r\n\r\n\t\t\t\tif(!pair) return;\r\n\t\t\t\tif(pair[0] < minSizeReduce) return;\r\n\r\n\t\t\t\tif(options.moveToParents) {\r\n\t\t\t\t\tconst commonModules = pair[1].modules.filter((m) => {\r\n\t\t\t\t\t\treturn pair[2].modules.indexOf(m) >= 0;\r\n\t\t\t\t\t});\r\n\t\t\t\t\tconst aOnlyModules = pair[1].modules.filter((m) => {\r\n\t\t\t\t\t\treturn commonModules.indexOf(m) < 0;\r\n\t\t\t\t\t});\r\n\t\t\t\t\tconst bOnlyModules = pair[2].modules.filter((m) => {\r\n\t\t\t\t\t\treturn commonModules.indexOf(m) < 0;\r\n\t\t\t\t\t});\r\n\t\t\t\t\taOnlyModules.forEach((m) => {\r\n\t\t\t\t\t\tpair[1].removeModule(m);\r\n\t\t\t\t\t\tm.removeChunk(pair[1]);\r\n\t\t\t\t\t\tpair[1].parents.forEach((c) => {\r\n\t\t\t\t\t\t\tc.addModule(m);\r\n\t\t\t\t\t\t\tm.addChunk(c);\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t});\r\n\t\t\t\t\tbOnlyModules.forEach((m) => {\r\n\t\t\t\t\t\tpair[2].removeModule(m);\r\n\t\t\t\t\t\tm.removeChunk(pair[2]);\r\n\t\t\t\t\t\tpair[2].parents.forEach((c) => {\r\n\t\t\t\t\t\t\tc.addModule(m);\r\n\t\t\t\t\t\t\tm.addChunk(c);\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t\tif(pair[1].integrate(pair[2], \"aggressive-merge\")) {\r\n\t\t\t\t\tchunks.splice(chunks.indexOf(pair[2]), 1);\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n}\r\n\r\nmodule.exports = AggressiveMergingPlugin;\r\n","/home/travis/build/npmtest/node-npmtest-webpack/node_modules/webpack/lib/optimize/AggressiveSplittingPlugin.js":"/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\n\"use strict\";\r\n\r\nconst identifierUtils = require(\"../util/identifier\");\r\n\r\nfunction toIndexOf(list) {\r\n\treturn function(item) {\r\n\t\treturn list.indexOf(item);\r\n\t};\r\n}\r\n\r\nfunction toChunkModuleIndices(modules) {\r\n\treturn function(idx) {\r\n\t\treturn modules[idx];\r\n\t};\r\n}\r\n\r\nfunction moveModuleBetween(oldChunk, newChunk) {\r\n\treturn function(module) {\r\n\t\toldChunk.moveModule(module, newChunk);\r\n\t};\r\n}\r\n\r\nfunction isNotAEntryModule(entryModule) {\r\n\treturn function(module) {\r\n\t\treturn entryModule !== module;\r\n\t};\r\n}\r\n\r\nfunction copyWithReason(obj) {\r\n\tconst newObj = {};\r\n\tObject.keys(obj).forEach((key) => {\r\n\t\tnewObj[key] = obj[key];\r\n\t});\r\n\tif(!newObj.reasons || newObj.reasons.indexOf(\"aggressive-splitted\") < 0)\r\n\t\tnewObj.reasons = (newObj.reasons || []).concat(\"aggressive-splitted\");\r\n\treturn newObj;\r\n}\r\n\r\nclass AggressiveSplittingPlugin {\r\n\tconstructor(options) {\r\n\t\tthis.options = options || {};\r\n\t\tif(typeof this.options.minSize !== \"number\") this.options.minSize = 30 * 1024;\r\n\t\tif(typeof this.options.maxSize !== \"number\") this.options.maxSize = 50 * 1024;\r\n\t\tif(typeof this.options.chunkOverhead !== \"number\") this.options.chunkOverhead = 0;\r\n\t\tif(typeof this.options.entryChunkMultiplicator !== \"number\") this.options.entryChunkMultiplicator = 1;\r\n\t}\r\n\tapply(compiler) {\r\n\t\tcompiler.plugin(\"compilation\", (compilation) => {\r\n\t\t\tcompilation.plugin(\"optimize-chunks-advanced\", (chunks) => {\r\n\t\t\t\tconst savedSplits = compilation.records && compilation.records.aggressiveSplits || [];\r\n\t\t\t\tconst usedSplits = compilation._aggressiveSplittingSplits ?\r\n\t\t\t\t\tsavedSplits.concat(compilation._aggressiveSplittingSplits) : savedSplits;\r\n\r\n\t\t\t\tconst minSize = this.options.minSize;\r\n\t\t\t\tconst maxSize = this.options.maxSize;\r\n\t\t\t\t// 1. try to restore to recorded splitting\r\n\t\t\t\tfor(let j = 0; j < usedSplits.length; j++) {\r\n\t\t\t\t\tconst splitData = usedSplits[j];\r\n\t\t\t\t\tfor(let i = 0; i < chunks.length; i++) {\r\n\t\t\t\t\t\tconst chunk = chunks[i];\r\n\t\t\t\t\t\tconst chunkModuleNames = chunk.modules.map(m => identifierUtils.makePathsRelative(compiler.context, m.identifier()));\r\n\r\n\t\t\t\t\t\tif(chunkModuleNames.length < splitData.modules.length)\r\n\t\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t\tconst moduleIndicies = splitData.modules.map(toIndexOf(chunkModuleNames));\r\n\t\t\t\t\t\tconst hasAllModules = moduleIndicies.every((idx) => {\r\n\t\t\t\t\t\t\treturn idx >= 0;\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t\tif(hasAllModules) {\r\n\t\t\t\t\t\t\tif(chunkModuleNames.length > splitData.modules.length) {\r\n\t\t\t\t\t\t\t\tconst selectedModules = moduleIndicies.map(toChunkModuleIndices(chunk.modules));\r\n\t\t\t\t\t\t\t\tconst newChunk = compilation.addChunk();\r\n\t\t\t\t\t\t\t\tselectedModules.forEach(moveModuleBetween(chunk, newChunk));\r\n\t\t\t\t\t\t\t\tchunk.split(newChunk);\r\n\t\t\t\t\t\t\t\tchunk.name = null;\r\n\t\t\t\t\t\t\t\tnewChunk._fromAggressiveSplitting = true;\r\n\t\t\t\t\t\t\t\tif(j < savedSplits.length)\r\n\t\t\t\t\t\t\t\t\tnewChunk._fromAggressiveSplittingIndex = j;\r\n\t\t\t\t\t\t\t\tif(splitData.id !== null && splitData.id !== undefined) {\r\n\t\t\t\t\t\t\t\t\tnewChunk.id = splitData.id;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tnewChunk.origins = chunk.origins.map(copyWithReason);\r\n\t\t\t\t\t\t\t\tchunk.origins = chunk.origins.map(copyWithReason);\r\n\t\t\t\t\t\t\t\treturn true;\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tif(j < savedSplits.length)\r\n\t\t\t\t\t\t\t\t\tchunk._fromAggressiveSplittingIndex = j;\r\n\t\t\t\t\t\t\t\tchunk.name = null;\r\n\t\t\t\t\t\t\t\tif(splitData.id !== null && splitData.id !== undefined) {\r\n\t\t\t\t\t\t\t\t\tchunk.id = splitData.id;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\t// 2. for any other chunk which isn't splitted yet, split it\r\n\t\t\t\tfor(let i = 0; i < chunks.length; i++) {\r\n\t\t\t\t\tconst chunk = chunks[i];\r\n\t\t\t\t\tconst size = chunk.size(this.options);\r\n\t\t\t\t\tif(size > maxSize && chunk.modules.length > 1) {\r\n\t\t\t\t\t\tconst newChunk = compilation.addChunk();\r\n\t\t\t\t\t\tconst modules = chunk.modules\r\n\t\t\t\t\t\t\t.filter(isNotAEntryModule(chunk.entryModule))\r\n\t\t\t\t\t\t\t.sort((a, b) => {\r\n\t\t\t\t\t\t\t\ta = a.identifier();\r\n\t\t\t\t\t\t\t\tb = b.identifier();\r\n\t\t\t\t\t\t\t\tif(a > b) return 1;\r\n\t\t\t\t\t\t\t\tif(a < b) return -1;\r\n\t\t\t\t\t\t\t\treturn 0;\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\tfor(let k = 0; k < modules.length; k++) {\r\n\t\t\t\t\t\t\tchunk.moveModule(modules[k], newChunk);\r\n\t\t\t\t\t\t\tconst newSize = newChunk.size(this.options);\r\n\t\t\t\t\t\t\tconst chunkSize = chunk.size(this.options);\r\n\t\t\t\t\t\t\t// break early if it's fine\r\n\t\t\t\t\t\t\tif(chunkSize < maxSize && newSize < maxSize && newSize >= minSize && chunkSize >= minSize)\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\tif(newSize > maxSize && k === 0) {\r\n\t\t\t\t\t\t\t\t// break if there is a single module which is bigger than maxSize\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tif(newSize > maxSize || chunkSize < minSize) {\r\n\t\t\t\t\t\t\t\t// move it back\r\n\t\t\t\t\t\t\t\tnewChunk.moveModule(modules[k], chunk);\r\n\t\t\t\t\t\t\t\t// check if it's fine now\r\n\t\t\t\t\t\t\t\tif(newSize < maxSize && newSize >= minSize && chunkSize >= minSize)\r\n\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif(newChunk.modules.length > 0) {\r\n\t\t\t\t\t\t\tchunk.split(newChunk);\r\n\t\t\t\t\t\t\tchunk.name = null;\r\n\t\t\t\t\t\t\tnewChunk.origins = chunk.origins.map(copyWithReason);\r\n\t\t\t\t\t\t\tchunk.origins = chunk.origins.map(copyWithReason);\r\n\t\t\t\t\t\t\tcompilation._aggressiveSplittingSplits = (compilation._aggressiveSplittingSplits || []).concat({\r\n\t\t\t\t\t\t\t\tmodules: newChunk.modules.map(m => identifierUtils.makePathsRelative(compiler.context, m.identifier()))\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\treturn true;\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tchunks.splice(chunks.indexOf(newChunk), 1);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\tcompilation.plugin(\"record-hash\", (records) => {\r\n\t\t\t\t// 3. save to made splittings to records\r\n\t\t\t\tconst minSize = this.options.minSize;\r\n\t\t\t\tif(!records.aggressiveSplits) records.aggressiveSplits = [];\r\n\t\t\t\tcompilation.chunks.forEach((chunk) => {\r\n\t\t\t\t\tif(chunk.hasEntryModule()) return;\r\n\t\t\t\t\tconst size = chunk.size(this.options);\r\n\t\t\t\t\tconst incorrectSize = size < minSize;\r\n\t\t\t\t\tconst modules = chunk.modules.map(m => identifierUtils.makePathsRelative(compiler.context, m.identifier()));\r\n\t\t\t\t\tif(typeof chunk._fromAggressiveSplittingIndex === \"undefined\") {\r\n\t\t\t\t\t\tif(incorrectSize) return;\r\n\t\t\t\t\t\tchunk.recorded = true;\r\n\t\t\t\t\t\trecords.aggressiveSplits.push({\r\n\t\t\t\t\t\t\tmodules: modules,\r\n\t\t\t\t\t\t\thash: chunk.hash,\r\n\t\t\t\t\t\t\tid: chunk.id\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tconst splitData = records.aggressiveSplits[chunk._fromAggressiveSplittingIndex];\r\n\t\t\t\t\t\tif(splitData.hash !== chunk.hash || incorrectSize) {\r\n\t\t\t\t\t\t\tif(chunk._fromAggressiveSplitting) {\r\n\t\t\t\t\t\t\t\tchunk._aggressiveSplittingInvalid = true;\r\n\t\t\t\t\t\t\t\tsplitData.invalid = true;\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tsplitData.hash = chunk.hash;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t\trecords.aggressiveSplits = records.aggressiveSplits.filter((splitData) => {\r\n\t\t\t\t\treturn !splitData.invalid;\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t\tcompilation.plugin(\"need-additional-seal\", (callback) => {\r\n\t\t\t\tconst invalid = compilation.chunks.some((chunk) => {\r\n\t\t\t\t\treturn chunk._aggressiveSplittingInvalid;\r\n\t\t\t\t});\r\n\t\t\t\tif(invalid)\r\n\t\t\t\t\treturn true;\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n}\r\nmodule.exports = AggressiveSplittingPlugin;\r\n","/home/travis/build/npmtest/node-npmtest-webpack/node_modules/webpack/lib/optimize/CommonsChunkPlugin.js":"/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\n\"use strict\";\r\nlet nextIdent = 0;\r\nclass CommonsChunkPlugin {\r\n\tconstructor(options) {\r\n\t\tif(arguments.length > 1) {\r\n\t\t\tthrow new Error(`Deprecation notice: CommonsChunkPlugin now only takes a single argument. Either an options\r\nobject *or* the name of the chunk.\r\nExample: if your old code looked like this:\r\n\tnew webpack.optimize.CommonsChunkPlugin('vendor', 'vendor.bundle.js')\r\nYou would change it to:\r\n\tnew webpack.optimize.CommonsChunkPlugin({ name: 'vendor', filename: 'vendor.bundle.js' })\r\nThe available options are:\r\n\tname: string\r\n\tnames: string[]\r\n\tfilename: string\r\n\tminChunks: number\r\n\tchunks: string[]\r\n\tchildren: boolean\r\n\tasync: boolean\r\n\tminSize: number`);\r\n\t\t}\r\n\r\n\t\tconst normalizedOptions = this.normalizeOptions(options);\r\n\r\n\t\tthis.chunkNames = normalizedOptions.chunkNames;\r\n\t\tthis.filenameTemplate = normalizedOptions.filenameTemplate;\r\n\t\tthis.minChunks = normalizedOptions.minChunks;\r\n\t\tthis.selectedChunks = normalizedOptions.selectedChunks;\r\n\t\tthis.children = normalizedOptions.children;\r\n\t\tthis.async = normalizedOptions.async;\r\n\t\tthis.minSize = normalizedOptions.minSize;\r\n\t\tthis.ident = __filename + (nextIdent++);\r\n\t}\r\n\r\n\tnormalizeOptions(options) {\r\n\t\tif(Array.isArray(options)) {\r\n\t\t\treturn {\r\n\t\t\t\tchunkNames: options,\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tif(typeof options === \"string\") {\r\n\t\t\treturn {\r\n\t\t\t\tchunkNames: [options],\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\t// options.children and options.chunk may not be used together\r\n\t\tif(options.children && options.chunks) {\r\n\t\t\tthrow new Error(\"You can't and it does not make any sense to use \\\"children\\\" and \\\"chunk\\\" options together.\");\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * options.async and options.filename are also not possible together\r\n\t\t * as filename specifies how the chunk is called but \"async\" implies\r\n\t\t * that webpack will take care of loading this file.\r\n\t\t */\r\n\t\tif(options.async && options.filename) {\r\n\t\t\tthrow new Error(`You can not specify a filename if you use the \\\"async\\\" option.\r\nYou can however specify the name of the async chunk by passing the desired string as the \\\"async\\\" option.`);\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * Make sure this is either an array or undefined.\r\n\t\t * \"name\" can be a string and\r\n\t\t * \"names\" a string or an array\r\n\t\t */\r\n\t\tconst chunkNames = options.name || options.names ? [].concat(options.name || options.names) : undefined;\r\n\t\treturn {\r\n\t\t\tchunkNames: chunkNames,\r\n\t\t\tfilenameTemplate: options.filename,\r\n\t\t\tminChunks: options.minChunks,\r\n\t\t\tselectedChunks: options.chunks,\r\n\t\t\tchildren: options.children,\r\n\t\t\tasync: options.async,\r\n\t\t\tminSize: options.minSize\r\n\t\t};\r\n\t}\r\n\r\n\tapply(compiler) {\r\n\t\tcompiler.plugin(\"this-compilation\", (compilation) => {\r\n\t\t\tcompilation.plugin([\"optimize-chunks\", \"optimize-extracted-chunks\"], (chunks) => {\r\n\t\t\t\t// only optimize once\r\n\t\t\t\tif(compilation[this.ident]) return;\r\n\t\t\t\tcompilation[this.ident] = true;\r\n\r\n\t\t\t\t/**\r\n\t\t\t\t * Creates a list of \"common\"\" chunks based on the options.\r\n\t\t\t\t * The list is made up of preexisting or newly created chunks.\r\n\t\t\t\t * - If chunk has the name as specified in the chunkNames it is put in the list\r\n\t\t\t\t * - If no chunk with the name as given in chunkNames exists a new chunk is created and added to the list\r\n\t\t\t\t *\r\n\t\t\t\t * These chunks are the \"targets\" for extracted modules.\r\n\t\t\t\t */\r\n\t\t\t\tconst targetChunks = this.getTargetChunks(chunks, compilation, this.chunkNames, this.children, this.async);\r\n\r\n\t\t\t\t// iterate over all our new chunks\r\n\t\t\t\ttargetChunks.forEach((targetChunk, idx) => {\r\n\r\n\t\t\t\t\t/**\r\n\t\t\t\t\t * These chunks are subject to get \"common\" modules extracted and moved to the common chunk\r\n\t\t\t\t\t */\r\n\t\t\t\t\tconst affectedChunks = this.getAffectedChunks(compilation, chunks, targetChunk, targetChunks, idx, this.selectedChunks, this.async, this.children);\r\n\r\n\t\t\t\t\t// bail if no chunk is affected\r\n\t\t\t\t\tif(!affectedChunks) {\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// If we are async create an async chunk now\r\n\t\t\t\t\t// override the \"commonChunk\" with the newly created async one and use it as commonChunk from now on\r\n\t\t\t\t\tlet asyncChunk;\r\n\t\t\t\t\tif(this.async) {\r\n\t\t\t\t\t\tasyncChunk = this.createAsyncChunk(compilation, this.async, targetChunk);\r\n\t\t\t\t\t\ttargetChunk = asyncChunk;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t/**\r\n\t\t\t\t\t * Check which modules are \"common\" and could be extracted to a \"common\" chunk\r\n\t\t\t\t\t */\r\n\t\t\t\t\tconst extractableModules = this.getExtractableModules(this.minChunks, affectedChunks, targetChunk);\r\n\r\n\t\t\t\t\t// If the minSize option is set check if the size extracted from the chunk is reached\r\n\t\t\t\t\t// else bail out here.\r\n\t\t\t\t\t// As all modules/commons are interlinked with each other, common modules would be extracted\r\n\t\t\t\t\t// if we reach this mark at a later common chunk. (quirky I guess).\r\n\t\t\t\t\tif(this.minSize) {\r\n\t\t\t\t\t\tconst modulesSize = this.calculateModulesSize(extractableModules);\r\n\t\t\t\t\t\t// if too small, bail\r\n\t\t\t\t\t\tif(modulesSize < this.minSize)\r\n\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Remove modules that are moved to commons chunk from their original chunks\r\n\t\t\t\t\t// return all chunks that are affected by having modules removed - we need them later (apparently)\r\n\t\t\t\t\tconst chunksWithExtractedModules = this.extractModulesAndReturnAffectedChunks(extractableModules, affectedChunks);\r\n\r\n\t\t\t\t\t// connect all extracted modules with the common chunk\r\n\t\t\t\t\tthis.addExtractedModulesToTargetChunk(targetChunk, extractableModules);\r\n\r\n\t\t\t\t\t// set filenameTemplate for chunk\r\n\t\t\t\t\tif(this.filenameTemplate)\r\n\t\t\t\t\t\ttargetChunk.filenameTemplate = this.filenameTemplate;\r\n\r\n\t\t\t\t\t// if we are async connect the blocks of the \"reallyUsedChunk\" - the ones that had modules removed -\r\n\t\t\t\t\t// with the commonChunk and get the origins for the asyncChunk (remember \"asyncChunk === commonChunk\" at this moment).\r\n\t\t\t\t\t// bail out\r\n\t\t\t\t\tif(this.async) {\r\n\t\t\t\t\t\tthis.moveExtractedChunkBlocksToTargetChunk(chunksWithExtractedModules, targetChunk);\r\n\t\t\t\t\t\tasyncChunk.origins = this.extractOriginsOfChunksWithExtractedModules(chunksWithExtractedModules);\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// we are not in \"async\" mode\r\n\t\t\t\t\t// connect used chunks with commonChunk - shouldnt this be reallyUsedChunks here?\r\n\t\t\t\t\tthis.makeTargetChunkParentOfAffectedChunks(affectedChunks, targetChunk);\r\n\t\t\t\t});\r\n\t\t\t\treturn true;\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n\r\n\tgetTargetChunks(allChunks, compilation, chunkNames, children, asyncOption) {\r\n\t\tconst asyncOrNoSelectedChunk = children || asyncOption;\r\n\r\n\t\t// we have specified chunk names\r\n\t\tif(chunkNames) {\r\n\t\t\t// map chunks by chunkName for quick access\r\n\t\t\tconst allChunksNameMap = allChunks.reduce((map, chunk) => {\r\n\t\t\t\tif(chunk.name) {\r\n\t\t\t\t\tmap.set(chunk.name, chunk);\r\n\t\t\t\t}\r\n\t\t\t\treturn map;\r\n\t\t\t}, new Map());\r\n\r\n\t\t\t// Ensure we have a chunk per specified chunk name.\r\n\t\t\t// Reuse existing chunks if possible\r\n\t\t\treturn chunkNames.map(chunkName => {\r\n\t\t\t\tif(allChunksNameMap.has(chunkName)) {\r\n\t\t\t\t\treturn allChunksNameMap.get(chunkName);\r\n\t\t\t\t}\r\n\t\t\t\t// add the filtered chunks to the compilation\r\n\t\t\t\treturn compilation.addChunk(chunkName);\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\t// we dont have named chunks specified, so we just take all of them\r\n\t\tif(asyncOrNoSelectedChunk) {\r\n\t\t\treturn allChunks;\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * No chunk name(s) was specified nor is this an async/children commons chunk\r\n\t\t */\r\n\t\tthrow new Error(`You did not specify any valid target chunk settings.\r\nTake a look at the \"name\"/\"names\" or async/children option.`);\r\n\t}\r\n\r\n\tgetAffectedChunks(compilation, allChunks, targetChunk, targetChunks, currentIndex, selectedChunks, asyncOption, children) {\r\n\t\tconst asyncOrNoSelectedChunk = children || asyncOption;\r\n\r\n\t\tif(Array.isArray(selectedChunks)) {\r\n\t\t\treturn allChunks.filter(chunk => {\r\n\t\t\t\tconst notCommmonChunk = chunk !== targetChunk;\r\n\t\t\t\tconst isSelectedChunk = selectedChunks.indexOf(chunk.name) > -1;\r\n\t\t\t\treturn notCommmonChunk && isSelectedChunk;\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tif(asyncOrNoSelectedChunk) {\r\n\t\t\t// nothing to do here\r\n\t\t\tif(!targetChunk.chunks) {\r\n\t\t\t\treturn [];\r\n\t\t\t}\r\n\r\n\t\t\treturn targetChunk.chunks.filter((chunk) => {\r\n\t\t\t\t// we can only move modules from this chunk if the \"commonChunk\" is the only parent\r\n\t\t\t\treturn asyncOption || chunk.parents.length === 1;\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * past this point only entry chunks are allowed to become commonChunks\r\n\t\t */\r\n\t\tif(targetChunk.parents.length > 0) {\r\n\t\t\tcompilation.errors.push(new Error(\"CommonsChunkPlugin: While running in normal mode it's not allowed to use a non-entry chunk (\" + targetChunk.name + \")\"));\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * If we find a \"targetchunk\" that is also a normal chunk (meaning it is probably specified as an entry)\r\n\t\t * and the current target chunk comes after that and the found chunk has a runtime*\r\n\t\t * make that chunk be an 'affected' chunk of the current target chunk.\r\n\t\t *\r\n\t\t * To understand what that means take a look at the \"examples/chunkhash\", this basically will\r\n\t\t * result in the runtime to be extracted to the current target chunk.\r\n\t\t *\r\n\t\t * *runtime: the \"runtime\" is the \"webpack\"-block you may have seen in the bundles that resolves modules etc.\r\n\t\t */\r\n\t\treturn allChunks.filter((chunk) => {\r\n\t\t\tconst found = targetChunks.indexOf(chunk);\r\n\t\t\tif(found >= currentIndex) return false;\r\n\t\t\treturn chunk.hasRuntime();\r\n\t\t});\r\n\t}\r\n\r\n\tcreateAsyncChunk(compilation, asyncOption, targetChunk) {\r\n\t\tconst asyncChunk = compilation.addChunk(typeof asyncOption === \"string\" ? asyncOption : undefined);\r\n\t\tasyncChunk.chunkReason = \"async commons chunk\";\r\n\t\tasyncChunk.extraAsync = true;\r\n\t\tasyncChunk.addParent(targetChunk);\r\n\t\ttargetChunk.addChunk(asyncChunk);\r\n\t\treturn asyncChunk;\r\n\t}\r\n\r\n\t// If minChunks is a function use that\r\n\t// otherwhise check if a module is used at least minChunks or 2 or usedChunks.length time\r\n\tgetModuleFilter(minChunks, targetChunk, usedChunksLength) {\r\n\t\tif(typeof minChunks === \"function\") {\r\n\t\t\treturn minChunks;\r\n\t\t}\r\n\t\tconst minCount = (minChunks || Math.max(2, usedChunksLength));\r\n\t\tconst isUsedAtLeastMinTimes = (module, count) => count >= minCount;\r\n\t\treturn isUsedAtLeastMinTimes;\r\n\t}\r\n\r\n\tgetExtractableModules(minChunks, usedChunks, targetChunk) {\r\n\t\tif(minChunks === Infinity) {\r\n\t\t\treturn [];\r\n\t\t}\r\n\r\n\t\t// count how many chunks contain a module\r\n\t\tconst commonModulesToCountMap = usedChunks.reduce((map, chunk) => {\r\n\t\t\tfor(let module of chunk.modules) {\r\n\t\t\t\tconst count = map.has(module) ? map.get(module) : 0;\r\n\t\t\t\tmap.set(module, count + 1);\r\n\t\t\t}\r\n\t\t\treturn map;\r\n\t\t}, new Map());\r\n\r\n\t\t// filter by minChunks\r\n\t\tconst moduleFilterCount = this.getModuleFilter(minChunks, targetChunk, usedChunks.length);\r\n\t\t// filter by condition\r\n\t\tconst moduleFilterCondition = (module, chunk) => {\r\n\t\t\tif(!module.chunkCondition) {\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t\treturn module.chunkCondition(chunk);\r\n\t\t};\r\n\r\n\t\treturn Array.from(commonModulesToCountMap).filter(entry => {\r\n\t\t\tconst module = entry[0];\r\n\t\t\tconst count = entry[1];\r\n\t\t\t// if the module passes both filters, keep it.\r\n\t\t\treturn moduleFilterCount(module, count) && moduleFilterCondition(module, targetChunk);\r\n\t\t}).map(entry => entry[0]);\r\n\t}\r\n\r\n\tcalculateModulesSize(modules) {\r\n\t\treturn modules.reduce((totalSize, module) => totalSize + module.size(), 0);\r\n\t}\r\n\r\n\textractModulesAndReturnAffectedChunks(reallyUsedModules, usedChunks) {\r\n\t\treturn reallyUsedModules.reduce((affectedChunksSet, module) => {\r\n\t\t\tfor(let chunk of usedChunks) {\r\n\t\t\t\t// removeChunk returns true if the chunk was contained and succesfully removed\r\n\t\t\t\t// false if the module did not have a connection to the chunk in question\r\n\t\t\t\tif(module.removeChunk(chunk)) {\r\n\t\t\t\t\taffectedChunksSet.add(chunk);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn affectedChunksSet;\r\n\t\t}, new Set());\r\n\t}\r\n\r\n\taddExtractedModulesToTargetChunk(chunk, modules) {\r\n\t\tfor(let module of modules) {\r\n\t\t\tchunk.addModule(module);\r\n\t\t\tmodule.addChunk(chunk);\r\n\t\t}\r\n\t}\r\n\r\n\tmakeTargetChunkParentOfAffectedChunks(usedChunks, commonChunk) {\r\n\t\tfor(let chunk of usedChunks) {\r\n\t\t\t// set commonChunk as new sole parent\r\n\t\t\tchunk.parents = [commonChunk];\r\n\t\t\t// add chunk to commonChunk\r\n\t\t\tcommonChunk.addChunk(chunk);\r\n\r\n\t\t\tfor(let entrypoint of chunk.entrypoints) {\r\n\t\t\t\tentrypoint.insertChunk(commonChunk, chunk);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tmoveExtractedChunkBlocksToTargetChunk(chunks, targetChunk) {\r\n\t\tfor(let chunk of chunks) {\r\n\t\t\tfor(let block of chunk.blocks) {\r\n\t\t\t\tblock.chunks.unshift(targetChunk);\r\n\t\t\t\ttargetChunk.addBlock(block);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\textractOriginsOfChunksWithExtractedModules(chunks) {\r\n\t\tconst origins = [];\r\n\t\tfor(let chunk of chunks) {\r\n\t\t\tfor(let origin of chunk.origins) {\r\n\t\t\t\tconst newOrigin = Object.create(origin);\r\n\t\t\t\tnewOrigin.reasons = (origin.reasons || []).concat(\"async commons\");\r\n\t\t\t\torigins.push(newOrigin);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn origins;\r\n\t}\r\n}\r\n\r\nmodule.exports = CommonsChunkPlugin;\r\n","/home/travis/build/npmtest/node-npmtest-webpack/node_modules/webpack/lib/optimize/ChunkModuleIdRangePlugin.js":"/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\n\"use strict\";\r\nclass ChunkModuleIdRangePlugin {\r\n\tconstructor(options) {\r\n\t\tthis.options = options;\r\n\t}\r\n\tapply(compiler) {\r\n\t\tconst options = this.options;\r\n\t\tcompiler.plugin(\"compilation\", (compilation) => {\r\n\t\t\tcompilation.plugin(\"module-ids\", (modules) => {\r\n\t\t\t\tconst chunk = this.chunks.filter((chunk) => {\r\n\t\t\t\t\treturn chunk.name === options.name;\r\n\t\t\t\t})[0];\r\n\t\t\t\tif(!chunk) throw new Error(\"ChunkModuleIdRangePlugin: Chunk with name '\" + options.name + \"' was not found\");\r\n\t\t\t\tlet currentId = options.start;\r\n\t\t\t\tlet chunkModules;\r\n\t\t\t\tif(options.order) {\r\n\t\t\t\t\tchunkModules = chunk.modules.slice();\r\n\t\t\t\t\tswitch(options.order) {\r\n\t\t\t\t\t\tcase \"index\":\r\n\t\t\t\t\t\t\tchunkModules.sort((a, b) => {\r\n\t\t\t\t\t\t\t\treturn a.index - b.index;\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase \"index2\":\r\n\t\t\t\t\t\t\tchunkModules.sort((a, b) => {\r\n\t\t\t\t\t\t\t\treturn a.index2 - b.index2;\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tdefault:\r\n\t\t\t\t\t\t\tthrow new Error(\"ChunkModuleIdRangePlugin: unexpected value of order\");\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t} else {\r\n\t\t\t\t\tchunkModules = modules.filter((m) => {\r\n\t\t\t\t\t\treturn m.chunks.indexOf(chunk) >= 0;\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\r\n\t\t\t\tfor(let i = 0; i < chunkModules.length; i++) {\r\n\t\t\t\t\tconst m = chunkModules[i];\r\n\t\t\t\t\tif(m.id === null) {\r\n\t\t\t\t\t\tm.id = currentId++;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif(options.end && currentId > options.end)\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n}\r\nmodule.exports = ChunkModuleIdRangePlugin;\r\n","/home/travis/build/npmtest/node-npmtest-webpack/node_modules/webpack/lib/optimize/DedupePlugin.js":"/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\n\"use strict\";\r\n\r\nclass DedupePlugin {\r\n\tapply(compiler) {\r\n\t\tcompiler.plugin(\"compilation\", (compilation) => {\r\n\t\t\tcompilation.warnings.push(new Error(\"DedupePlugin: This plugin was removed from webpack. Remove it from your configuration.\"));\r\n\t\t});\r\n\t}\r\n}\r\n\r\nmodule.exports = DedupePlugin;\r\n","/home/travis/build/npmtest/node-npmtest-webpack/node_modules/webpack/lib/optimize/LimitChunkCountPlugin.js":"/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\n\"use strict\";\r\n\r\nclass LimitChunkCountPlugin {\r\n\tconstructor(options) {\r\n\t\tif(options !== undefined && typeof options !== \"object\" || Array.isArray(options)) {\r\n\t\t\tthrow new Error(\"Argument should be an options object.\\nFor more info on options, see https://webpack.js.org/plugins/\");\r\n\t\t}\r\n\t\tthis.options = options || {};\r\n\t}\r\n\tapply(compiler) {\r\n\t\tconst options = this.options;\r\n\t\tcompiler.plugin(\"compilation\", (compilation) => {\r\n\t\t\tcompilation.plugin(\"optimize-chunks-advanced\", (chunks) => {\r\n\t\t\t\tconst maxChunks = options.maxChunks;\r\n\t\t\t\tif(!maxChunks) return;\r\n\t\t\t\tif(maxChunks < 1) return;\r\n\t\t\t\tif(chunks.length <= maxChunks) return;\r\n\r\n\t\t\t\tif(chunks.length > maxChunks) {\r\n\t\t\t\t\tconst sortedExtendedPairCombinations = chunks.reduce((combinations, a, idx) => {\r\n\t\t\t\t\t\t// create combination pairs\r\n\t\t\t\t\t\tfor(let i = 0; i < idx; i++) {\r\n\t\t\t\t\t\t\tconst b = chunks[i];\r\n\t\t\t\t\t\t\tcombinations.push([b, a]);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\treturn combinations;\r\n\t\t\t\t\t}, []).map((pair) => {\r\n\t\t\t\t\t\t// extend combination pairs with size and integrated size\r\n\t\t\t\t\t\tconst a = pair[0].size(options);\r\n\t\t\t\t\t\tconst b = pair[1].size(options);\r\n\t\t\t\t\t\tconst ab = pair[0].integratedSize(pair[1], options);\r\n\t\t\t\t\t\treturn [a + b - ab, ab, pair[0], pair[1], a, b];\r\n\t\t\t\t\t}).filter((extendedPair) => {\r\n\t\t\t\t\t\t// filter pairs that do not have an integratedSize\r\n\t\t\t\t\t\t// meaning they can NOT be integrated!\r\n\t\t\t\t\t\treturn extendedPair[1] !== false;\r\n\t\t\t\t\t}).sort((a, b) => { // sadly javascript does an inplace sort here\r\n\t\t\t\t\t\t// sort them by size\r\n\t\t\t\t\t\tconst diff = b[0] - a[0];\r\n\t\t\t\t\t\tif(diff !== 0) return diff;\r\n\t\t\t\t\t\treturn a[1] - b[1];\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\t\tconst pair = sortedExtendedPairCombinations[0];\r\n\r\n\t\t\t\t\tif(pair && pair[2].integrate(pair[3], \"limit\")) {\r\n\t\t\t\t\t\tchunks.splice(chunks.indexOf(pair[3]), 1);\r\n\t\t\t\t\t\treturn true;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n}\r\nmodule.exports = LimitChunkCountPlugin;\r\n","/home/travis/build/npmtest/node-npmtest-webpack/node_modules/webpack/lib/optimize/MinChunkSizePlugin.js":"/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\n\"use strict\";\r\n\r\nclass MinChunkSizePlugin {\r\n\tconstructor(options) {\r\n\t\tif(typeof options !== \"object\" || Array.isArray(options)) {\r\n\t\t\tthrow new Error(\"Argument should be an options object.\\nFor more info on options, see https://webpack.js.org/plugins/\");\r\n\t\t}\r\n\t\tthis.options = options;\r\n\t}\r\n\r\n\tapply(compiler) {\r\n\t\tconst options = this.options;\r\n\t\tconst minChunkSize = options.minChunkSize;\r\n\t\tcompiler.plugin(\"compilation\", (compilation) => {\r\n\t\t\tcompilation.plugin(\"optimize-chunks-advanced\", (chunks) => {\r\n\t\t\t\tconst equalOptions = {\r\n\t\t\t\t\tchunkOverhead: 1,\r\n\t\t\t\t\tentryChunkMultiplicator: 1\r\n\t\t\t\t};\r\n\r\n\t\t\t\tconst sortedSizeFilteredExtendedPairCombinations = chunks.reduce((combinations, a, idx) => {\r\n\t\t\t\t\t// create combination pairs\r\n\t\t\t\t\tfor(let i = 0; i < idx; i++) {\r\n\t\t\t\t\t\tconst b = chunks[i];\r\n\t\t\t\t\t\tcombinations.push([b, a]);\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn combinations;\r\n\t\t\t\t}, []).filter((pair) => {\r\n\t\t\t\t\t// check if one of the chunks sizes is smaller than the minChunkSize\r\n\t\t\t\t\tconst p0SmallerThanMinChunkSize = pair[0].size(equalOptions) < minChunkSize;\r\n\t\t\t\t\tconst p1SmallerThanMinChunkSize = pair[1].size(equalOptions) < minChunkSize;\r\n\t\t\t\t\treturn p0SmallerThanMinChunkSize || p1SmallerThanMinChunkSize;\r\n\t\t\t\t}).map((pair) => {\r\n\t\t\t\t\t// extend combination pairs with size and integrated size\r\n\t\t\t\t\tconst a = pair[0].size(options);\r\n\t\t\t\t\tconst b = pair[1].size(options);\r\n\t\t\t\t\tconst ab = pair[0].integratedSize(pair[1], options);\r\n\t\t\t\t\treturn [a + b - ab, ab, pair[0], pair[1]];\r\n\t\t\t\t}).filter((pair) => {\r\n\t\t\t\t\t// filter pairs that do not have an integratedSize\r\n\t\t\t\t\t// meaning they can NOT be integrated!\r\n\t\t\t\t\treturn pair[1] !== false;\r\n\t\t\t\t}).sort((a, b) => { // sadly javascript does an inplace sort here\r\n\t\t\t\t\t// sort by size\r\n\t\t\t\t\tconst diff = b[0] - a[0];\r\n\t\t\t\t\tif(diff !== 0) return diff;\r\n\t\t\t\t\treturn a[1] - b[1];\r\n\t\t\t\t});\r\n\r\n\t\t\t\tif(sortedSizeFilteredExtendedPairCombinations.length === 0) return;\r\n\r\n\t\t\t\tconst pair = sortedSizeFilteredExtendedPairCombinations[0];\r\n\r\n\t\t\t\tpair[2].integrate(pair[3], \"min-size\");\r\n\t\t\t\tchunks.splice(chunks.indexOf(pair[3]), 1);\r\n\t\t\t\treturn true;\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n}\r\nmodule.exports = MinChunkSizePlugin;\r\n","/home/travis/build/npmtest/node-npmtest-webpack/node_modules/webpack/lib/optimize/UglifyJsPlugin.js":"/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\n\"use strict\";\r\n\r\nconst SourceMapConsumer = require(\"source-map\").SourceMapConsumer;\r\nconst SourceMapSource = require(\"webpack-sources\").SourceMapSource;\r\nconst RawSource = require(\"webpack-sources\").RawSource;\r\nconst ConcatSource = require(\"webpack-sources\").ConcatSource;\r\nconst RequestShortener = require(\"../RequestShortener\");\r\nconst ModuleFilenameHelpers = require(\"../ModuleFilenameHelpers\");\r\nconst uglify = require(\"uglify-js\");\r\n\r\nclass UglifyJsPlugin {\r\n\tconstructor(options) {\r\n\t\tif(typeof options !== \"object\" || Array.isArray(options)) options = {};\r\n\t\tif(typeof options.compressor !== \"undefined\") options.compress = options.compressor;\r\n\t\tthis.options = options;\r\n\t}\r\n\r\n\tapply(compiler) {\r\n\t\tconst options = this.options;\r\n\t\toptions.test = options.test || /\\.js($|\\?)/i;\r\n\t\tconst warningsFilter = options.warningsFilter || (() => true);\r\n\r\n\t\tconst requestShortener = new RequestShortener(compiler.context);\r\n\t\tcompiler.plugin(\"compilation\", (compilation) => {\r\n\t\t\tif(options.sourceMap) {\r\n\t\t\t\tcompilation.plugin(\"build-module\", (module) => {\r\n\t\t\t\t\t// to get detailed location info about errors\r\n\t\t\t\t\tmodule.useSourceMap = true;\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\tcompilation.plugin(\"optimize-chunk-assets\", (chunks, callback) => {\r\n\t\t\t\tconst files = [];\r\n\t\t\t\tchunks.forEach((chunk) => files.push.apply(files, chunk.files));\r\n\t\t\t\tfiles.push.apply(files, compilation.additionalChunkAssets);\r\n\t\t\t\tconst filterdFiles = files.filter(ModuleFilenameHelpers.matchObject.bind(undefined, options));\r\n\t\t\t\tfilterdFiles.forEach((file) => {\r\n\t\t\t\t\tconst oldWarnFunction = uglify.AST_Node.warn_function;\r\n\t\t\t\t\tconst warnings = [];\r\n\t\t\t\t\tlet sourceMap;\r\n\t\t\t\t\ttry {\r\n\t\t\t\t\t\tconst asset = compilation.assets[file];\r\n\t\t\t\t\t\tif(asset.__UglifyJsPlugin) {\r\n\t\t\t\t\t\t\tcompilation.assets[file] = asset.__UglifyJsPlugin;\r\n\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tlet input;\r\n\t\t\t\t\t\tlet inputSourceMap;\r\n\t\t\t\t\t\tif(options.sourceMap) {\r\n\t\t\t\t\t\t\tif(asset.sourceAndMap) {\r\n\t\t\t\t\t\t\t\tconst sourceAndMap = asset.sourceAndMap();\r\n\t\t\t\t\t\t\t\tinputSourceMap = sourceAndMap.map;\r\n\t\t\t\t\t\t\t\tinput = sourceAndMap.source;\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tinputSourceMap = asset.map();\r\n\t\t\t\t\t\t\t\tinput = asset.source();\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tsourceMap = new SourceMapConsumer(inputSourceMap);\r\n\t\t\t\t\t\t\tuglify.AST_Node.warn_function = (warning) => { // eslint-disable-line camelcase\r\n\t\t\t\t\t\t\t\tconst match = /\\[.+:([0-9]+),([0-9]+)\\]/.exec(warning);\r\n\t\t\t\t\t\t\t\tconst line = +match[1];\r\n\t\t\t\t\t\t\t\tconst column = +match[2];\r\n\t\t\t\t\t\t\t\tconst original = sourceMap.originalPositionFor({\r\n\t\t\t\t\t\t\t\t\tline: line,\r\n\t\t\t\t\t\t\t\t\tcolumn: column\r\n\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\tif(!original || !original.source || original.source === file) return;\r\n\t\t\t\t\t\t\t\tif(!warningsFilter(original.source)) return;\r\n\t\t\t\t\t\t\t\twarnings.push(warning.replace(/\\[.+:([0-9]+),([0-9]+)\\]/, \"\") +\r\n\t\t\t\t\t\t\t\t\t\"[\" + requestShortener.shorten(original.source) + \":\" + original.line + \",\" + original.column + \"]\");\r\n\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tinput = asset.source();\r\n\t\t\t\t\t\t\tuglify.AST_Node.warn_function = (warning) => { // eslint-disable-line camelcase\r\n\t\t\t\t\t\t\t\twarnings.push(warning);\r\n\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tuglify.base54.reset();\r\n\t\t\t\t\t\tlet ast = uglify.parse(input, {\r\n\t\t\t\t\t\t\tfilename: file\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t\tif(options.compress !== false) {\r\n\t\t\t\t\t\t\tast.figure_out_scope();\r\n\t\t\t\t\t\t\tconst compress = uglify.Compressor(options.compress || {\r\n\t\t\t\t\t\t\t\twarnings: false\r\n\t\t\t\t\t\t\t}); // eslint-disable-line new-cap\r\n\t\t\t\t\t\t\tast = compress.compress(ast);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif(options.mangle !== false) {\r\n\t\t\t\t\t\t\tast.figure_out_scope(options.mangle || {});\r\n\t\t\t\t\t\t\tast.compute_char_frequency(options.mangle || {});\r\n\t\t\t\t\t\t\tast.mangle_names(options.mangle || {});\r\n\t\t\t\t\t\t\tif(options.mangle && options.mangle.props) {\r\n\t\t\t\t\t\t\t\tuglify.mangle_properties(ast, options.mangle.props);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tconst output = {};\r\n\t\t\t\t\t\toutput.comments = Object.prototype.hasOwnProperty.call(options, \"comments\") ? options.comments : /^\\**!|@preserve|@license/;\r\n\t\t\t\t\t\toutput.beautify = options.beautify;\r\n\t\t\t\t\t\tfor(let k in options.output) {\r\n\t\t\t\t\t\t\toutput[k] = options.output[k];\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tconst extractedComments = [];\r\n\t\t\t\t\t\tif(options.extractComments) {\r\n\t\t\t\t\t\t\tconst condition = {};\r\n\t\t\t\t\t\t\tif(typeof options.extractComments === \"string\" || options.extractComments instanceof RegExp) {\r\n\t\t\t\t\t\t\t\t// extractComments specifies the extract condition and output.comments specifies the preserve condition\r\n\t\t\t\t\t\t\t\tcondition.preserve = output.comments;\r\n\t\t\t\t\t\t\t\tcondition.extract = options.extractComments;\r\n\t\t\t\t\t\t\t} else if(Object.prototype.hasOwnProperty.call(options.extractComments, \"condition\")) {\r\n\t\t\t\t\t\t\t\t// Extract condition is given in extractComments.condition\r\n\t\t\t\t\t\t\t\tcondition.preserve = output.comments;\r\n\t\t\t\t\t\t\t\tcondition.extract = options.extractComments.condition;\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t// No extract condition is given. Extract comments that match output.comments instead of preserving them\r\n\t\t\t\t\t\t\t\tcondition.preserve = false;\r\n\t\t\t\t\t\t\t\tcondition.extract = output.comments;\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t// Ensure that both conditions are functions\r\n\t\t\t\t\t\t\t[\"preserve\", \"extract\"].forEach(key => {\r\n\t\t\t\t\t\t\t\tswitch(typeof condition[key]) {\r\n\t\t\t\t\t\t\t\t\tcase \"boolean\":\r\n\t\t\t\t\t\t\t\t\t\tvar b = condition[key];\r\n\t\t\t\t\t\t\t\t\t\tcondition[key] = () => b;\r\n\t\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\t\tcase \"function\":\r\n\t\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\t\tcase \"string\":\r\n\t\t\t\t\t\t\t\t\t\tif(condition[key] === \"all\") {\r\n\t\t\t\t\t\t\t\t\t\t\tcondition[key] = () => true;\r\n\t\t\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\tvar regex = new RegExp(condition[key]);\r\n\t\t\t\t\t\t\t\t\t\tcondition[key] = (astNode, comment) => regex.test(comment.value);\r\n\t\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\t\tdefault:\r\n\t\t\t\t\t\t\t\t\t\tregex = condition[key];\r\n\t\t\t\t\t\t\t\t\t\tcondition[key] = (astNode, comment) => regex.test(comment.value);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\t\t// Redefine the comments function to extract and preserve\r\n\t\t\t\t\t\t\t// comments according to the two conditions\r\n\t\t\t\t\t\t\toutput.comments = (astNode, comment) => {\r\n\t\t\t\t\t\t\t\tif(condition.extract(astNode, comment)) {\r\n\t\t\t\t\t\t\t\t\textractedComments.push(\r\n\t\t\t\t\t\t\t\t\t\tcomment.type === \"comment2\" ? \"/*\" + comment.value + \"*/\" : \"//\" + comment.value\r\n\t\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\treturn condition.preserve(astNode, comment);\r\n\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tlet map;\r\n\t\t\t\t\t\tif(options.sourceMap) {\r\n\t\t\t\t\t\t\tmap = uglify.SourceMap({ // eslint-disable-line new-cap\r\n\t\t\t\t\t\t\t\tfile: file,\r\n\t\t\t\t\t\t\t\troot: \"\"\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\toutput.source_map = map; // eslint-disable-line camelcase\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tconst stream = uglify.OutputStream(output); // eslint-disable-line new-cap\r\n\t\t\t\t\t\tast.print(stream);\r\n\t\t\t\t\t\tif(map) map = map + \"\";\r\n\t\t\t\t\t\tconst stringifiedStream = stream + \"\";\r\n\t\t\t\t\t\tlet outputSource = (map ?\r\n\t\t\t\t\t\t\tnew SourceMapSource(stringifiedStream, file, JSON.parse(map), input, inputSourceMap) :\r\n\t\t\t\t\t\t\tnew RawSource(stringifiedStream));\r\n\t\t\t\t\t\tif(extractedComments.length > 0) {\r\n\t\t\t\t\t\t\tlet commentsFile = options.extractComments.filename || file + \".LICENSE\";\r\n\t\t\t\t\t\t\tif(typeof commentsFile === \"function\") {\r\n\t\t\t\t\t\t\t\tcommentsFile = commentsFile(file);\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t// Write extracted comments to commentsFile\r\n\t\t\t\t\t\t\tconst commentsSource = new RawSource(extractedComments.join(\"\\n\\n\") + \"\\n\");\r\n\t\t\t\t\t\t\tif(commentsFile in compilation.assets) {\r\n\t\t\t\t\t\t\t\t// commentsFile already exists, append new comments...\r\n\t\t\t\t\t\t\t\tif(compilation.assets[commentsFile] instanceof ConcatSource) {\r\n\t\t\t\t\t\t\t\t\tcompilation.assets[commentsFile].add(\"\\n\");\r\n\t\t\t\t\t\t\t\t\tcompilation.assets[commentsFile].add(commentsSource);\r\n\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\tcompilation.assets[commentsFile] = new ConcatSource(\r\n\t\t\t\t\t\t\t\t\t\tcompilation.assets[commentsFile], \"\\n\", commentsSource\r\n\t\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tcompilation.assets[commentsFile] = commentsSource;\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t// Add a banner to the original file\r\n\t\t\t\t\t\t\tif(options.extractComments.banner !== false) {\r\n\t\t\t\t\t\t\t\tlet banner = options.extractComments.banner || \"For license information please see \" + commentsFile;\r\n\t\t\t\t\t\t\t\tif(typeof banner === \"function\") {\r\n\t\t\t\t\t\t\t\t\tbanner = banner(commentsFile);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tif(banner) {\r\n\t\t\t\t\t\t\t\t\toutputSource = new ConcatSource(\r\n\t\t\t\t\t\t\t\t\t\t\"/*! \" + banner + \" */\\n\", outputSource\r\n\t\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tasset.__UglifyJsPlugin = compilation.assets[file] = outputSource;\r\n\t\t\t\t\t\tif(warnings.length > 0) {\r\n\t\t\t\t\t\t\tcompilation.warnings.push(new Error(file + \" from UglifyJs\\n\" + warnings.join(\"\\n\")));\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} catch(err) {\r\n\t\t\t\t\t\tif(err.line) {\r\n\t\t\t\t\t\t\tconst original = sourceMap && sourceMap.originalPositionFor({\r\n\t\t\t\t\t\t\t\tline: err.line,\r\n\t\t\t\t\t\t\t\tcolumn: err.col\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\tif(original && original.source) {\r\n\t\t\t\t\t\t\t\tcompilation.errors.push(new Error(file + \" from UglifyJs\\n\" + err.message + \" [\" + requestShortener.shorten(original.source) + \":\" + original.line + \",\" + original.column + \"][\" + file + \":\" + err.line + \",\" + err.col + \"]\"));\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tcompilation.errors.push(new Error(file + \" from UglifyJs\\n\" + err.message + \" [\" + file + \":\" + err.line + \",\" + err.col + \"]\"));\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t} else if(err.msg) {\r\n\t\t\t\t\t\t\tcompilation.errors.push(new Error(file + \" from UglifyJs\\n\" + err.msg));\r\n\t\t\t\t\t\t} else\r\n\t\t\t\t\t\t\tcompilation.errors.push(new Error(file + \" from UglifyJs\\n\" + err.stack));\r\n\t\t\t\t\t} finally {\r\n\t\t\t\t\t\tuglify.AST_Node.warn_function = oldWarnFunction; // eslint-disable-line camelcase\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t\tcallback();\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n}\r\n\r\nmodule.exports = UglifyJsPlugin;\r\n","/home/travis/build/npmtest/node-npmtest-webpack/node_modules/webpack/buildin/amd-define.js":"module.exports = function() {\r\n\tthrow new Error(\"define cannot be used indirect\");\r\n};\r\n","/home/travis/build/npmtest/node-npmtest-webpack/node_modules/webpack/buildin/amd-options.js":"/* globals __webpack_amd_options__ */\r\nmodule.exports = __webpack_amd_options__;\r\n","/home/travis/build/npmtest/node-npmtest-webpack/node_modules/webpack/buildin/global.js":"var g;\r\n\r\n// This works in non-strict mode\r\ng = (function() {\r\n\treturn this;\r\n})();\r\n\r\ntry {\r\n\t// This works if eval is allowed (see CSP)\r\n\tg = g || Function(\"return this\")() || (1,eval)(\"this\");\r\n} catch(e) {\r\n\t// This works if the window reference is available\r\n\tif(typeof window === \"object\")\r\n\t\tg = window;\r\n}\r\n\r\n// g can still be undefined, but nothing to do about it...\r\n// We return undefined, instead of nothing here, so it's\r\n// easier to handle this case. if(!global) { ...}\r\n\r\nmodule.exports = g;\r\n","/home/travis/build/npmtest/node-npmtest-webpack/node_modules/webpack/buildin/harmony-module.js":"module.exports = function(originalModule) {\r\n\tif(!originalModule.webpackPolyfill) {\r\n\t\tvar module = Object.create(originalModule);\r\n\t\t// module.parent = undefined by default\r\n\t\tif(!module.children) module.children = [];\r\n\t\tObject.defineProperty(module, \"loaded\", {\r\n\t\t\tenumerable: true,\r\n\t\t\tget: function() {\r\n\t\t\t\treturn module.l;\r\n\t\t\t}\r\n\t\t});\r\n\t\tObject.defineProperty(module, \"id\", {\r\n\t\t\tenumerable: true,\r\n\t\t\tget: function() {\r\n\t\t\t\treturn module.i;\r\n\t\t\t}\r\n\t\t});\r\n\t\tObject.defineProperty(module, \"exports\", {\r\n\t\t\tenumerable: true,\r\n\t\t});\r\n\t\tmodule.webpackPolyfill = 1;\r\n\t}\r\n\treturn module;\r\n};\r\n","/home/travis/build/npmtest/node-npmtest-webpack/node_modules/webpack/buildin/module.js":"module.exports = function(module) {\r\n\tif(!module.webpackPolyfill) {\r\n\t\tmodule.deprecate = function() {};\r\n\t\tmodule.paths = [];\r\n\t\t// module.parent = undefined by default\r\n\t\tif(!module.children) module.children = [];\r\n\t\tObject.defineProperty(module, \"loaded\", {\r\n\t\t\tenumerable: true,\r\n\t\t\tget: function() {\r\n\t\t\t\treturn module.l;\r\n\t\t\t}\r\n\t\t});\r\n\t\tObject.defineProperty(module, \"id\", {\r\n\t\t\tenumerable: true,\r\n\t\t\tget: function() {\r\n\t\t\t\treturn module.i;\r\n\t\t\t}\r\n\t\t});\r\n\t\tmodule.webpackPolyfill = 1;\r\n\t}\r\n\treturn module;\r\n};\r\n","/home/travis/build/npmtest/node-npmtest-webpack/node_modules/webpack/buildin/system.js":"// Provide a \"System\" global.\r\nmodule.exports = {\r\n\t// Make sure import is only used as \"System.import\"\r\n\timport: function() {\r\n\t\tthrow new Error(\"System.import cannot be used indirectly\");\r\n\t}\r\n};\r\n","/home/travis/build/npmtest/node-npmtest-webpack/node_modules/webpack/hot/dev-server.js":"/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\n/*globals window __webpack_hash__ */\r\nif(module.hot) {\r\n\tvar lastHash;\r\n\tvar upToDate = function upToDate() {\r\n\t\treturn lastHash.indexOf(__webpack_hash__) >= 0;\r\n\t};\r\n\tvar check = function check() {\r\n\t\tmodule.hot.check(true).then(function(updatedModules) {\r\n\t\t\tif(!updatedModules) {\r\n\t\t\t\tconsole.warn(\"[HMR] Cannot find update. Need to do a full reload!\");\r\n\t\t\t\tconsole.warn(\"[HMR] (Probably because of restarting the webpack-dev-server)\");\r\n\t\t\t\twindow.location.reload();\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tif(!upToDate()) {\r\n\t\t\t\tcheck();\r\n\t\t\t}\r\n\r\n\t\t\trequire(\"./log-apply-result\")(updatedModules, updatedModules);\r\n\r\n\t\t\tif(upToDate()) {\r\n\t\t\t\tconsole.log(\"[HMR] App is up to date.\");\r\n\t\t\t}\r\n\r\n\t\t}).catch(function(err) {\r\n\t\t\tvar status = module.hot.status();\r\n\t\t\tif([\"abort\", \"fail\"].indexOf(status) >= 0) {\r\n\t\t\t\tconsole.warn(\"[HMR] Cannot apply update. Need to do a full reload!\");\r\n\t\t\t\tconsole.warn(\"[HMR] \" + err.stack || err.message);\r\n\t\t\t\twindow.location.reload();\r\n\t\t\t} else {\r\n\t\t\t\tconsole.warn(\"[HMR] Update failed: \" + err.stack || err.message);\r\n\t\t\t}\r\n\t\t});\r\n\t};\r\n\tvar hotEmitter = require(\"./emitter\");\r\n\thotEmitter.on(\"webpackHotUpdate\", function(currentHash) {\r\n\t\tlastHash = currentHash;\r\n\t\tif(!upToDate() && module.hot.status() === \"idle\") {\r\n\t\t\tconsole.log(\"[HMR] Checking for updates on the server...\");\r\n\t\t\tcheck();\r\n\t\t}\r\n\t});\r\n\tconsole.log(\"[HMR] Waiting for update signal from WDS...\");\r\n} else {\r\n\tthrow new Error(\"[HMR] Hot Module Replacement is disabled.\");\r\n}\r\n","/home/travis/build/npmtest/node-npmtest-webpack/node_modules/webpack/hot/emitter.js":"var EventEmitter = require(\"events\");\r\nmodule.exports = new EventEmitter();\r\n","/home/travis/build/npmtest/node-npmtest-webpack/node_modules/webpack/hot/only-dev-server.js":"/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\n/*globals __webpack_hash__ */\r\nif(module.hot) {\r\n\tvar lastHash;\r\n\tvar upToDate = function upToDate() {\r\n\t\treturn lastHash.indexOf(__webpack_hash__) >= 0;\r\n\t};\r\n\tvar check = function check() {\r\n\t\tmodule.hot.check().then(function(updatedModules) {\r\n\t\t\tif(!updatedModules) {\r\n\t\t\t\tconsole.warn(\"[HMR] Cannot find update. Need to do a full reload!\");\r\n\t\t\t\tconsole.warn(\"[HMR] (Probably because of restarting the webpack-dev-server)\");\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\treturn module.hot.apply({\r\n\t\t\t\tignoreUnaccepted: true,\r\n\t\t\t\tignoreDeclined: true,\r\n\t\t\t\tignoreErrored: true,\r\n\t\t\t\tonUnaccepted: function(data) {\r\n\t\t\t\t\tconsole.warn(\"Ignored an update to unaccepted module \" + data.chain.join(\" -> \"));\r\n\t\t\t\t},\r\n\t\t\t\tonDeclined: function(data) {\r\n\t\t\t\t\tconsole.warn(\"Ignored an update to declined module \" + data.chain.join(\" -> \"));\r\n\t\t\t\t},\r\n\t\t\t\tonErrored: function(data) {\r\n\t\t\t\t\tconsole.warn(\"Ignored an error while updating module \" + data.moduleId + \" (\" + data.type + \")\");\r\n\t\t\t\t}\r\n\t\t\t}).then(function(renewedModules) {\r\n\t\t\t\tif(!upToDate()) {\r\n\t\t\t\t\tcheck();\r\n\t\t\t\t}\r\n\r\n\t\t\t\trequire(\"./log-apply-result\")(updatedModules, renewedModules);\r\n\r\n\t\t\t\tif(upToDate()) {\r\n\t\t\t\t\tconsole.log(\"[HMR] App is up to date.\");\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}).catch(function(err) {\r\n\t\t\tvar status = module.hot.status();\r\n\t\t\tif([\"abort\", \"fail\"].indexOf(status) >= 0) {\r\n\t\t\t\tconsole.warn(\"[HMR] Cannot check for update. Need to do a full reload!\");\r\n\t\t\t\tconsole.warn(\"[HMR] \" + err.stack || err.message);\r\n\t\t\t} else {\r\n\t\t\t\tconsole.warn(\"[HMR] Update check failed: \" + err.stack || err.message);\r\n\t\t\t}\r\n\t\t});\r\n\t};\r\n\tvar hotEmitter = require(\"./emitter\");\r\n\thotEmitter.on(\"webpackHotUpdate\", function(currentHash) {\r\n\t\tlastHash = currentHash;\r\n\t\tif(!upToDate()) {\r\n\t\t\tvar status = module.hot.status();\r\n\t\t\tif(status === \"idle\") {\r\n\t\t\t\tconsole.log(\"[HMR] Checking for updates on the server...\");\r\n\t\t\t\tcheck();\r\n\t\t\t} else if([\"abort\", \"fail\"].indexOf(status) >= 0) {\r\n\t\t\t\tconsole.warn(\"[HMR] Cannot apply update as a previous update \" + status + \"ed. Need to do a full reload!\");\r\n\t\t\t}\r\n\t\t}\r\n\t});\r\n\tconsole.log(\"[HMR] Waiting for update signal from WDS...\");\r\n} else {\r\n\tthrow new Error(\"[HMR] Hot Module Replacement is disabled.\");\r\n}\r\n","/home/travis/build/npmtest/node-npmtest-webpack/node_modules/webpack/hot/poll.js":"/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\n/*globals __resourceQuery */\r\nif(module.hot) {\r\n\tvar hotPollInterval = +(__resourceQuery.substr(1)) || (10 * 60 * 1000);\r\n\r\n\tvar checkForUpdate = function checkForUpdate(fromUpdate) {\r\n\t\tif(module.hot.status() === \"idle\") {\r\n\t\t\tmodule.hot.check(true).then(function(updatedModules) {\r\n\t\t\t\tif(!updatedModules) {\r\n\t\t\t\t\tif(fromUpdate) console.log(\"[HMR] Update applied.\");\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\trequire(\"./log-apply-result\")(updatedModules, updatedModules);\r\n\t\t\t\tcheckForUpdate(true);\r\n\t\t\t}).catch(function(err) {\r\n\t\t\t\tvar status = module.hot.status();\r\n\t\t\t\tif([\"abort\", \"fail\"].indexOf(status) >= 0) {\r\n\t\t\t\t\tconsole.warn(\"[HMR] Cannot apply update.\");\r\n\t\t\t\t\tconsole.warn(\"[HMR] \" + err.stack || err.message);\r\n\t\t\t\t\tconsole.warn(\"[HMR] You need to restart the application!\");\r\n\t\t\t\t} else {\r\n\t\t\t\t\tconsole.warn(\"[HMR] Update failed: \" + err.stack || err.message);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t};\r\n\tsetInterval(checkForUpdate, hotPollInterval);\r\n} else {\r\n\tthrow new Error(\"[HMR] Hot Module Replacement is disabled.\");\r\n}\r\n","/home/travis/build/npmtest/node-npmtest-webpack/node_modules/webpack/hot/signal.js":"/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\n/*globals __resourceQuery */\r\nif(module.hot) {\r\n\tvar checkForUpdate = function checkForUpdate(fromUpdate) {\r\n\t\tmodule.hot.check().then(function(updatedModules) {\r\n\t\t\tif(!updatedModules) {\r\n\t\t\t\tif(fromUpdate)\r\n\t\t\t\t\tconsole.log(\"[HMR] Update applied.\");\r\n\t\t\t\telse\r\n\t\t\t\t\tconsole.warn(\"[HMR] Cannot find update.\");\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\treturn module.hot.apply({\r\n\t\t\t\tignoreUnaccepted: true,\r\n\t\t\t\tonUnaccepted: function(data) {\r\n\t\t\t\t\tconsole.warn(\"Ignored an update to unaccepted module \" + data.chain.join(\" -> \"));\r\n\t\t\t\t},\r\n\t\t\t}).then(function(renewedModules) {\r\n\t\t\t\trequire(\"./log-apply-result\")(updatedModules, renewedModules);\r\n\r\n\t\t\t\tcheckForUpdate(true);\r\n\t\t\t});\r\n\t\t}).catch(function(err) {\r\n\t\t\tvar status = module.hot.status();\r\n\t\t\tif([\"abort\", \"fail\"].indexOf(status) >= 0) {\r\n\t\t\t\tconsole.warn(\"[HMR] Cannot apply update.\");\r\n\t\t\t\tconsole.warn(\"[HMR] \" + err.stack || err.message);\r\n\t\t\t\tconsole.warn(\"[HMR] You need to restart the application!\");\r\n\t\t\t} else {\r\n\t\t\t\tconsole.warn(\"[HMR] Update failed: \" + err.stack || err.message);\r\n\t\t\t}\r\n\t\t});\r\n\t};\r\n\r\n\tprocess.on(__resourceQuery.substr(1) || \"SIGUSR2\", function() {\r\n\t\tif(module.hot.status() !== \"idle\") {\r\n\t\t\tconsole.warn(\"[HMR] Got signal but currently in \" + module.hot.status() + \" state.\");\r\n\t\t\tconsole.warn(\"[HMR] Need to be in idle state to start hot update.\");\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tcheckForUpdate();\r\n\t});\r\n} else {\r\n\tthrow new Error(\"[HMR] Hot Module Replacement is disabled.\");\r\n}\r\n","/home/travis/build/npmtest/node-npmtest-webpack/node_modules/webpack/lib/AmdMainTemplatePlugin.js":"/*\r\n MIT License http://www.opensource.org/licenses/mit-license.php\r\n Author Tobias Koppers @sokra\r\n */\r\n\r\n\"use strict\";\r\n\r\nconst ConcatSource = require(\"webpack-sources\").ConcatSource;\r\nconst Template = require(\"./Template\");\r\n\r\nclass AmdMainTemplatePlugin {\r\n\tconstructor(name) {\r\n\t\tthis.name = name;\r\n\t}\r\n\r\n\tapply(compilation) {\r\n\t\tconst mainTemplate = compilation.mainTemplate;\r\n\r\n\t\tcompilation.templatesPlugin(\"render-with-entry\", (source, chunk, hash) => {\r\n\t\t\tconst externals = chunk.modules.filter((m) => m.external);\r\n\t\t\tconst externalsDepsArray = JSON.stringify(externals.map((m) =>\r\n\t\t\t\ttypeof m.request === \"object\" ? m.request.amd : m.request\r\n\t\t\t));\r\n\t\t\tconst externalsArguments = externals.map((m) =>\r\n\t\t\t\tTemplate.toIdentifier(`__WEBPACK_EXTERNAL_MODULE_${m.id}__`)\r\n\t\t\t).join(\", \");\r\n\r\n\t\t\tif(this.name) {\r\n\t\t\t\tconst name = mainTemplate.applyPluginsWaterfall(\"asset-path\", this.name, {\r\n\t\t\t\t\thash,\r\n\t\t\t\t\tchunk\r\n\t\t\t\t});\r\n\r\n\t\t\t\treturn new ConcatSource(\r\n\t\t\t\t\t`define(${JSON.stringify(name)}, ${externalsDepsArray}, function(${externalsArguments}) { return `, source, \"});\"\r\n\t\t\t\t);\r\n\t\t\t} else if(externalsArguments) {\r\n\t\t\t\treturn new ConcatSource(`define(${externalsDepsArray}, function(${externalsArguments}) { return `, source, \"});\");\r\n\t\t\t} else {\r\n\t\t\t\treturn new ConcatSource(\"define(function() { return \", source, \"});\");\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tmainTemplate.plugin(\"global-hash-paths\", (paths) => {\r\n\t\t\tif(this.name) paths.push(this.name);\r\n\t\t\treturn paths;\r\n\t\t});\r\n\r\n\t\tmainTemplate.plugin(\"hash\", (hash) => {\r\n\t\t\thash.update(\"exports amd\");\r\n\t\t\thash.update(this.name);\r\n\t\t});\r\n\t}\r\n}\r\n\r\nmodule.exports = AmdMainTemplatePlugin;\r\n","/home/travis/build/npmtest/node-npmtest-webpack/node_modules/webpack/lib/DelegatedPlugin.js":"/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\n\r\n\"use strict\";\r\n\r\nconst DelegatedModuleFactoryPlugin = require(\"./DelegatedModuleFactoryPlugin\");\r\nconst DelegatedSourceDependency = require(\"./dependencies/DelegatedSourceDependency\");\r\n\r\nclass DelegatedPlugin {\r\n\tconstructor(options) {\r\n\t\tthis.options = options;\r\n\t}\r\n\r\n\tapply(compiler) {\r\n\t\tcompiler.plugin(\"compilation\", (compilation, params) => {\r\n\t\t\tcompilation.dependencyFactories.set(DelegatedSourceDependency, params.normalModuleFactory);\r\n\t\t});\r\n\r\n\t\tcompiler.plugin(\"compile\", (params) => {\r\n\t\t\tparams.normalModuleFactory.apply(new DelegatedModuleFactoryPlugin(this.options));\r\n\t\t});\r\n\t}\r\n}\r\n\r\nmodule.exports = DelegatedPlugin;\r\n","/home/travis/build/npmtest/node-npmtest-webpack/node_modules/webpack/lib/JsonpExportMainTemplatePlugin.js":"/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\n\"use strict\";\r\n\r\nconst ConcatSource = require(\"webpack-sources\").ConcatSource;\r\n\r\nclass JsonpExportMainTemplatePlugin {\r\n\tconstructor(name) {\r\n\t\tthis.name = name;\r\n\t}\r\n\r\n\tapply(compilation) {\r\n\t\tconst mainTemplate = compilation.mainTemplate;\r\n\r\n\t\tcompilation.templatesPlugin(\"render-with-entry\", (source, chunk, hash) => {\r\n\t\t\tconst name = mainTemplate.applyPluginsWaterfall(\"asset-path\", this.name || \"\", {\r\n\t\t\t\thash: hash,\r\n\t\t\t\tchunk: chunk\r\n\t\t\t});\r\n\t\t\treturn new ConcatSource(`${name}(`, source, \");\");\r\n\t\t});\r\n\r\n\t\tmainTemplate.plugin(\"global-hash-paths\", paths => {\r\n\t\t\tif(this.name) paths.push(this.name);\r\n\t\t\treturn paths;\r\n\t\t});\r\n\r\n\t\tmainTemplate.plugin(\"hash\", hash => {\r\n\t\t\thash.update(\"jsonp export\");\r\n\t\t\thash.update(`${this.name}`);\r\n\t\t});\r\n\t}\r\n}\r\n\r\nmodule.exports = JsonpExportMainTemplatePlugin;\r\n","/home/travis/build/npmtest/node-npmtest-webpack/node_modules/webpack/lib/JsonpMainTemplate.runtime.js":"/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\n/*globals hotAddUpdateChunk parentHotUpdateCallback document XMLHttpRequest $require$ $hotChunkFilename$ $hotMainFilename$ */\r\nmodule.exports = function() {\r\n\tfunction webpackHotUpdateCallback(chunkId, moreModules) { // eslint-disable-line no-unused-vars\r\n\t\thotAddUpdateChunk(chunkId, moreModules);\r\n\t\tif(parentHotUpdateCallback) parentHotUpdateCallback(chunkId, moreModules);\r\n\t} //$semicolon\r\n\r\n\tfunction hotDownloadUpdateChunk(chunkId) { // eslint-disable-line no-unused-vars\r\n\t\tvar head = document.getElementsByTagName(\"head\")[0];\r\n\t\tvar script = document.createElement(\"script\");\r\n\t\tscript.type = \"text/javascript\";\r\n\t\tscript.charset = \"utf-8\";\r\n\t\tscript.src = $require$.p + $hotChunkFilename$;\r\n\t\thead.appendChild(script);\r\n\t}\r\n\r\n\tfunction hotDownloadManifest() { // eslint-disable-line no-unused-vars\r\n\t\treturn new Promise(function(resolve, reject) {\r\n\t\t\tif(typeof XMLHttpRequest === \"undefined\")\r\n\t\t\t\treturn reject(new Error(\"No browser support\"));\r\n\t\t\ttry {\r\n\t\t\t\tvar request = new XMLHttpRequest();\r\n\t\t\t\tvar requestPath = $require$.p + $hotMainFilename$;\r\n\t\t\t\trequest.open(\"GET\", requestPath, true);\r\n\t\t\t\trequest.timeout = 10000;\r\n\t\t\t\trequest.send(null);\r\n\t\t\t} catch(err) {\r\n\t\t\t\treturn reject(err);\r\n\t\t\t}\r\n\t\t\trequest.onreadystatechange = function() {\r\n\t\t\t\tif(request.readyState !== 4) return;\r\n\t\t\t\tif(request.status === 0) {\r\n\t\t\t\t\t// timeout\r\n\t\t\t\t\treject(new Error(\"Manifest request to \" + requestPath + \" timed out.\"));\r\n\t\t\t\t} else if(request.status === 404) {\r\n\t\t\t\t\t// no update available\r\n\t\t\t\t\tresolve();\r\n\t\t\t\t} else if(request.status !== 200 && request.status !== 304) {\r\n\t\t\t\t\t// other failure\r\n\t\t\t\t\treject(new Error(\"Manifest request to \" + requestPath + \" failed.\"));\r\n\t\t\t\t} else {\r\n\t\t\t\t\t// success\r\n\t\t\t\t\ttry {\r\n\t\t\t\t\t\tvar update = JSON.parse(request.responseText);\r\n\t\t\t\t\t} catch(e) {\r\n\t\t\t\t\t\treject(e);\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tresolve(update);\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t});\r\n\t}\r\n};\r\n","/home/travis/build/npmtest/node-npmtest-webpack/node_modules/webpack/lib/MovedToPluginWarningPlugin.js":"/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\n\"use strict\";\r\nmodule.exports = class MovedToPluginWarningPlugin {\r\n\tconstructor(optionName, pluginName) {\r\n\t\tthis.optionName = optionName;\r\n\t\tthis.pluginName = pluginName;\r\n\t}\r\n\tapply(compiler) {\r\n\t\tconst optionName = this.optionName;\r\n\t\tconst pluginName = this.pluginName;\r\n\t\tcompiler.plugin(\"compilation\", (compilation) => {\r\n\t\t\tcompilation.warnings.push(new Error `webpack options:\r\n\t\t\tDEPRECATED option ${optionName} will be moved to the ${pluginName}. \r\n\t\t\tUse this instead.\r\n\t\t\tFor more info about the usage of the ${pluginName} see https://webpack.js.org/plugins/`);\r\n\t\t});\r\n\t}\r\n};\r\n","/home/travis/build/npmtest/node-npmtest-webpack/node_modules/webpack/lib/removeAndDo.js":"/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\n\"use strict\";\r\n\r\nmodule.exports = function removeAndDo(collection, thing, action) {\r\n\tconst idx = this[collection].indexOf(thing);\r\n\tconst hasThingInCollection = idx >= 0;\r\n\tif(hasThingInCollection) {\r\n\t\tthis[collection].splice(idx, 1);\r\n\t\tthing[action](this);\r\n\t}\r\n\treturn hasThingInCollection;\r\n};\r\n","/home/travis/build/npmtest/node-npmtest-webpack/node_modules/webpack/lib/webpack.web.js":"/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\n\"use strict\";\r\n\r\nconst Compiler = require(\"./Compiler\");\r\nconst WebEnvironmentPlugin = require(\"./web/WebEnvironmentPlugin\");\r\nconst WebpackOptionsApply = require(\"./WebpackOptionsApply\");\r\nconst WebpackOptionsDefaulter = require(\"./WebpackOptionsDefaulter\");\r\n\r\nfunction webpack(options, callback) {\r\n\tnew WebpackOptionsDefaulter().process(options);\r\n\r\n\tconst compiler = new Compiler();\r\n\tcompiler.options = options;\r\n\tcompiler.options = new WebpackOptionsApply().process(options, compiler);\r\n\tnew WebEnvironmentPlugin(options.inputFileSystem, options.outputFileSystem).apply(compiler);\r\n\tif(callback) {\r\n\t\tcompiler.run(callback);\r\n\t}\r\n\treturn compiler;\r\n}\r\nmodule.exports = webpack;\r\n\r\nwebpack.WebpackOptionsDefaulter = WebpackOptionsDefaulter;\r\nwebpack.WebpackOptionsApply = WebpackOptionsApply;\r\nwebpack.Compiler = Compiler;\r\nwebpack.WebEnvironmentPlugin = WebEnvironmentPlugin;\r\n","/home/travis/build/npmtest/node-npmtest-webpack/node_modules/webpack/lib/web/WebEnvironmentPlugin.js":"/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\n\"use strict\";\r\n\r\nclass WebEnvironmentPlugin {\r\n\tconstructor(inputFileSystem, outputFileSystem) {\r\n\t\tthis.inputFileSystem = inputFileSystem;\r\n\t\tthis.outputFileSystem = outputFileSystem;\r\n\t}\r\n\r\n\tapply(compiler) {\r\n\t\tcompiler.outputFileSystem = this.outputFileSystem;\r\n\t}\r\n}\r\n\r\nmodule.exports = WebEnvironmentPlugin;\r\n","/home/travis/build/npmtest/node-npmtest-webpack/node_modules/webpack/web_modules/node-libs-browser.js":""}